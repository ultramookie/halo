{"version":3,"mappings":"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","names":["window","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","useInterval","fn","deps","immediate","savedCallback","useRef","useEffect","current","id","setInterval","tick","clearInterval","openCompose","opts","url","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","alert","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","comment2","home","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","more2","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","info","shortcut","user","following","pin","unpin","bus","link","history","share","sparkles","sparkles2","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","filters","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","speak","building","history2","document","arrows-right","code","copy","quote","settings","heart-break","user-x","SIZES","s","m","l","xl","xxl","ICONDATA","SVGICon","moize","body","rotate","flip","_jsx","viewBox","dangerouslySetInnerHTML","__html","style","transform","isShallowEqual","maxSize","Object","keys","length","matchesArg","cacheKeyArg","keyArg","icon","Icon","size","alt","title","class","iconSize","iconBlock","warn","Array","iconData","setIconData","useState","currentIcon","iconB","useCloseWatcher","watcher","CloseWatcher","addEventListener","destroy","useCloseWatcher$1","$modalContainer","getElementById","Modal","children","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","supportsCloseWatcher","escRef","useHotkeys","enabled","keydown","keyup","ref","node","e","target","currentTarget","tabIndex","onFocus","isFocusable","getComputedStyle","pointerEvents","console","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","imageSmoothingEnabled","Avatar","squircle","avatarRef","isMissing","test","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","queueMicrotask","drawImage","allPixels","getImageData","hasAlpha","data","pixel","i","classList","add","clearRect","mem","Link","forwardRef","routerLocation","useLocation","hash","replace","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","key","value","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","states","prevLocation","root","documentElement","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","requestAnimationFrame","safeBoundingBoxPadding","paddings","v","CSS","supports","passive","Menu2","containerProps","instanceRef","_instanceRef","useWindowSize","Menu","boundingBoxPadding","repositionFlag","unmountOnClose","closeMenu","SubMenu2","menuRef","SubMenu","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","menuExtras","_jsxs","openTrigger","direction","overflow","gap","shift","menuClassName","menuButton","label","MenuItem","cloneElement","CustomEmoji","staticUrl","srcset","EmojiText","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","find","EmojiText$1","memo","oldProps","newProps","nameCollator","Intl","Collator","sensitivity","NameText","account","instance","showAvatar","showAcct","short","acct","avatar","avatarStatic","displayName","username","_","acct1","acct2","match","trimmedUsername","toLowerCase","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","compare","preventDefault","showAccount","_Fragment","newAccount","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","DateTimeFormat","RelativeTime","datetime","format","renderCount","rerender","useReducer","date","useMemo","dateStr","dt","str","now","diff","year","twitter","toDate","fromNow","toISOString","timeout","raf","rafRerender","scheduleRerender","cancelAnimationFrame","_localeMatch","args","localeMatch","locales","resolvedOptions","locale","navigator","languages","localeTargetLanguages","translationTargetLanguages","getTranslateTargetLanguage","fromSettings","contentTranslationTargetLanguage","IntlDN","DisplayNames","type","_localeCode2Text","of","localeCode2Text","emojifyText","forEach","fauxDiv","whitelistLinkClasses","_enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","shortenLink","links","usernames","innerText","hasChildren","domain","some","u","d","push","slice","textNodes","extractTextNodes","html","nodeValue","replaceWith","childNodes","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","index","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","URL_PREFIX_REGEX","URL_DISPLAY_LENGTH","prefix","displayURL","suffix","cutoff","rejectFilterMap","assign","reduce","acc","cur","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","el","append","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","hashURL","_b","_DateTimeFormat","dateYear","hideTime","formatOpts","currentYear","Date","getFullYear","day","hour","minute","niceDateTime","dtfOpts","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","useAvatarStatic","internal","showActivity","showStats","accountInstance","hideDisplayName","relationship","excludeRelationshipAttrs","statusesCount","lastStatusAt","fields","note","followersCount","createdAt","locked","verifiedField","f","verifiedAt","excludedRelationship","r","hasRelationship","followedBy","requested","supportsCache","feature","version","getCurrentInstance","range","features","satisfies","includePrerelease","loose","MenuLink","disabled","FocusableItem","detail","TOP","LazyShazam","containerRef","visible","setVisible","visibleStart","setVisibleStart","useInView","rootMargin","trackVisibility","onChange","inView","triggerOnce","skip","rect","getBoundingClientRect","bottom","innerHeight","hidden","define_import_meta_env_default","initDB","dbName","storeName","store","createStore","set","val","get","getMany","del","delMany","clear","db","drafts","catchup","Poll","lang","readOnly","votePoll","uiState","setUIState","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","dir","option","optionVotesCount","percentage","toFixed","isLeading","onSubmit","form","formData","FormData","choices","name","marginLeft","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","hasContext","context","isHidden","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","session","htmlContentLength","supportsTTS","speechSynthesis","speaking","cancel","utterance","SpeechSynthesisUtterance","statusPeek","status","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","visibilityIconsMap","public","unlisted","private","direct","formatDuration","hours","floor","minutes","seconds","toString","padStart","isSafari","userAgent","dataAltLabel","AltBadge","showMediaAlt","MEDIA_CAPTION_LIMIT","MEDIA_CAPTION_LIMIT_LONGER","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","allowLongerCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","Parent","remoteMediaURLObj","isVideoMaybe","isAudioMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","fetch","mode","backgroundImage","backgroundSize","QuickPinchZoom","objectPosition","shortDuration","duration","isGIF","loopable","formattedDuration","hoverAnimate","autoGIFAnimate","showProgress","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","onTimeUpdate","container","currentTime","controls","autoplay","SHOW_COMMENT_COUNT_LIMIT","INLINE_TRANSLATE_LIMIT","fetchAccount","masto","v1","accounts","$select","memFetchAccount","pmem","visibilityText","isIOS","ontouchstart","rtf","RelativeTimeFormat","REACTIONS_LIMIT","getPollText","getPostText","PostContent","post","language","a","removeAttribute","oldPost","newPost","Status","statusID","propInstance","contentTextWeight","enableCommentHint","withinContext","enableTranslate","forceTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","showFollowedTags","allowContextMenu","showActionsBar","showReplyParent","authenticated","api","currentInstance","sameInstance","sKey","statusKey","snapStates","useSnapshot","statuses","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","editedAt","card","inReplyToId","inReplyToAccountId","reblog","uri","tags","_deleted","_pinned","emojiReactions","currentAccount","useContext","filterInfo","debugHover","FilteredStatus","editedAtDate","inReplyToAccountRef","createdAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","showSpoiler","readingExpandMedia","prefs","showSpoilerMedia","setForceTranslate","targetLanguage","contentTranslationHideLanguages","contentTranslation","contentTranslationAutoInline","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showEmbed","setShowEmbed","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","_a","mediaNoDesc","showCompose","replyToStatus","statusMonthsAgo","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","saveStatus","favouriteStatus","favouriteStatusNotify","done","bookmarkStatus","bookmarkStatusNotify","reblogIterator","firstLoad","favouriteIterator","differentLanguage","reblogResults","_c","Promise","favouriteResults","_types","isPinnable","StatusMenuItems","replyStatus","canBoost","confirmBoostStatus","heading","fetchBoostedLikedByAccounts","showReactions","postID","MenuDivider","postText","createdDateText","nicePostURL","isPublic","cachedStatus","getStatus","setIsContextMenuOpen","contextMenuProps","bindLongPressContext","useLongPress","showContextMenu","clientX","clientY","setContextMenuProps","isContextMenuOpen","hotkeysEnabled","fRef","dRef","threshold","bRef","rRef","xRef","activeStatus","spoilerButton","spoilerMediaButton","displayedMediaAttachments","captionChildren","attachments","indices","showMultipleMediaCaptions","showCommentCount","isThread","StatusCompact","containsQuestion","nodeRef","selection","anchorNode","ControlledMenu","contextMenuRef","anchorPoint","state","portal","actionsRef","StatusButton","showCommentHint","statusThreadNumber","spoilers","spoilersMedia","QuoteStatuses","newPoll","pollResponse","TranslationBlock","polls","MultipleMediaFigure","emojiReaction","count","me","url2","isShortCode","checked","viewScroll","EditedAtModal","selfReferential","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","isMastodonLinkMaybe","unfurlMastodonLink","then","hasIframeHTML","setCardStatusURL","punycode","handleClick","blurhashImage","w","putImageData","videoID","videoid","toUnicode","setEditHistory","editHistory2","fetchStatusHistory","editHistory","log","error","Loader","generateHTMLCode","level","quotes","contentHTML","sourceMediaURL","previewMediaURL","mediaHTML","sourceMediaURLObj","htmlCode","prettify","EmbedModal","setButtonTitle","buttonTitle","iconAlt","urlObj","path","restPath","host","statusReply","srKey","statusPeekText","filterTitleStr","bindLongPressPeek","isReblog","actualStatusID","showPeek","isFollowedTags","setShowPeek","cancelOnMovement","ssKey","statusPeekRef","uniqueQuotes","q","arr","q2","statusQuotes","restNewProps","shallowEqual","restOldProps"],"ignoreList":[],"sources":["../../src/utils/show-toast.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/ICONS.jsx","../../src/components/icon.jsx","../../src/utils/useCloseWatcher.js","../../src/components/modal.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/components/menu2.jsx","../../src/components/submenu2.jsx","../../src/components/menu-confirm.jsx","../../src/components/custom-emoji.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/menu-link.jsx","../../src/components/lazy-shazam.jsx","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/components/poll.jsx","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/html-content-length.js","../../src/utils/speech.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/utils/visibility-icons-map.js","../../src/utils/format-duration.jsx","../../src/components/media.jsx","../../src/components/status.jsx"],"sourcesContent":["import Toastify from 'toastify-js';\n\nwindow._showToast = showToast;\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick, delay, ...rest } = props;\n  const toast = Toastify({\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick?.(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n  return toast;\n}\n\nexport default showToast;\n","import { useEffect, useRef } from 'preact/hooks';\n\nfunction useInterval(fn, delay, deps, immediate) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn, deps]);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts?.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  } else {\n    alert('Looks like your browser is blocking popups.');\n  }\n\n  return newWin;\n}\n","export const ICONS = {\n  x: () => import('@iconify-icons/mingcute/close-line'),\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\n  message: () => import('@iconify-icons/mingcute/mail-line'),\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\n  comment2: () => import('@iconify-icons/mingcute/comment-2-line'),\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\n  at: () => import('@iconify-icons/mingcute/at-line'),\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\n  more2: () => import('@iconify-icons/mingcute/more-1-fill'),\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\n  reply: [\n    () => import('@iconify-icons/mingcute/share-forward-line'),\n    '180deg',\n    'horizontal',\n  ],\n  thread: () => import('@iconify-icons/mingcute/route-line'),\n  group: () => import('@iconify-icons/mingcute/group-line'),\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\n  info: () => import('@iconify-icons/mingcute/information-line'),\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\n  following: () => import('@iconify-icons/mingcute/walk-line'),\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\n  unpin: [() => import('@iconify-icons/mingcute/pin-line'), '180deg'],\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\n  history: () => import('@iconify-icons/mingcute/history-line'),\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\n  sparkles2: () => import('@iconify-icons/mingcute/sparkles-2-line'),\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\n  play: () => import('@iconify-icons/mingcute/play-fill'),\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\n  unblock: [\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\n    '180deg',\n  ],\n  flag: () => import('@iconify-icons/mingcute/flag-1-line'),\n  time: () => import('@iconify-icons/mingcute/time-line'),\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\n  filters: () => import('@iconify-icons/mingcute/filter-line'),\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\n  react: () => import('@iconify-icons/mingcute/react-line'),\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\n  round: () => import('@iconify-icons/mingcute/round-fill'),\n  'arrow-up-circle': () =>\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\n  'arrow-down-circle': () =>\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\n  speak: () => import('@iconify-icons/mingcute/radar-line'),\n  building: () => import('@iconify-icons/mingcute/building-5-line'),\n  history2: () => import('@iconify-icons/mingcute/history-2-line'),\n  document: () => import('@iconify-icons/mingcute/document-line'),\n  'arrows-right': () => import('@iconify-icons/mingcute/arrows-right-line'),\n  code: () => import('@iconify-icons/mingcute/code-line'),\n  copy: () => import('@iconify-icons/mingcute/copy-2-line'),\n  quote: () => import('@iconify-icons/mingcute/quote-left-line'),\n  settings: () => import('@iconify-icons/mingcute/settings-6-line'),\n  'heart-break': () => import('@iconify-icons/mingcute/heart-crack-line'),\n  'user-x': () => import('@iconify-icons/mingcute/user-x-line'),\n};\n","import moize from 'moize';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { ICONS } from './ICONS';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nconst ICONDATA = {};\n\n// Memoize the dangerouslySetInnerHTML of the SVGs\nconst SVGICon = moize(\n  function ({ width, height, body, rotate, flip }) {\n    return (\n      <svg\n        viewBox={`0 0 ${width} ${height}`}\n        dangerouslySetInnerHTML={{ __html: body }}\n        style={{\n          transform: `${rotate ? `rotate(${rotate})` : ''} ${\n            flip ? `scaleX(-1)` : ''\n          }`,\n        }}\n      />\n    );\n  },\n  {\n    isShallowEqual: true,\n    maxSize: Object.keys(ICONS).length,\n    matchesArg: (cacheKeyArg, keyArg) =>\n      cacheKeyArg.icon === keyArg.icon && cacheKeyArg.body === keyArg.body,\n  },\n);\n\nfunction Icon({\n  icon,\n  size = 'm',\n  alt,\n  title,\n  class: className = '',\n  style = {},\n}) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconBlock = ICONS[icon];\n  if (!iconBlock) {\n    console.warn(`Icon ${icon} not found`);\n    return null;\n  }\n\n  let rotate, flip;\n  if (Array.isArray(iconBlock)) {\n    [iconBlock, rotate, flip] = iconBlock;\n  }\n\n  const [iconData, setIconData] = useState(ICONDATA[icon]);\n  const currentIcon = useRef(icon);\n  useEffect(() => {\n    if (iconData && currentIcon.current === icon) return;\n    (async () => {\n      const iconB = await iconBlock();\n      setIconData(iconB.default);\n      ICONDATA[icon] = iconB.default;\n    })();\n    currentIcon.current = icon;\n  }, [icon]);\n\n  return (\n    <span\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        ...style,\n      }}\n    >\n      {iconData && (\n        // <svg\n        //   width={iconSize}\n        //   height={iconSize}\n        //   viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n        //   dangerouslySetInnerHTML={{ __html: iconData.body }}\n        //   style={{\n        //     transform: `${rotate ? `rotate(${rotate})` : ''} ${\n        //       flip ? `scaleX(-1)` : ''\n        //     }`,\n        //   }}\n        // />\n        <SVGICon\n          icon={icon}\n          width={iconData.width}\n          height={iconData.height}\n          body={iconData.body}\n          rotate={rotate}\n          flip={flip}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default Icon;\n","import { useEffect } from 'preact/hooks';\n\nfunction useCloseWatcher(fn, deps = []) {\n  if (!fn || typeof fn !== 'function') return;\n  useEffect(() => {\n    const watcher = new CloseWatcher();\n    watcher.addEventListener('close', fn);\n    return () => {\n      watcher.destroy();\n    };\n  }, deps);\n}\n\nexport default window.CloseWatcher ? useCloseWatcher : () => {};\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport useCloseWatcher from '../utils/useCloseWatcher';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClose, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setTimeout(() => {\n        onClose?.();\n      }, 0);\n    },\n    {\n      enabled: !supportsCloseWatcher && !!onClose,\n      // Using keyup and setTimeout above\n      // This will run \"later\" to prevent clash with esc handlers from other components\n      keydown: false,\n      keyup: true,\n    },\n    [onClose],\n  );\n  useCloseWatcher(onClose, [onClose]);\n\n  const Modal = (\n    <div\n      ref={(node) => {\n        modalRef.current = node;\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\n      }}\n      className={className}\n      onClick={(e) => {\n        onClick?.(e);\n        if (e.target === e.currentTarget) {\n          onClose?.(e);\n        }\n      }}\n      tabIndex=\"-1\"\n      onFocus={(e) => {\n        try {\n          if (e.target === e.currentTarget) {\n            const focusElement =\n              modalRef.current?.querySelector('[tabindex=\"-1\"]');\n            const isFocusable =\n              !!focusElement &&\n              getComputedStyle(focusElement)?.pointerEvents !== 'none';\n            if (focusElement && isFocusable) {\n              focusElement.focus();\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import './avatar.css';\n\nimport { useRef } from 'preact/hooks';\n\nimport mem from '../utils/mem';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nconst alphaCache = {};\n\nconst canvas = window.OffscreenCanvas\n  ? new OffscreenCanvas(1, 1)\n  : document.createElement('canvas');\nconst ctx = canvas.getContext('2d', {\n  willReadFrequently: true,\n});\nctx.imageSmoothingEnabled = false;\n\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  const avatarRef = useRef();\n  const isMissing = /missing\\.png$/.test(url);\n  return (\n    <span\n      ref={avatarRef}\n      class={`avatar ${squircle ? 'squircle' : ''} ${\n        alphaCache[url] ? 'has-alpha' : ''\n      }`}\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img\n          src={url}\n          width={size}\n          height={size}\n          alt={alt}\n          loading=\"lazy\"\n          decoding=\"async\"\n          crossOrigin={\n            alphaCache[url] === undefined && !isMissing\n              ? 'anonymous'\n              : undefined\n          }\n          onError={(e) => {\n            if (e.target.crossOrigin) {\n              e.target.crossOrigin = null;\n              e.target.src = url;\n            }\n          }}\n          onLoad={(e) => {\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\n            if (alphaCache[url] !== undefined) return;\n            if (isMissing) return;\n            queueMicrotask(() => {\n              try {\n                // Check if image has alpha channel\n                const { width, height } = e.target;\n                if (canvas.width !== width) canvas.width = width;\n                if (canvas.height !== height) canvas.height = height;\n                ctx.drawImage(e.target, 0, 0);\n                const allPixels = ctx.getImageData(0, 0, width, height);\n                // At least 10% of pixels have alpha <= 128\n                const hasAlpha =\n                  allPixels.data.filter(\n                    (pixel, i) => i % 4 === 3 && pixel <= 128,\n                  ).length /\n                    (allPixels.data.length / 4) >\n                  0.1;\n                if (hasAlpha) {\n                  // console.log('hasAlpha', hasAlpha, allPixels.data);\n                  avatarRef.current.classList.add('has-alpha');\n                }\n                alphaCache[url] = hasAlpha;\n                ctx.clearRect(0, 0, width, height);\n              } catch (e) {\n                // Silent fail\n                alphaCache[url] = false;\n              }\n            });\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default mem(Avatar);\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n\n  // Handle encodeURIComponent of searchParams values\n  if (!!hash && hash !== '/' && hash.includes('?')) {\n    try {\n      const parsedHash = new URL(hash, location.origin); // Fake base URL\n      if (parsedHash.searchParams.size) {\n        const searchParamsStr = Array.from(parsedHash.searchParams.entries())\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n          .join('&');\n        hash = parsedHash.pathname + '?' + searchParamsStr;\n      }\n    } catch (e) {}\n  }\n\n  const isActive = hash === to || decodeURIComponent(hash) === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (e.currentTarget?.parentNode?.closest('a')) {\n          // If this <a> is nested inside another <a>\n          e.stopPropagation();\n        }\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","const root = document.documentElement;\nconst style = getComputedStyle(root);\nconst defaultBoundingBoxPadding = 8;\n\nlet safeAreaInsets = [0, 0, 0, 0];\nfunction getSafeAreaInsets() {\n  // Get safe area inset variables from root\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\n  safeAreaInsets = [\n    // top, right, bottom, left (clockwise)\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\n  ];\n}\nrequestAnimationFrame(getSafeAreaInsets);\n\nfunction safeBoundingBoxPadding(paddings = []) {\n  const str = safeAreaInsets\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\n    .join(' ');\n  // console.log(str);\n  return str;\n}\n\n// Update safe area insets when orientation or resize\nif (CSS.supports('top: env(safe-area-inset-top)')) {\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\n}\n\nexport default safeBoundingBoxPadding;\n","import { Menu } from '@szhsin/react-menu';\nimport { useWindowSize } from '@uidotdev/usehooks';\nimport { useRef } from 'preact/hooks';\n\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\n\n// It's like Menu but with sensible defaults, bug fixes and improvements.\nfunction Menu2(props) {\n  const { containerProps, instanceRef: _instanceRef } = props;\n  const size = useWindowSize();\n  const instanceRef = _instanceRef?.current ? _instanceRef : useRef();\n\n  return (\n    <Menu\n      boundingBoxPadding={safeBoundingBoxPadding()}\n      repositionFlag={`${size.width}x${size.height}`}\n      unmountOnClose\n      {...props}\n      instanceRef={instanceRef}\n      containerProps={{\n        onClick: (e) => {\n          if (e.target === e.currentTarget) {\n            instanceRef.current?.closeMenu?.();\n          }\n          containerProps?.onClick?.(e);\n        },\n        ...containerProps,\n      }}\n    />\n  );\n}\n\nexport default Menu2;\n","import { SubMenu } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\n\nexport default function SubMenu2(props) {\n  const menuRef = useRef();\n  return (\n    <SubMenu\n      {...props}\n      instanceRef={menuRef}\n      // Test fix for bug; submenus not opening on Android\n      itemProps={{\n        onPointerMove: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n        onPointerLeave: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n      }}\n    />\n  );\n}\n","import { MenuItem } from '@szhsin/react-menu';\nimport { cloneElement } from 'preact';\n\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction MenuConfirm({\n  subMenu = false,\n  confirm = true,\n  confirmLabel,\n  menuItemClassName,\n  menuFooter,\n  menuExtras,\n  ...props\n}) {\n  const { children, onClick, ...restProps } = props;\n  if (!confirm) {\n    if (subMenu) return <MenuItem {...props} />;\n    if (onClick) {\n      return cloneElement(children, {\n        onClick,\n      });\n    }\n    return children;\n  }\n  const Parent = subMenu ? SubMenu2 : Menu2;\n  return (\n    <Parent\n      openTrigger=\"clickOnly\"\n      direction=\"bottom\"\n      overflow=\"auto\"\n      gap={-8}\n      shift={8}\n      menuClassName=\"menu-emphasized\"\n      {...restProps}\n      menuButton={subMenu ? undefined : children}\n      label={subMenu ? children : undefined}\n    >\n      <MenuItem className={menuItemClassName} onClick={onClick}>\n        {confirmLabel}\n      </MenuItem>\n      {menuExtras}\n      {menuFooter}\n    </Parent>\n  );\n}\n\nexport default MenuConfirm;\n","export default function CustomEmoji({ staticUrl, alt, url }) {\n  return (\n    <picture>\n      {staticUrl && (\n        <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\n      )}\n      <img\n        key={alt || url}\n        src={url}\n        alt={alt}\n        class=\"shortcode-emoji emoji\"\n        width=\"16\"\n        height=\"16\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n    </picture>\n  );\n}\n","import { memo } from 'preact/compat';\n\nimport CustomEmoji from './custom-emoji';\n\nfunction EmojiText({ text, emojis }) {\n  if (!text) return '';\n  if (!emojis?.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  const regex = new RegExp(\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\n    'g',\n  );\n  const elements = text.split(regex).map((word) => {\n    const emoji = emojis.find((e) => e.shortcode === word);\n    if (emoji) {\n      const { url, staticUrl } = emoji;\n      return <CustomEmoji staticUrl={staticUrl} alt={word} url={url} />;\n    }\n    return word;\n  });\n  return elements;\n}\n\nexport default memo(\n  EmojiText,\n  (oldProps, newProps) =>\n    oldProps.text === newProps.text &&\n    oldProps.emojis?.length === newProps.emojis?.length,\n);\n","import './name-text.css';\n\nimport { memo } from 'preact/compat';\n\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\n\nconst nameCollator = new Intl.Collator('en', {\n  sensitivity: 'base',\n});\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\n    account;\n  let { username } = account;\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\n    /[^a-z0-9]/gi,\n    '',\n  ); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName ||\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\n      nameCollator.compare(trimmedUsername, shortenedDisplayName) === 0)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={\n        displayName\n          ? `${displayName} (${acct2 ? '' : '@'}${acct})`\n          : `${acct2 ? '' : '@'}${acct}`\n      }\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        e.stopPropagation();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>{username}</i>\n      ) : (\n        <b>{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>\n            {acct2 ? '' : '@'}\n            {acct1}\n            {!!acct2 && <span class=\"ib\">{acct2}</span>}\n          </i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default memo(NameText, (oldProps, newProps) => {\n  // Only care about account.id, the other props usually don't change\n  const { account } = oldProps;\n  const { account: newAccount } = newProps;\n  return account?.acct === newAccount?.acct;\n});\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useMemo, useReducer } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const [renderCount, rerender] = useReducer((x) => x + 1, 0);\n  const date = useMemo(() => dayjs(datetime), [datetime]);\n  const [dateStr, dt, title] = useMemo(() => {\n    let str;\n    if (format === 'micro') {\n      // If date <= 1 day ago or day is within this year\n      const now = dayjs();\n      const dayDiff = now.diff(date, 'day');\n      if (dayDiff <= 1 || now.year() === date.year()) {\n        str = date.twitter();\n      } else {\n        str = dtf.format(date.toDate());\n      }\n    }\n    if (!str) str = date.fromNow();\n    return [str, date.toISOString(), date.format('LLLL')];\n  }, [date, format, renderCount]);\n\n  useEffect(() => {\n    let timeout;\n    let raf;\n    function rafRerender() {\n      raf = requestAnimationFrame(() => {\n        rerender();\n        scheduleRerender();\n      });\n    }\n    function scheduleRerender() {\n      // If less than 1 minute, rerender every 10s\n      // If less than 1 hour rerender every 1m\n      // Else, don't need to rerender\n      if (date.diff(dayjs(), 'minute', true) < 1) {\n        timeout = setTimeout(rafRerender, 10_000);\n      } else if (date.diff(dayjs(), 'hour', true) < 1) {\n        timeout = setTimeout(rafRerender, 60_000);\n      }\n    }\n    scheduleRerender();\n    return () => {\n      clearTimeout(timeout);\n      cancelAnimationFrame(raf);\n    };\n  }, []);\n\n  return (\n    <time datetime={dt} title={title}>\n      {dateStr}\n    </time>\n  );\n}\n","import { match } from '@formatjs/intl-localematcher';\n\nimport mem from './mem';\n\nfunction _localeMatch(...args) {\n  // Wrap in try/catch because localeMatcher throws on invalid locales\n  try {\n    return match(...args);\n  } catch (e) {\n    const defaultLocale = args[2];\n    return defaultLocale || false;\n  }\n}\nconst localeMatch = mem(_localeMatch);\n\nexport default localeMatch;\n","import translationTargetLanguages from '../data/lingva-target-languages';\n\nimport localeMatch from './locale-match';\nimport states from './states';\n\nconst locales = [\n  new Intl.DateTimeFormat().resolvedOptions().locale,\n  ...navigator.languages,\n];\n\nconst localeTargetLanguages = localeMatch(\n  locales,\n  translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\n  'en',\n);\n\nfunction getTranslateTargetLanguage(fromSettings = false) {\n  if (fromSettings) {\n    const { contentTranslationTargetLanguage } = states.settings;\n    if (contentTranslationTargetLanguage) {\n      return contentTranslationTargetLanguage;\n    }\n  }\n  return localeTargetLanguages;\n}\n\nexport default getTranslateTargetLanguage;\n","import mem from './mem';\n\nconst IntlDN = new Intl.DisplayNames(navigator.languages, {\n  type: 'language',\n});\n\nfunction _localeCode2Text(code) {\n  try {\n    return IntlDN.of(code);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport default mem(_localeCode2Text);\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\nimport mem from './mem';\n\nconst fauxDiv = document.createElement('div');\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\n\nfunction _enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n  const hasLink = /<a/i.test(enhancedContent);\n  const hasCodeBlock = enhancedContent.includes('```');\n\n  if (hasLink) {\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\n    // E.g. `note` in `account`\n    const noTargetBlankLinks = dom.querySelectorAll('a:not([target=\"_blank\"])');\n    noTargetBlankLinks.forEach((link) => {\n      link.setAttribute('target', '_blank');\n    });\n\n    // Remove all classes except `u-url`, `mention`, `hashtag`\n    const links = dom.querySelectorAll('a[class]');\n    links.forEach((link) => {\n      link.classList.forEach((c) => {\n        if (!whitelistLinkClasses.includes(c)) {\n          link.classList.remove(c);\n        }\n      });\n    });\n  }\n\n  // Add 'has-url-text' to all links that contains a url\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    links.forEach((link) => {\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\n        link.classList.add('has-url-text');\n        shortenLink(link);\n      }\n    });\n  }\n\n  // Spanify un-spanned mentions\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    const usernames = [];\n    links.forEach((link) => {\n      const text = link.innerText.trim();\n      const hasChildren = link.querySelector('*');\n      // If text looks like @username@domain, then it's a mention\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\n        // Only show @username\n        const [_, username, domain] = text.split('@');\n        if (!hasChildren) {\n          if (\n            !usernames.some(([u]) => u === username) ||\n            usernames.some(([u, d]) => u === username && d === domain)\n          ) {\n            link.innerHTML = `@<span>${username}</span>`;\n            usernames.push([username, domain]);\n          } else {\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\n          }\n        }\n        link.classList.add('mention');\n      }\n      // If text looks like #hashtag, then it's a hashtag\n      if (/^#[^#]+$/g.test(text)) {\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\n        link.classList.add('mention', 'hashtag');\n      }\n    });\n  }\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes;\n  if (enhancedContent.includes(':')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (emojis) {\n        html = emojifyText(html, emojis);\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const blocks = [...dom.querySelectorAll('p')].filter((p) =>\n      /^```[^]+```$/g.test(p.innerText.trim()),\n    );\n    blocks.forEach((block) => {\n      const pre = document.createElement('pre');\n      // Replace <br /> with newlines\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n      block.replaceWith(pre);\n    });\n  }\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const paragraphs = [...dom.querySelectorAll('p')];\n    // Filter out paragraphs with ``` in beginning only\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n    codeBlocks.forEach((block) => {\n      const nextParagraphs = [block];\n      let hasCodeBlock = false;\n      let currentBlock = block;\n      while (currentBlock.nextElementSibling) {\n        const next = currentBlock.nextElementSibling;\n        if (next && next.tagName === 'P') {\n          if (/```$/g.test(next.innerText)) {\n            nextParagraphs.push(next);\n            hasCodeBlock = true;\n            break;\n          } else {\n            nextParagraphs.push(next);\n          }\n        } else {\n          break;\n        }\n        currentBlock = next;\n      }\n      if (hasCodeBlock) {\n        const pre = document.createElement('pre');\n        nextParagraphs.forEach((p) => {\n          // Replace <br /> with newlines\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n        });\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\n        block.replaceWith(pre);\n        nextParagraphs.forEach((p) => p.remove());\n      }\n    });\n  }\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  if (enhancedContent.includes('`')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/`[^`]+`/g.test(html)) {\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  if (/twitter\\.com/i.test(enhancedContent)) {\n    textNodes = extractTextNodes(dom, {\n      rejectFilter: ['A'],\n    });\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n        html = html.replaceAll(\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n        );\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // HASHTAG STUFFING\n  // ================\n  // Get the <p> that contains a lot of hashtags, add a class to it\n  if (enhancedContent.includes('#')) {\n    let prevIndex = null;\n    const hashtagStuffedParagraphs = [...dom.querySelectorAll('p')].filter(\n      (p, index) => {\n        let hashtagCount = 0;\n        for (let i = 0; i < p.childNodes.length; i++) {\n          const node = p.childNodes[i];\n\n          if (node.nodeType === Node.TEXT_NODE) {\n            const text = node.textContent.trim();\n            if (text !== '') {\n              return false;\n            }\n          } else if (node.tagName === 'BR') {\n            // Ignore <br />\n          } else if (node.tagName === 'A') {\n            const linkText = node.textContent.trim();\n            if (!linkText || !linkText.startsWith('#')) {\n              return false;\n            } else {\n              hashtagCount++;\n            }\n          } else {\n            return false;\n          }\n        }\n        // Only consider \"stuffing\" if:\n        // - there are more than 3 hashtags\n        // - there are more than 1 hashtag in adjacent paragraphs\n        if (hashtagCount > 3) {\n          prevIndex = index;\n          return true;\n        }\n        if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\n          prevIndex = index;\n          return true;\n        }\n      },\n    );\n    if (hashtagStuffedParagraphs?.length) {\n      hashtagStuffedParagraphs.forEach((p) => {\n        p.classList.add('hashtag-stuffing');\n        p.title = p.innerText;\n      });\n    }\n  }\n\n  if (postEnhanceDOM) {\n    queueMicrotask(() => postEnhanceDOM(dom));\n    // postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\nconst enhanceContent = mem(_enhanceContent);\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\n\nconst URL_PREFIX_REGEX = /^(https?:\\/\\/(www\\.)?|xmpp:)/;\nconst URL_DISPLAY_LENGTH = 30;\n// Similar to https://github.com/mastodon/mastodon/blob/1666b1955992e16f4605b414c6563ca25b3a3f18/app/lib/text_formatter.rb#L54-L69\nfunction shortenLink(link) {\n  if (!link || link.querySelector?.('*')) {\n    return;\n  }\n  try {\n    const url = link.innerText.trim();\n    const prefix = (url.match(URL_PREFIX_REGEX) || [])[0] || '';\n    if (!prefix) return;\n    const displayURL = url.slice(\n      prefix.length,\n      prefix.length + URL_DISPLAY_LENGTH,\n    );\n    const suffix = url.slice(prefix.length + URL_DISPLAY_LENGTH);\n    const cutoff = url.slice(prefix.length).length > URL_DISPLAY_LENGTH;\n    link.innerHTML = `<span class=\"invisible\">${prefix}</span><span class=${\n      cutoff ? 'ellipsis' : ''\n    }>${displayURL}</span><span class=\"invisible\">${suffix}</span>`;\n  } catch (e) {}\n}\n\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const rejectFilterMap = Object.assign(\n    {},\n    defaultRejectFilterMap,\n    opts.rejectFilter?.reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {}),\n  );\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (rejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","import mem from './mem';\n\nconst div = document.createElement('div');\nfunction getHTMLText(html) {\n  if (!html) return '';\n  div.innerHTML = html\n    .replace(/<\\/p>/g, '</p>\\n\\n')\n    .replace(/<\\/li>/g, '</li>\\n');\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n\n  // MASTODON-SPECIFIC classes\n  // Remove .invisible\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  // Add … at end of .ellipsis\n  div.querySelectorAll('.ellipsis').forEach((el) => {\n    el.append('...');\n  });\n\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\n}\n\nexport default mem(getHTMLText);\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\n      return;\n    }\n\n    const prevText = target.previousSibling?.textContent;\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\n    const textStartsWithAt = target.innerText.startsWith('@');\n    if (\n      ((target.classList.contains('u-url') ||\n        target.classList.contains('mention')) &&\n        textStartsWithAt) ||\n      (textBeforeLinkIsAt && !textStartsWithAt)\n    ) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      // Only fallback to acct/username check if url doesn't match\n      const mention =\n        mentions.find((mention) => mention.url === url) ||\n        mentions.find(\n          (mention) =>\n            mention.acct === username || mention.username === username,\n        );\n      console.warn('MENTION', mention, url);\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (!previewMode) {\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tag = target.innerText.replace(/^#/, '').trim();\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n        console.log({ hashURL });\n        location.hash = hashURL;\n      } else if (\n        states.unfurledLinks[target.href]?.url &&\n        statusURL !== target.href\n      ) {\n        // If unfurled AND not self-referential\n        e.preventDefault();\n        e.stopPropagation();\n        states.prevLocation = {\n          pathname: location.hash.replace(/^#/, ''),\n        };\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\n      }\n    }\n  };\n}\n\nexport default handleContentLinks;\n","import mem from './mem';\n\nconst { locale } = new Intl.DateTimeFormat().resolvedOptions();\n\nconst _DateTimeFormat = (opts) => {\n  const { dateYear, hideTime, formatOpts } = opts || {};\n  const currentYear = new Date().getFullYear();\n  return Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: dateYear === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    // Hide time if requested\n    hour: hideTime ? undefined : 'numeric',\n    minute: hideTime ? undefined : 'numeric',\n    ...formatOpts,\n  });\n};\nconst DateTimeFormat = mem(_DateTimeFormat);\n\nfunction niceDateTime(date, dtfOpts) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const DTF = DateTimeFormat({\n    dateYear: date.getFullYear(),\n    ...dtfOpts,\n  });\n  const dateText = DTF.format(date);\n  return dateText;\n}\n\nexport default niceDateTime;\n","const { locale } = Intl.NumberFormat().resolvedOptions();\nconst shortenNumber = Intl.NumberFormat(locale, {\n  notation: 'compact',\n}).format;\nexport default shortenNumber;\n","import './account-block.css';\n\n// import { useNavigate } from 'react-router-dom';\nimport enhanceContent from '../utils/enhance-content';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\n\nfunction AccountBlock({\n  skeleton,\n  account,\n  avatarSize = 'xl',\n  useAvatarStatic = false,\n  instance,\n  external,\n  internal,\n  onClick,\n  showActivity = false,\n  showStats = false,\n  accountInstance,\n  hideDisplayName = false,\n  relationship = {},\n  excludeRelationshipAttrs = [],\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"account-block skeleton\">\n        <Avatar size={avatarSize} />\n        <span>\n          <b>████████</b>\n          <br />\n          <span class=\"account-block-acct\">██████</span>\n        </span>\n      </div>\n    );\n  }\n\n  if (!account) {\n    return null;\n  }\n\n  // const navigate = useNavigate();\n\n  const {\n    id,\n    acct,\n    avatar,\n    avatarStatic,\n    displayName,\n    username,\n    emojis,\n    url,\n    statusesCount,\n    lastStatusAt,\n    bot,\n    fields,\n    note,\n    group,\n    followersCount,\n    createdAt,\n    locked,\n  } = account;\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n  if (accountInstance) {\n    acct2 = `@${accountInstance}`;\n  }\n\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\n\n  const excludedRelationship = {};\n  for (const r in relationship) {\n    if (!excludeRelationshipAttrs.includes(r)) {\n      excludedRelationship[r] = relationship[r];\n    }\n  }\n  const hasRelationship =\n    excludedRelationship.following ||\n    excludedRelationship.followedBy ||\n    excludedRelationship.requested;\n\n  return (\n    <a\n      class=\"account-block\"\n      href={url}\n      target={external ? '_blank' : null}\n      title={acct2 ? acct : `@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        if (internal) {\n          // navigate(`/${instance}/a/${id}`);\n          location.hash = `/${instance}/a/${id}`;\n        } else {\n          states.showAccount = {\n            account,\n            instance,\n          };\n        }\n      }}\n    >\n      <Avatar\n        url={useAvatarStatic ? avatarStatic : avatar || avatarStatic}\n        size={avatarSize}\n        squircle={bot}\n      />\n      <span class=\"account-block-content\">\n        {!hideDisplayName && (\n          <>\n            {displayName ? (\n              <b>\n                <EmojiText text={displayName} emojis={emojis} />\n              </b>\n            ) : (\n              <b>{username}</b>\n            )}\n          </>\n        )}{' '}\n        <span class=\"account-block-acct\">\n          {acct2 ? '' : '@'}\n          {acct1}\n          <wbr />\n          {acct2}\n          {locked && (\n            <>\n              {' '}\n              <Icon icon=\"lock\" size=\"s\" alt=\"Locked\" />\n            </>\n          )}\n        </span>\n        {showActivity && (\n          <>\n            <br />\n            <small class=\"last-status-at insignificant\">\n              Posts: {statusesCount}\n              {!!lastStatusAt && (\n                <>\n                  {' '}\n                  &middot; Last posted:{' '}\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </>\n              )}\n            </small>\n          </>\n        )}\n        {showStats && (\n          <div class=\"account-block-stats\">\n            {bot && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              </>\n            )}\n            {!!group && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              </>\n            )}\n            {hasRelationship && (\n              <div key={relationship.id} class=\"shazam-container-horizontal\">\n                <div class=\"shazam-container-inner\">\n                  {excludedRelationship.following &&\n                  excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Mutual</span>\n                  ) : excludedRelationship.requested ? (\n                    <span class=\"tag minimal\">Requested</span>\n                  ) : excludedRelationship.following ? (\n                    <span class=\"tag minimal\">Following</span>\n                  ) : excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Follows you</span>\n                  ) : null}\n                </div>\n              </div>\n            )}\n            {!!followersCount && (\n              <span class=\"ib\">\n                {shortenNumber(followersCount)}{' '}\n                {followersCount === 1 ? 'follower' : 'followers'}\n              </span>\n            )}\n            {!!verifiedField && (\n              <span class=\"verified-field\">\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(verifiedField.value, { emojis }),\n                  }}\n                />\n              </span>\n            )}\n            {!bot &&\n              !group &&\n              !hasRelationship &&\n              !followersCount &&\n              !verifiedField &&\n              !!createdAt && (\n                <span class=\"created-at\">\n                  Joined{' '}\n                  <time datetime={createdAt}>\n                    {niceDateTime(createdAt, {\n                      hideTime: true,\n                    })}\n                  </time>\n                </span>\n              )}\n          </div>\n        )}\n      </span>\n    </a>\n  );\n}\n\nexport default AccountBlock;\n","import { satisfies } from 'compare-versions';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  const { className, disabled, ...restProps } = props;\n  return (\n    <FocusableItem className={className} disabled={disabled}>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...restProps}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","/*\n  Rendered but hidden. Only show when visible\n*/\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useInView } from 'react-intersection-observer';\n\n// The sticky header, usually at the top\nconst TOP = 48;\n\nexport default function LazyShazam({ children }) {\n  const containerRef = useRef();\n  const [visible, setVisible] = useState(false);\n  const [visibleStart, setVisibleStart] = useState(false);\n\n  const { ref } = useInView({\n    root: null,\n    rootMargin: `-${TOP}px 0px 0px 0px`,\n    trackVisibility: true,\n    delay: 1000,\n    onChange: (inView) => {\n      if (inView) {\n        setVisible(true);\n      }\n    },\n    triggerOnce: true,\n    skip: visibleStart || visible,\n  });\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    if (rect.bottom > TOP) {\n      if (rect.top < window.innerHeight) {\n        setVisible(true);\n      } else {\n        setVisibleStart(true);\n      }\n    }\n  }, []);\n\n  if (visibleStart) return children;\n\n  return (\n    <div\n      ref={containerRef}\n      class=\"shazam-container no-animation\"\n      hidden={!visible}\n    >\n      <div ref={ref} class=\"shazam-container-inner\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","import './translation-block.css';\n\nimport pRetry from 'p-retry';\nimport pThrottle from 'p-throttle';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport sourceLanguages from '../data/lingva-source-languages';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport pmem from '../utils/pmem';\n\nimport Icon from './icon';\nimport LazyShazam from './lazy-shazam';\nimport Loader from './loader';\n\nconst { PHANPY_LINGVA_INSTANCES } = import.meta.env;\nconst LINGVA_INSTANCES = PHANPY_LINGVA_INSTANCES\n  ? PHANPY_LINGVA_INSTANCES.split(/\\s+/)\n  : [];\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 2000,\n});\n\nlet currentLingvaInstance = 0;\n\nfunction _lingvaTranslate(text, source, target) {\n  console.log('TRANSLATE', text, source, target);\n  const fetchCall = () => {\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\n    return fetch(\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\n        text,\n      )}`,\n    )\n      .then((res) => {\n        if (!res.ok) throw new Error(res.statusText);\n        return res.json();\n      })\n      .then((res) => {\n        return {\n          provider: 'lingva',\n          content: res.translation,\n          detectedSourceLanguage: res.info?.detectedSource,\n          info: res.info,\n        };\n      });\n  };\n  return pRetry(fetchCall, {\n    retries: 3,\n    onFailedAttempt: (e) => {\n      currentLingvaInstance =\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\n      console.log(\n        'Retrying translation with another instance',\n        currentLingvaInstance,\n      );\n    },\n  });\n  // return masto.v1.statuses.$select(id).translate({\n  //   lang: DEFAULT_LANG,\n  // });\n}\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\nconst lingvaTranslate = pmem(_lingvaTranslate, {\n  maxAge: TRANSLATED_MAX_AGE,\n});\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\n  // I know, this is double-layered memoization\n  maxAge: TRANSLATED_MAX_AGE,\n});\n\nfunction TranslationBlock({\n  forceTranslate,\n  sourceLanguage,\n  onTranslate,\n  text = '',\n  mini,\n}) {\n  const targetLang = getTranslateTargetLanguage(true);\n  const [uiState, setUIState] = useState('default');\n  const [pronunciationContent, setPronunciationContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [detectedLang, setDetectedLang] = useState(null);\n  const detailsRef = useRef();\n\n  const sourceLangText = sourceLanguage\n    ? localeCode2Text(sourceLanguage)\n    : null;\n  const targetLangText = localeCode2Text(targetLang);\n  const apiSourceLang = useRef('auto');\n\n  if (!onTranslate) {\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\n  }\n\n  const translate = async () => {\n    setUIState('loading');\n    try {\n      const { content, detectedSourceLanguage, provider, error, ...props } =\n        await onTranslate(text, apiSourceLang.current, targetLang);\n      if (content) {\n        if (detectedSourceLanguage) {\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\n          setDetectedLang(detectedLangText);\n        }\n        if (provider === 'lingva') {\n          const pronunciation = props?.info?.pronunciation?.query;\n          if (pronunciation) {\n            setPronunciationContent(pronunciation);\n          }\n        }\n        setTranslatedContent(content);\n        setUIState('default');\n        if (!mini && content.trim() !== text.trim()) {\n          detailsRef.current.open = true;\n          detailsRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      } else {\n        if (error) console.error(error);\n        setUIState('error');\n      }\n    } catch (e) {\n      console.error(e);\n      setUIState('error');\n    }\n  };\n\n  useEffect(() => {\n    if (forceTranslate) {\n      translate();\n    }\n  }, [forceTranslate]);\n\n  if (mini) {\n    if (\n      !!translatedContent &&\n      translatedContent.trim() !== text.trim() &&\n      detectedLang !== targetLangText\n    ) {\n      return (\n        <LazyShazam>\n          <div class=\"status-translation-block-mini\">\n            <Icon\n              icon=\"translate\"\n              alt={`Auto-translated from ${sourceLangText}`}\n            />\n            <output\n              lang={targetLang}\n              dir=\"auto\"\n              title={pronunciationContent || ''}\n            >\n              {translatedContent}\n            </output>\n          </div>\n        </LazyShazam>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div\n      class=\"status-translation-block\"\n      onClick={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <details ref={detailsRef}>\n        <summary>\n          <button\n            type=\"button\"\n            onClick={async (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              detailsRef.current.open = !detailsRef.current.open;\n              if (uiState === 'loading') return;\n              if (!translatedContent) translate();\n            }}\n          >\n            <Icon icon=\"translate\" />{' '}\n            <span>\n              {uiState === 'loading'\n                ? 'Translating…'\n                : sourceLanguage && sourceLangText && !detectedLang\n                ? `Translate from ${sourceLangText}`\n                : `Translate`}\n            </span>\n          </button>\n        </summary>\n        <div class=\"translated-block\">\n          <div class=\"translation-info insignificant\">\n            <select\n              class=\"translated-source-select\"\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                apiSourceLang.current = e.target.value;\n                translate();\n              }}\n            >\n              {sourceLanguages.map((l) => (\n                <option value={l.code}>\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\n                </option>\n              ))}\n            </select>{' '}\n            <span>→ {targetLangText}</span>\n            <Loader abrupt hidden={uiState !== 'loading'} />\n          </div>\n          {uiState === 'error' ? (\n            <p class=\"ui-state\">Failed to translate</p>\n          ) : (\n            !!translatedContent && (\n              <>\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\n                  {translatedContent}\n                </output>\n                {!!pronunciationContent && (\n                  <output\n                    class=\"translated-pronunciation-content\"\n                    tabIndex={-1}\n                    onClick={(e) => {\n                      e.target.classList.toggle('expand');\n                    }}\n                  >\n                    {pronunciationContent}\n                  </output>\n                )}\n              </>\n            )\n          )}\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default LINGVA_INSTANCES?.length ? TranslationBlock : () => null;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nfunction initDB(dbName, storeName) {\n  const store = createStore(dbName, storeName);\n  return {\n    set: (key, val) => set(key, val, store),\n    get: (key) => get(key, store),\n    getMany: (keys) => getMany(keys, store),\n    del: (key) => del(key, store),\n    delMany: (keys) => delMany(keys, store),\n    clear: () => clear(store),\n    keys: () => keys(store),\n  };\n}\n\nexport default {\n  drafts: initDB('drafts-db', 'drafts-store'),\n  catchup: initDB('catchup-db', 'catchup-store'),\n};\n","import { useState } from 'preact/hooks';\n\nimport shortenNumber from '../utils/shorten-number';\n\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport RelativeTime from './relative-time';\n\nexport default function Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n    emojis,\n  } = poll;\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\n  // https://stackoverflow.com/a/56718027/20838\n  // useEffect(() => {\n  //   let timeout;\n  //   if (!expired && expiresAtDate) {\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n  //     if (ms > 0) {\n  //       timeout = setTimeout(() => {\n  //         setUIState('loading');\n  //         (async () => {\n  //           // await refresh();\n  //           setUIState('default');\n  //         })();\n  //       }, ms);\n  //     }\n  //   }\n  //   return () => {\n  //     clearTimeout(timeout);\n  //   };\n  // }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\n\n  return (\n    <div\n      lang={lang}\n      dir=\"auto\"\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\n        <>\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title, votesCount: optionVotesCount } = option;\n              const percentage = pollVotesCount\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                    roundPrecision,\n                  )\n                : 0; // check if current poll choice is the leading one\n\n              const isLeading =\n                optionVotesCount > 0 &&\n                optionVotesCount ===\n                  Math.max(...options.map((o) => o.votesCount));\n              return (\n                <div\n                  key={`${i}-${title}-${optionVotesCount}`}\n                  class={`poll-option poll-result ${\n                    isLeading ? 'poll-option-leading' : ''\n                  }`}\n                  style={{\n                    '--percentage': `${percentage}%`,\n                  }}\n                >\n                  <div class=\"poll-option-title\">\n                    <span>\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                    {voted && ownVotes.includes(i) && (\n                      <>\n                        {' '}\n                        <Icon icon=\"check-circle\" />\n                      </>\n                    )}\n                  </div>\n                  <div\n                    class=\"poll-option-votes\"\n                    title={`${optionVotesCount} vote${\n                      optionVotesCount === 1 ? '' : 's'\n                    }`}\n                  >\n                    {percentage}%\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {!expired && !voted && (\n            <button\n              class=\"poll-vote-button plain2\"\n              disabled={uiState === 'loading'}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowResults(false);\n              }}\n            >\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\n            </button>\n          )}\n        </>\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title } = option;\n              return (\n                <div class=\"poll-option\">\n                  <label class=\"poll-label\">\n                    <input\n                      type={multiple ? 'checkbox' : 'radio'}\n                      name=\"poll\"\n                      value={i}\n                      disabled={uiState === 'loading'}\n                      readOnly={readOnly}\n                    />\n                    <span class=\"poll-option-title\">\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      <p class=\"poll-meta\">\n        {!expired && !readOnly && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            style={{\n              marginLeft: -8,\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setUIState('loading');\n\n              (async () => {\n                await refresh();\n                setUIState('default');\n              })();\n            }}\n            title=\"Refresh\"\n          >\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\n          </button>\n        )}\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            onClick={(e) => {\n              e.preventDefault();\n              setShowResults(!showResults);\n            }}\n            title={showResults ? 'Hide results' : 'Show results'}\n          >\n            <Icon\n              icon={showResults ? 'eye-open' : 'eye-close'}\n              alt={showResults ? 'Hide results' : 'Show results'}\n            />{' '}\n          </button>\n        )}\n        {!expired && !readOnly && ' '}\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n        {votesCount === 1 ? '' : 's'}\n        {!!votersCount && votersCount !== votesCount && (\n          <>\n            {' '}\n            &bull; <span title={votersCount}>\n              {shortenNumber(votersCount)}\n            </span>{' '}\n            voter\n            {votersCount === 1 ? '' : 's'}\n          </>\n        )}{' '}\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n      </p>{' '}\n    </div>\n  );\n}\n","import { createContext } from 'preact';\n\nconst FilterContext = createContext();\nexport default FilterContext;\n","import mem from './mem';\nimport store from './store';\n\nfunction _isFiltered(filtered, filterContext) {\n  if (!filtered?.length) return false;\n  const appliedFilters = filtered.filter((f) => {\n    const { filter } = f;\n    const hasContext = filter.context.includes(filterContext);\n    if (!hasContext) return false;\n    if (!filter.expiresAt) return hasContext;\n    return new Date(filter.expiresAt) > new Date();\n  });\n  if (!appliedFilters.length) return false;\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\n  if (isHidden)\n    return {\n      action: 'hide',\n    };\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\n  if (isWarn) {\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\n    return {\n      action: 'warn',\n      titles: filterTitles,\n      titlesStr: filterTitles.join(' • '),\n    };\n  }\n  return false;\n}\nexport const isFiltered = mem(_isFiltered);\n\nexport function filteredItem(item, filterContext, currentAccountID) {\n  const { filtered } = item;\n  if (!filtered?.length) return true;\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\n  if (isSelf) return true;\n  const filterState = isFiltered(filtered, filterContext);\n  if (!filterState) return true;\n  if (filterState.action === 'hide') return false;\n  // item._filtered = filterState;\n  return true;\n}\nexport function filteredItems(items, filterContext) {\n  if (!items?.length) return [];\n  if (!filterContext) return items;\n  const currentAccountID = store.session.get('currentAccount');\n  return items.filter((item) =>\n    filteredItem(item, filterContext, currentAccountID),\n  );\n}\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  // .invisible spans for links\n  // e.g. <span class=\"invisible\">https://</span>mastodon.social\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  return div.innerText.length;\n}\n","export const supportsTTS = 'speechSynthesis' in window;\n\nexport function speak(text, lang) {\n  if (!supportsTTS) return;\n  try {\n    if (speechSynthesis.speaking) {\n      speechSynthesis.cancel();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (lang) utterance.lang = lang;\n    speechSynthesis.speak(utterance);\n  } catch (e) {\n    alert(e);\n  }\n}\n","import getHTMLText from './getHTMLText';\n\nfunction statusPeek(status) {\n  const { spoilerText, content, poll, mediaAttachments } = status;\n  let text = '';\n  if (spoilerText?.trim()) {\n    text += spoilerText;\n  } else {\n    text += getHTMLText(content);\n  }\n  text = text.trim();\n  if (poll?.options?.length) {\n    text += `\\n\\n📊:\\n${poll.options\n      .map((o) => `${poll.multiple ? '▪️' : '•'} ${o.title}`)\n      .join('\\n')}`;\n  }\n  if (mediaAttachments?.length) {\n    text +=\n      ' ' +\n      mediaAttachments\n        .map(\n          (m) =>\n            ({\n              image: '🖼️',\n              gifv: '🎞️',\n              video: '📹',\n              audio: '🎵',\n              unknown: '',\n            }[m.type] || ''),\n        )\n        .join('');\n  }\n  return text;\n}\n\nexport default statusPeek;\n","import { useRef } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\nimport useResizeObserver from 'use-resize-observer';\n\nexport default function useTruncated({ className = 'truncated' } = {}) {\n  const ref = useRef();\n  const onResize = useThrottledCallback(({ height }) => {\n    if (ref.current) {\n      const { scrollHeight } = ref.current;\n      let truncated = scrollHeight > height;\n      if (truncated) {\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\n        const computedHeight = parseInt(maxHeight || _height, 10);\n        truncated = scrollHeight > computedHeight;\n      }\n      ref.current.classList.toggle(className, truncated);\n    }\n  }, 300);\n  useResizeObserver({\n    ref,\n    box: 'border-box',\n    onResize,\n  });\n  return ref;\n}\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","export default function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport {\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\n\nimport formatDuration from '../utils/format-duration';\nimport mem from '../utils/mem';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nconst dataAltLabel = 'ALT';\nconst AltBadge = (props) => {\n  const { alt, lang, index, ...rest } = props;\n  if (!alt || !alt.trim()) return null;\n  return (\n    <button\n      type=\"button\"\n      class=\"alt-badge clickable\"\n      {...rest}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        states.showMediaAlt = {\n          alt,\n          lang,\n        };\n      }}\n      title=\"Media description\"\n    >\n      {dataAltLabel}\n      {!!index && <sup>{index}</sup>}\n    </button>\n  );\n};\n\nconst MEDIA_CAPTION_LIMIT = 140;\nconst MEDIA_CAPTION_LIMIT_LONGER = 280;\nexport const isMediaCaptionLong = mem((caption) =>\n  caption?.length\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\n    : false,\n);\n\nfunction Media({\n  class: className = '',\n  media,\n  to,\n  lang,\n  showOriginal,\n  autoAnimate,\n  showCaption,\n  allowLongerCaption,\n  altIndex,\n  onClick = () => {},\n}) {\n  const {\n    blurhash,\n    description,\n    meta,\n    previewRemoteUrl,\n    previewUrl,\n    remoteUrl,\n    url,\n    type,\n  } = media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl || url;\n  const remoteMediaURL = showOriginal\n    ? remoteUrl\n    : previewRemoteUrl || remoteUrl;\n  const orientation = width >= height ? 'landscape' : 'portrait';\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  const mediaRef = useRef();\n  const onUpdate = useCallback(({ x, y, scale }) => {\n    const { current: media } = mediaRef;\n\n    if (media) {\n      const value = make3dTransformValue({ x, y, scale });\n\n      if (scale === 1) {\n        media.style.removeProperty('transform');\n      } else {\n        media.style.setProperty('transform', value);\n      }\n\n      media.closest('.media-zoom').style.touchAction =\n        scale <= 1.01 ? 'pan-x' : '';\n    }\n  }, []);\n\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\n  const quickPinchZoomProps = {\n    enabled: pinchZoomEnabled,\n    draggableUnZoomed: false,\n    inertiaFriction: 0.9,\n    doubleTapZoomOutOnMaxScale: true,\n    containerProps: {\n      className: 'media-zoom',\n      style: {\n        overflow: 'visible',\n        //   width: 'inherit',\n        //   height: 'inherit',\n        //   justifyContent: 'inherit',\n        //   alignItems: 'inherit',\n        //   display: 'inherit',\n      },\n    },\n    onUpdate,\n  };\n\n  const Parent = useMemo(\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\n    [to],\n  );\n\n  const remoteMediaURLObj = remoteMediaURL ? new URL(remoteMediaURL) : null;\n  const isVideoMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp4|m4r|m4v|mov|webm)$/i.test(remoteMediaURLObj.pathname);\n  const isAudioMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(remoteMediaURLObj.pathname);\n  const isImage =\n    type === 'image' ||\n    (type === 'unknown' && previewUrl && !isVideoMaybe && !isAudioMaybe);\n\n  const parentRef = useRef();\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\n  useLayoutEffect(() => {\n    if (!isImage) return;\n    if (!showOriginal) return;\n    if (!parentRef.current) return;\n    const { offsetWidth, offsetHeight } = parentRef.current;\n    const smaller = width < offsetWidth && height < offsetHeight;\n    if (smaller) setImageSmallerThanParent(smaller);\n  }, [width, height]);\n\n  const maxAspectHeight =\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\n  const averageColorStyle = {\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n  };\n  const mediaStyles =\n    width && height\n      ? {\n          '--width': `${width}px`,\n          '--height': `${height}px`,\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\n          '--aspectWidth': `${\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\n          }px`,\n          aspectRatio: `${width} / ${height}`,\n          ...averageColorStyle,\n        }\n      : {\n          ...averageColorStyle,\n        };\n\n  const longDesc = isMediaCaptionLong(description);\n  let showInlineDesc =\n    !!showCaption && !showOriginal && !!description && !longDesc;\n  if (\n    allowLongerCaption &&\n    !showInlineDesc &&\n    description?.length <= MEDIA_CAPTION_LIMIT_LONGER\n  ) {\n    showInlineDesc = true;\n  }\n  const Figure = !showInlineDesc\n    ? Fragment\n    : (props) => {\n        const { children, ...restProps } = props;\n        return (\n          <figure {...restProps}>\n            {children}\n            <figcaption\n              class=\"media-caption\"\n              lang={lang}\n              dir=\"auto\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                states.showMediaAlt = {\n                  alt: description,\n                  lang,\n                };\n              }}\n            >\n              {description}\n            </figcaption>\n          </figure>\n        );\n      };\n\n  if (isImage) {\n    // Note: type: unknown might not have width/height\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\n\n    useLayoutEffect(() => {\n      if (!isSafari) return;\n      if (!showOriginal) return;\n      (async () => {\n        try {\n          await fetch(mediaURL, { mode: 'no-cors' });\n          mediaRef.current.src = mediaURL;\n        } catch (e) {\n          // Ignore\n        }\n      })();\n    }, [mediaURL]);\n\n    return (\n      <Figure>\n        <Parent\n          ref={parentRef}\n          class={`media media-image ${className}`}\n          onClick={onClick}\n          data-orientation={orientation}\n          data-has-alt={!showInlineDesc}\n          style={\n            showOriginal\n              ? {\n                  backgroundImage: `url(${previewUrl})`,\n                  backgroundSize: imageSmallerThanParent\n                    ? `${width}px ${height}px`\n                    : undefined,\n                  ...averageColorStyle,\n                }\n              : mediaStyles\n          }\n        >\n          {showOriginal ? (\n            <QuickPinchZoom {...quickPinchZoomProps}>\n              <img\n                ref={mediaRef}\n                src={mediaURL}\n                alt={description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"eager\"\n                decoding=\"sync\"\n                onLoad={(e) => {\n                  e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.closest('.media-zoom').style.display = '';\n                  setPinchZoomEnabled(true);\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n            </QuickPinchZoom>\n          ) : (\n            <>\n              <img\n                src={mediaURL}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n                style={{\n                  // backgroundColor:\n                  //   rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n                  // backgroundPosition: focalBackgroundPosition || 'center',\n                  // Duration based on width or height in pixels\n                  objectPosition: focalPosition || 'center',\n                  // 100px per second (rough estimate)\n                  // Clamp between 5s and 120s\n                  '--anim-duration': `${Math.min(\n                    Math.max(Math.max(width, height) / 100, 5),\n                    120,\n                  )}s`,\n                }}\n                onLoad={(e) => {\n                  // e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.dataset.loaded = true;\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n    const showProgress = original.duration > 5;\n\n    const videoHTML = `\n    <video\n      src=\"${url}\"\n      poster=\"${previewUrl}\"\n      width=\"${width}\"\n      height=\"${height}\"\n      data-orientation=\"${orientation}\"\n      preload=\"auto\"\n      autoplay\n      muted=\"${isGIF}\"\n      ${isGIF ? '' : 'controls'}\n      playsinline\n      loop=\"${loopable}\"\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\n      ${\n        isGIF && showProgress\n          ? \"ontimeupdate=\\\"this.closest('.media-gif') && this.closest('.media-gif').style.setProperty('--progress', `${~~((this.currentTime / this.duration) * 100)}%`)\\\"\"\n          : ''\n      }\n    ></video>\n  `;\n\n    return (\n      <Figure>\n        <Parent\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\n            autoGIFAnimate ? 'media-contain' : ''\n          } ${hoverAnimate ? 'media-hover-animate' : ''}`}\n          data-orientation={orientation}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n          data-has-alt={!showInlineDesc}\n          // style={{\n          //   backgroundColor:\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n          // }}\n          style={!showOriginal && mediaStyles}\n          onClick={(e) => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n            onClick(e);\n          }}\n          onMouseEnter={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onMouseLeave={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n          onFocus={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onBlur={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n        >\n          {showOriginal || autoGIFAnimate ? (\n            isGIF && showOriginal ? (\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\n                <div\n                  ref={mediaRef}\n                  dangerouslySetInnerHTML={{\n                    __html: videoHTML,\n                  }}\n                />\n              </QuickPinchZoom>\n            ) : (\n              <div\n                class=\"video-container\"\n                dangerouslySetInnerHTML={{\n                  __html: videoHTML,\n                }}\n              />\n            )\n          ) : isGIF ? (\n            <video\n              ref={videoRef}\n              src={url}\n              poster={previewUrl}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              preload=\"auto\"\n              // controls\n              playsinline\n              loop\n              muted\n              onTimeUpdate={\n                showProgress\n                  ? (e) => {\n                      const { target } = e;\n                      const container = target?.closest('.media-gif');\n                      if (container) {\n                        const percentage =\n                          (target.currentTime / target.duration) * 100;\n                        container.style.setProperty(\n                          '--progress',\n                          `${percentage}%`,\n                        );\n                      }\n                    }\n                  : undefined\n              }\n            />\n          ) : (\n            <>\n              <img\n                src={previewUrl}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n              />\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n            </>\n          )}\n          {!showOriginal && !showInlineDesc && (\n            <AltBadge alt={description} lang={lang} index={altIndex} />\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'audio' || isAudioMaybe) {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <Figure>\n        <Parent\n          class={`media media-audio ${className}`}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-has-alt={!showInlineDesc}\n          onClick={onClick}\n          style={!showOriginal && mediaStyles}\n        >\n          {showOriginal ? (\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n          ) : previewUrl ? (\n            <img\n              src={previewUrl}\n              alt={showInlineDesc ? '' : description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"lazy\"\n              onError={(e) => {\n                try {\n                  // Remove self if broken\n                  e.target?.remove?.();\n                } catch (e) {}\n              }}\n            />\n          ) : null}\n          {!showOriginal && (\n            <>\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  }\n}\n\nexport default Media;\n","import './status.css';\n\nimport '@justinribeiro/lite-youtube';\nimport {\n  ControlledMenu,\n  Menu,\n  MenuDivider,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { decodeBlurHash, getBlurHashAverageColor } from 'fast-blurhash';\nimport { shallowEqual } from 'fast-equals';\nimport prettify from 'html-prettify';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport CustomEmoji from '../components/custom-emoji';\nimport EmojiText from '../components/emoji-text';\nimport LazyShazam from '../components/lazy-shazam';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport Poll from '../components/poll';\nimport { api } from '../utils/api';\nimport emojifyText from '../utils/emojify-text';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\nimport localeMatch from '../utils/locale-match';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport unfurlMastodonLink from '../utils/unfurl-link';\nimport useTruncated from '../utils/useTruncated';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport { isMediaCaptionLong } from './media';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport TranslationBlock from './translation-block';\n\nconst SHOW_COMMENT_COUNT_LIMIT = 280;\nconst INLINE_TRANSLATE_LIMIT = 140;\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Private mention',\n};\n\nconst isIOS =\n  window.ontouchstart !== undefined &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst rtf = new Intl.RelativeTimeFormat();\n\nconst REACTIONS_LIMIT = 80;\n\nfunction getPollText(poll) {\n  if (!poll?.options?.length) return '';\n  return `📊:\\n${poll.options\n    .map(\n      (option) =>\n        `- ${option.title}${\n          option.votesCount >= 0 ? ` (${option.votesCount})` : ''\n        }`,\n    )\n    .join('\\n')}`;\n}\nfunction getPostText(status) {\n  const { spoilerText, content, poll } = status;\n  return (\n    (spoilerText ? `${spoilerText}\\n\\n` : '') +\n    getHTMLText(content) +\n    getPollText(poll)\n  );\n}\n\nconst PostContent = memo(\n  ({ post, instance, previewMode }) => {\n    const { content, emojis, language, mentions, url } = post;\n    return (\n      <div\n        lang={language}\n        dir=\"auto\"\n        class=\"inner-content\"\n        onClick={handleContentLinks({\n          mentions,\n          instance,\n          previewMode,\n          statusURL: url,\n        })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n            postEnhanceDOM: (dom) => {\n              // Remove target=\"_blank\" from links\n              dom.querySelectorAll('a.u-url[target=\"_blank\"]').forEach((a) => {\n                if (!/http/i.test(a.innerText.trim())) {\n                  a.removeAttribute('target');\n                }\n              });\n            },\n          }),\n        }}\n      />\n    );\n  },\n  (oldProps, newProps) => {\n    const { post: oldPost } = oldProps;\n    const { post: newPost } = newProps;\n    return oldPost.content === newPost.content;\n  },\n);\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  size = 'm',\n  contentTextWeight,\n  readOnly,\n  enableCommentHint,\n  withinContext,\n  skeleton,\n  enableTranslate,\n  forceTranslate: _forceTranslate,\n  previewMode,\n  // allowFilters,\n  onMediaClick,\n  quoted,\n  onStatusLinkClick = () => {},\n  showFollowedTags,\n  allowContextMenu,\n  showActionsBar,\n  showReplyParent,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">███ ████████</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>████ ████████</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  let sKey = statusKey(statusID || status?.id, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    tags,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n    // Non-Mastodon\n    emojiReactions,\n  } = status;\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo =\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\n    return (\n      <FilteredStatus\n        status={status}\n        filterInfo={filterInfo}\n        instance={instance}\n        containerProps={{\n          onMouseEnter: debugHover,\n        }}\n        showFollowedTags\n      />\n    );\n  }\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n  const mentionSelf =\n    inReplyToAccountId === currentAccount ||\n    mentions?.find((mention) => mention.id === currentAccount);\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    // Ignore hide_all because it means hide *ALL* media including non-sensitive ones\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media'] || 'default';\n  }, []);\n  // FOR TESTING:\n  // const readingExpandSpoilers = true;\n  // const readingExpandMedia = 'show_all';\n  const showSpoiler =\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id];\n  const showSpoilerMedia =\n    previewMode ||\n    readingExpandMedia === 'show_all' ||\n    !!snapStates.spoilersMedia[id];\n\n  if (reblog) {\n    // If has statusID, means useItemID (cached in states)\n\n    if (group) {\n      return (\n        <div\n          data-state-post-id={sKey}\n          class=\"status-group\"\n          onMouseEnter={debugHover}\n        >\n          <div class=\"status-pre-meta\">\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\n            <NameText account={status.account} instance={instance} showAvatar />\n          </div>\n          <Status\n            status={statusID ? null : reblog}\n            statusID={statusID ? reblog.id : null}\n            instance={instance}\n            size={size}\n            contentTextWeight={contentTextWeight}\n            readOnly={readOnly}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-reblog\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          <span>boosted</span>\n        </div>\n        <Status\n          status={statusID ? null : reblog}\n          statusID={statusID ? reblog.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  // Check followedTags\n  if (showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length) {\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-followed-tags\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"hashtag\" size=\"l\" />{' '}\n          {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n            <Link\n              key={tag}\n              to={instance ? `/${instance}/t/${tag}` : `/t/${tag}`}\n              class=\"status-followed-tag-item\"\n            >\n              {tag}\n            </Link>\n          ))}\n        </div>\n        <Status\n          status={statusID ? null : status}\n          statusID={statusID ? status.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  const isSizeLarge = size === 'l';\n\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const { contentTranslation, contentTranslationAutoInline } =\n    snapStates.settings;\n  if (!contentTranslation) enableTranslate = false;\n  const inlineTranslate = useMemo(() => {\n    if (\n      !contentTranslation ||\n      !contentTranslationAutoInline ||\n      readOnly ||\n      (withinContext && !isSizeLarge) ||\n      previewMode ||\n      spoilerText ||\n      sensitive ||\n      poll ||\n      card ||\n      mediaAttachments?.length\n    ) {\n      return false;\n    }\n    const contentLength = htmlContentLength(content);\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\n  }, [\n    contentTranslation,\n    contentTranslationAutoInline,\n    readOnly,\n    withinContext,\n    isSizeLarge,\n    previewMode,\n    spoilerText,\n    sensitive,\n    poll,\n    card,\n    mediaAttachments,\n    content,\n  ]);\n\n  const [showEdited, setShowEdited] = useState(false);\n  const [showEmbed, setShowEmbed] = useState(false);\n\n  const spoilerContentRef = useTruncated();\n  const contentRef = useTruncated();\n  const mediaContainerRef = useTruncated();\n  const readMoreText = 'Read more →';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\n\n  const textWeight = useCallback(\n    () =>\n      Math.max(\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\n          1,\n        1,\n      ),\n    [spoilerText, content],\n  );\n\n  const createdDateText = niceDateTime(createdAtDate);\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\n\n  // Can boost if:\n  // - authenticated AND\n  // - visibility != direct OR\n  // - visibility = private AND isSelf\n  let canBoost =\n    authenticated && visibility !== 'direct' && visibility !== 'private';\n  if (visibility === 'private' && isSelf) {\n    canBoost = true;\n  }\n\n  const replyStatus = (e) => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    // syntheticEvent comes from MenuItem\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\n      const newWin = openCompose({\n        replyToStatus: status,\n      });\n      if (newWin) return;\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  // Check if media has no descriptions\n  const mediaNoDesc = useMemo(() => {\n    return mediaAttachments.some(\n      (attachment) => !attachment.description?.trim?.(),\n    );\n  }, [mediaAttachments]);\n\n  const statusMonthsAgo = useMemo(() => {\n    return Math.floor(\n      (new Date() - createdAtDate) / (1000 * 60 * 60 * 24 * 30),\n    );\n  }, [createdAtDate]);\n\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      if (!reblogged) {\n        let confirmText = 'Boost this post?';\n        if (mediaNoDesc) {\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\n        }\n        const yes = confirm(confirmText);\n        if (!yes) {\n          return false;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const confirmBoostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const favouriteStatusNotify = async () => {\n    try {\n      const done = await favouriteStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          favourited\n            ? `Unliked @${username || acct}'s post`\n            : `Liked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const bookmarkStatusNotify = async () => {\n    try {\n      const done = await bookmarkStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          bookmarked\n            ? `Unbookmarked @${username || acct}'s post`\n            : `Bookmarked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const differentLanguage =\n    !!language &&\n    language !== targetLanguage &&\n    !localeMatch([language], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => language === l || localeMatch([language], [l]),\n    );\n\n  const reblogIterator = useRef();\n  const favouriteIterator = useRef();\n  async function fetchBoostedLikedByAccounts(firstLoad) {\n    if (firstLoad) {\n      reblogIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .rebloggedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n      favouriteIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .favouritedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n    }\n    const [{ value: reblogResults }, { value: favouriteResults }] =\n      await Promise.allSettled([\n        reblogIterator.current.next(),\n        favouriteIterator.current.next(),\n      ]);\n    if (reblogResults.value?.length || favouriteResults.value?.length) {\n      const accounts = [];\n      if (reblogResults.value?.length) {\n        accounts.push(\n          ...reblogResults.value.map((a) => {\n            a._types = ['reblog'];\n            return a;\n          }),\n        );\n      }\n      if (favouriteResults.value?.length) {\n        accounts.push(\n          ...favouriteResults.value.map((a) => {\n            a._types = ['favourite'];\n            return a;\n          }),\n        );\n      }\n      return {\n        value: accounts,\n        done: reblogResults.done && favouriteResults.done,\n      };\n    }\n    return {\n      value: [],\n      done: true,\n    };\n  }\n\n  const actionsRef = useRef();\n  const isPublic = ['public', 'unlisted'].includes(visibility);\n  const isPinnable = ['public', 'unlisted', 'private'].includes(visibility);\n  const StatusMenuItems = (\n    <>\n      {!isSizeLarge && sameInstance && (\n        <>\n          <div class=\"menu-control-group-horizontal status-menu\">\n            <MenuItem onClick={replyStatus}>\n              <Icon icon=\"comment\" />\n              <span>\n                {repliesCount > 0 ? shortenNumber(repliesCount) : 'Reply'}\n              </span>\n            </MenuItem>\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"rocket\" />\n                  <span>{reblogged ? 'Unboost' : 'Boost'}</span>\n                </>\n              }\n              className={`menu-reblog ${reblogged ? 'checked' : ''}`}\n              menuExtras={\n                <MenuItem\n                  onClick={() => {\n                    states.showCompose = {\n                      draftStatus: {\n                        status: `\\n${url}`,\n                      },\n                    };\n                  }}\n                >\n                  <Icon icon=\"quote\" />\n                  <span>Quote</span>\n                </MenuItem>\n              }\n              menuFooter={\n                mediaNoDesc && !reblogged ? (\n                  <div class=\"footer\">\n                    <Icon icon=\"alert\" />\n                    Some media have no descriptions.\n                  </div>\n                ) : (\n                  statusMonthsAgo >= 3 && (\n                    <div class=\"footer\">\n                      <Icon icon=\"info\" />\n                      <span>\n                        Old post (\n                        <strong>{rtf.format(-statusMonthsAgo, 'month')}</strong>\n                        )\n                      </span>\n                    </div>\n                  )\n                )\n              }\n              disabled={!canBoost}\n              onClick={async () => {\n                try {\n                  const done = await confirmBoostStatus();\n                  if (!isSizeLarge && done) {\n                    showToast(\n                      reblogged\n                        ? `Unboosted @${username || acct}'s post`\n                        : `Boosted @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"rocket\" />\n              <span>\n                {reblogsCount > 0\n                  ? shortenNumber(reblogsCount)\n                  : reblogged\n                  ? 'Unboost'\n                  : 'Boost…'}\n              </span>\n            </MenuConfirm>\n            <MenuItem\n              onClick={favouriteStatusNotify}\n              className={`menu-favourite ${favourited ? 'checked' : ''}`}\n            >\n              <Icon icon=\"heart\" />\n              <span>\n                {favouritesCount > 0\n                  ? shortenNumber(favouritesCount)\n                  : favourited\n                  ? 'Unlike'\n                  : 'Like'}\n              </span>\n            </MenuItem>\n            <MenuItem\n              onClick={bookmarkStatusNotify}\n              className={`menu-bookmark ${bookmarked ? 'checked' : ''}`}\n            >\n              <Icon icon=\"bookmark\" />\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n            </MenuItem>\n          </div>\n        </>\n      )}\n      {!isSizeLarge && sameInstance && (isSizeLarge || showActionsBar) && (\n        <MenuDivider />\n      )}\n      {(isSizeLarge || showActionsBar) && (\n        <>\n          <MenuItem\n            onClick={() => {\n              states.showGenericAccounts = {\n                heading: 'Boosted/Liked by…',\n                fetchAccounts: fetchBoostedLikedByAccounts,\n                instance,\n                showReactions: true,\n                postID: sKey,\n              };\n            }}\n          >\n            <Icon icon=\"react\" />\n            <span>\n              Boosted/Liked by<span class=\"more-insignificant\">…</span>\n            </span>\n          </MenuItem>\n        </>\n      )}\n      {(enableTranslate || !language || differentLanguage) && <MenuDivider />}\n      {enableTranslate ? (\n        <div class={supportsTTS ? 'menu-horizontal' : ''}>\n          <MenuItem\n            disabled={forceTranslate}\n            onClick={() => {\n              setForceTranslate(true);\n            }}\n          >\n            <Icon icon=\"translate\" />\n            <span>Translate</span>\n          </MenuItem>\n          {supportsTTS && (\n            <MenuItem\n              onClick={() => {\n                const postText = getPostText(status);\n                if (postText) {\n                  speak(postText, language);\n                }\n              }}\n            >\n              <Icon icon=\"speak\" />\n              <span>Speak</span>\n            </MenuItem>\n          )}\n        </div>\n      ) : (\n        (!language || differentLanguage) && (\n          <div class={supportsTTS ? 'menu-horizontal' : ''}>\n            <MenuLink\n              to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\n            >\n              <Icon icon=\"translate\" />\n              <span>Translate</span>\n            </MenuLink>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  const postText = getPostText(status);\n                  if (postText) {\n                    speak(postText, language);\n                  }\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>Speak</span>\n              </MenuItem>\n            )}\n          </div>\n        )\n      )}\n      {((!isSizeLarge && sameInstance) ||\n        enableTranslate ||\n        !language ||\n        differentLanguage) && <MenuDivider />}\n      {!isSizeLarge && (\n        <>\n          <MenuLink\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n            onClick={(e) => {\n              onStatusLinkClick(e, status);\n            }}\n          >\n            <Icon icon=\"arrows-right\" />\n            <small>\n              View post by @{username || acct}\n              <br />\n              <span class=\"more-insignificant\">\n                {visibilityText[visibility]} • {createdDateText}\n              </span>\n            </small>\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <>\n          <MenuItem\n            onClick={() => {\n              setShowEdited(id);\n            }}\n          >\n            <Icon icon=\"history\" />\n            <small>\n              Show Edit History\n              <br />\n              <span class=\"more-insignificant\">Edited: {editedDateText}</span>\n            </small>\n          </MenuItem>\n        </>\n      )}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\n      </MenuItem>\n      <div class=\"menu-horizontal\">\n        <MenuItem\n          onClick={() => {\n            // Copy url to clipboard\n            try {\n              navigator.clipboard.writeText(url);\n              showToast('Link copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy link');\n            }\n          }}\n        >\n          <Icon icon=\"link\" />\n          <span>Copy</span>\n        </MenuItem>\n        {isPublic &&\n          navigator?.share &&\n          navigator?.canShare?.({\n            url,\n          }) && (\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.share({\n                    url,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(\"Sharing doesn't seem to work.\");\n                }\n              }}\n            >\n              <Icon icon=\"share\" />\n              <span>Share…</span>\n            </MenuItem>\n          )}\n      </div>\n      {isPublic && isSizeLarge && (\n        <MenuItem\n          onClick={() => {\n            setShowEmbed(true);\n          }}\n        >\n          <Icon icon=\"code\" />\n          <span>Embed post</span>\n        </MenuItem>\n      )}\n      {(isSelf || mentionSelf) && <MenuDivider />}\n      {(isSelf || mentionSelf) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [muted ? 'unmute' : 'mute']();\n              saveStatus(newStatus, instance);\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\n            } catch (e) {\n              console.error(e);\n              showToast(\n                muted\n                  ? 'Unable to unmute conversation'\n                  : 'Unable to mute conversation',\n              );\n            }\n          }}\n        >\n          {muted ? (\n            <>\n              <Icon icon=\"unmute\" />\n              <span>Unmute conversation</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"mute\" />\n              <span>Mute conversation</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && isPinnable && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [_pinned ? 'unpin' : 'pin']();\n              // saveStatus(newStatus, instance);\n              showToast(\n                _pinned\n                  ? 'Post unpinned from profile'\n                  : 'Post pinned to profile',\n              );\n            } catch (e) {\n              console.error(e);\n              showToast(\n                _pinned ? 'Unable to unpin post' : 'Unable to pin post',\n              );\n            }\n          }}\n        >\n          {_pinned ? (\n            <>\n              <Icon icon=\"unpin\" />\n              <span>Unpin from profile</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"pin\" />\n              <span>Pin to profile</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && (\n        <div class=\"menu-horizontal\">\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n          {isSizeLarge && (\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"trash\" />\n                  <span>Delete this post?</span>\n                </>\n              }\n              menuItemClassName=\"danger\"\n              onClick={() => {\n                // const yes = confirm('Delete this post?');\n                // if (yes) {\n                (async () => {\n                  try {\n                    await masto.v1.statuses.$select(id).remove();\n                    const cachedStatus = getStatus(id, instance);\n                    cachedStatus._deleted = true;\n                    showToast('Deleted');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to delete');\n                  }\n                })();\n                // }\n              }}\n            >\n              <Icon icon=\"trash\" />\n              <span>Delete…</span>\n            </MenuConfirm>\n          )}\n        </div>\n      )}\n      {!isSelf && isSizeLarge && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            className=\"danger\"\n            onClick={() => {\n              states.showReportModal = {\n                account: status.account,\n                post: status,\n              };\n            }}\n          >\n            <Icon icon=\"flag\" />\n            <span>Report post…</span>\n          </MenuItem>\n        </>\n      )}\n    </>\n  );\n\n  const contextMenuRef = useRef();\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuProps, setContextMenuProps] = useState({});\n\n  const showContextMenu =\n    allowContextMenu || (!isSizeLarge && !previewMode && !_deleted && !quoted);\n\n  // Only iOS/iPadOS browsers don't support contextmenu\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\n  const bindLongPressContext = useLongPress(\n    isIOS && showContextMenu\n      ? (e) => {\n          if (e.pointerType === 'mouse') return;\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\n\n          const { clientX, clientY } = e.touches?.[0] || e;\n          // link detection copied from onContextMenu because here it works\n          const link = e.target.closest('a');\n          if (\n            link &&\n            statusRef.current.contains(link) &&\n            !link.getAttribute('href').startsWith('#')\n          )\n            return;\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: clientX,\n              y: clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }\n      : null,\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const hotkeysEnabled = !readOnly && !previewMode && !quoted;\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\n    enabled: hotkeysEnabled,\n  });\n  const fRef = useHotkeys('f, l', favouriteStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const dRef = useHotkeys('d', bookmarkStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const bRef = useHotkeys(\n    'shift+b',\n    () => {\n      (async () => {\n        try {\n          const done = await confirmBoostStatus();\n          if (!isSizeLarge && done) {\n            showToast(\n              reblogged\n                ? `Unboosted @${username || acct}'s post`\n                : `Boosted @${username || acct}'s post`,\n            );\n          }\n        } catch (e) {}\n      })();\n    },\n    {\n      enabled: hotkeysEnabled && canBoost,\n    },\n  );\n  const xRef = useHotkeys('x', (e) => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const spoilerButton = activeStatus.querySelector(\n        '.spoiler-button:not(.spoiling)',\n      );\n      if (spoilerButton) {\n        e.stopPropagation();\n        spoilerButton.click();\n      } else {\n        const spoilerMediaButton = activeStatus.querySelector(\n          '.spoiler-media-button:not(.spoiling)',\n        );\n        if (spoilerMediaButton) {\n          e.stopPropagation();\n          spoilerMediaButton.click();\n        }\n      }\n    }\n  });\n\n  const displayedMediaAttachments = mediaAttachments.slice(\n    0,\n    isSizeLarge ? undefined : 4,\n  );\n  const showMultipleMediaCaptions =\n    mediaAttachments.length > 1 &&\n    displayedMediaAttachments.some(\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\n    );\n  const captionChildren = useMemo(() => {\n    if (!showMultipleMediaCaptions) return null;\n    const attachments = [];\n    displayedMediaAttachments.forEach((media, i) => {\n      if (!media.description) return;\n      const index = attachments.findIndex(\n        (attachment) => attachment.media.description === media.description,\n      );\n      if (index === -1) {\n        attachments.push({\n          media,\n          indices: [i],\n        });\n      } else {\n        attachments[index].indices.push(i);\n      }\n    });\n    return attachments.map(({ media, indices }) => (\n      <div\n        key={media.id}\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          states.showMediaAlt = {\n            alt: media.description,\n            lang: language,\n          };\n        }}\n        title={media.description}\n      >\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\n      </div>\n    ));\n\n    // return displayedMediaAttachments.map(\n    //   (media, i) =>\n    //     !!media.description && (\n    //       <div\n    //         key={media.id}\n    //         data-caption-index={i + 1}\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           e.stopPropagation();\n    //           states.showMediaAlt = {\n    //             alt: media.description,\n    //             lang: language,\n    //           };\n    //         }}\n    //         title={media.description}\n    //       >\n    //         <sup>{i + 1}</sup> {media.description}\n    //       </div>\n    //     ),\n    // );\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\n\n  const isThread = useMemo(() => {\n    return (\n      (!!inReplyToId && inReplyToAccountId === status.account?.id) ||\n      !!snapStates.statusThreadNumber[sKey]\n    );\n  }, [\n    inReplyToId,\n    inReplyToAccountId,\n    status.account?.id,\n    snapStates.statusThreadNumber[sKey],\n  ]);\n\n  const showCommentHint = useMemo(() => {\n    return (\n      enableCommentHint &&\n      !isThread &&\n      !withinContext &&\n      !inReplyToId &&\n      visibility === 'public' &&\n      repliesCount > 0\n    );\n  }, [\n    enableCommentHint,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    visibility,\n  ]);\n  const showCommentCount = useMemo(() => {\n    if (\n      card ||\n      poll ||\n      sensitive ||\n      spoilerText ||\n      mediaAttachments?.length ||\n      isThread ||\n      withinContext ||\n      inReplyToId ||\n      repliesCount <= 0\n    ) {\n      return false;\n    }\n    const questionRegex = /[??？︖❓❔⁇⁈⁉¿‽؟]/;\n    const containsQuestion = questionRegex.test(content);\n    if (!containsQuestion) return false;\n    const contentLength = htmlContentLength(content);\n    if (contentLength > 0 && contentLength <= SHOW_COMMENT_COUNT_LIMIT) {\n      return true;\n    }\n  }, [\n    card,\n    poll,\n    sensitive,\n    spoilerText,\n    mediaAttachments,\n    reblog,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    content,\n  ]);\n\n  return (\n    <>\n      {showReplyParent && !!(inReplyToId && inReplyToAccountId) && (\n        <StatusCompact sKey={sKey} />\n      )}\n      <article\n        data-state-post-id={sKey}\n        ref={(node) => {\n          statusRef.current = node;\n          // Use parent node if it's in focus\n          // Use case: <a><status /></a>\n          // When navigating (j/k), the <a> is focused instead of <status />\n          // Hotkey binding doesn't bubble up thus this hack\n          const nodeRef =\n            node?.closest?.(\n              '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\n            ) || node;\n          rRef.current = nodeRef;\n          fRef.current = nodeRef;\n          dRef.current = nodeRef;\n          bRef.current = nodeRef;\n          xRef.current = nodeRef;\n        }}\n        tabindex=\"-1\"\n        class={`status ${\n          !withinContext && inReplyToId && inReplyToAccount\n            ? 'status-reply-to'\n            : ''\n        } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n          {\n            s: 'small',\n            m: 'medium',\n            l: 'large',\n          }[size]\n        } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''} ${\n          isContextMenuOpen ? 'status-menu-open' : ''\n        }`}\n        onMouseEnter={debugHover}\n        onContextMenu={(e) => {\n          if (!showContextMenu) return;\n          if (e.metaKey) return;\n          // console.log('context menu', e);\n          const link = e.target.closest('a');\n          if (\n            link &&\n            statusRef.current.contains(link) &&\n            !link.getAttribute('href').startsWith('#')\n          )\n            return;\n\n          // If there's selected text, don't show custom context menu\n          const selection = window.getSelection?.();\n          if (selection.toString().length > 0) {\n            const { anchorNode } = selection;\n            if (statusRef.current?.contains(anchorNode)) {\n              return;\n            }\n          }\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: e.clientX,\n              y: e.clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }}\n        {...(showContextMenu ? bindLongPressContext() : {})}\n      >\n        {showContextMenu && (\n          <ControlledMenu\n            ref={contextMenuRef}\n            state={isContextMenuOpen ? 'open' : undefined}\n            {...contextMenuProps}\n            onClose={(e) => {\n              setIsContextMenuOpen(false);\n              // statusRef.current?.focus?.();\n              if (e?.reason === 'click') {\n                statusRef.current?.closest('[tabindex]')?.focus?.();\n              }\n            }}\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n              onClick: () => {\n                contextMenuRef.current?.closeMenu?.();\n              },\n            }}\n            overflow=\"auto\"\n            boundingBoxPadding={safeBoundingBoxPadding()}\n            unmountOnClose\n          >\n            {StatusMenuItems}\n          </ControlledMenu>\n        )}\n        {showActionsBar &&\n          size !== 'l' &&\n          !previewMode &&\n          !readOnly &&\n          !_deleted &&\n          !quoted && (\n            <div\n              class={`status-actions ${\n                isContextMenuOpen === 'actions-bar' ? 'open' : ''\n              }`}\n              ref={actionsRef}\n            >\n              <StatusButton\n                size=\"s\"\n                title=\"Reply\"\n                alt=\"Reply\"\n                class=\"reply-button\"\n                icon=\"comment\"\n                iconSize=\"m\"\n                onClick={replyStatus}\n              />\n              <StatusButton\n                size=\"s\"\n                checked={favourited}\n                title={['Like', 'Unlike']}\n                alt={['Like', 'Liked']}\n                class=\"favourite-button\"\n                icon=\"heart\"\n                iconSize=\"m\"\n                count={favouritesCount}\n                onClick={favouriteStatusNotify}\n              />\n              <button\n                type=\"button\"\n                title=\"More\"\n                class=\"plain more-button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setContextMenuProps({\n                    anchorRef: {\n                      current: e.currentTarget,\n                    },\n                    align: 'start',\n                    direction: 'left',\n                    gap: 0,\n                    shift: -8,\n                  });\n                  setIsContextMenuOpen('actions-bar');\n                }}\n              >\n                <Icon icon=\"more2\" size=\"m\" alt=\"More\" />\n              </button>\n            </div>\n          )}\n        {size !== 'l' && (\n          <div class=\"status-badge\">\n            {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n            {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n            {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n            {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n          </div>\n        )}\n        {size !== 's' && (\n          <a\n            href={accountURL}\n            tabindex=\"-1\"\n            // target=\"_blank\"\n            title={`@${acct}`}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              states.showAccount = {\n                account: status.account,\n                instance,\n              };\n            }}\n          >\n            <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\n          </a>\n        )}\n        <div class=\"container\">\n          <div class=\"meta\">\n            <span class=\"meta-name\">\n              <NameText\n                account={status.account}\n                instance={instance}\n                showAvatar={size === 's'}\n                showAcct={isSizeLarge}\n              />\n            </span>\n            {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n            {/* </span> */}{' '}\n            {size !== 'l' &&\n              (_deleted ? (\n                <span class=\"status-deleted-tag\">Deleted</span>\n              ) : url && !previewMode && !readOnly && !quoted ? (\n                <Link\n                  to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                  onClick={(e) => {\n                    if (\n                      e.metaKey ||\n                      e.ctrlKey ||\n                      e.shiftKey ||\n                      e.altKey ||\n                      e.which === 2\n                    ) {\n                      return;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onStatusLinkClick?.(e, status);\n                    setContextMenuProps({\n                      anchorRef: {\n                        current: e.currentTarget,\n                      },\n                      align: 'end',\n                      direction: 'bottom',\n                      gap: 4,\n                    });\n                    setIsContextMenuOpen(true);\n                  }}\n                  class={`time ${\n                    isContextMenuOpen && contextMenuProps?.anchorRef\n                      ? 'is-open'\n                      : ''\n                  }`}\n                >\n                  {showCommentHint && !showCommentCount ? (\n                    <Icon\n                      icon=\"comment2\"\n                      size=\"s\"\n                      alt={`${repliesCount} ${\n                        repliesCount === 1 ? 'reply' : 'replies'\n                      }`}\n                    />\n                  ) : (\n                    visibility !== 'public' &&\n                    visibility !== 'direct' && (\n                      <Icon\n                        icon={visibilityIconsMap[visibility]}\n                        alt={visibilityText[visibility]}\n                        size=\"s\"\n                      />\n                    )\n                  )}{' '}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                  {!previewMode && !readOnly && (\n                    <Icon icon=\"more2\" class=\"more\" />\n                  )}\n                </Link>\n              ) : (\n                // <Menu\n                //   instanceRef={menuInstanceRef}\n                //   portal={{\n                //     target: document.body,\n                //   }}\n                //   containerProps={{\n                //     style: {\n                //       // Higher than the backdrop\n                //       zIndex: 1001,\n                //     },\n                //     onClick: (e) => {\n                //       if (e.target === e.currentTarget)\n                //         menuInstanceRef.current?.closeMenu?.();\n                //     },\n                //   }}\n                //   align=\"end\"\n                //   gap={4}\n                //   overflow=\"auto\"\n                //   viewScroll=\"close\"\n                //   boundingBoxPadding=\"8 8 8 8\"\n                //   unmountOnClose\n                //   menuButton={({ open }) => (\n                //     <Link\n                //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                //       onClick={(e) => {\n                //         e.preventDefault();\n                //         e.stopPropagation();\n                //         onStatusLinkClick?.(e, status);\n                //       }}\n                //       class={`time ${open ? 'is-open' : ''}`}\n                //     >\n                //       <Icon\n                //         icon={visibilityIconsMap[visibility]}\n                //         alt={visibilityText[visibility]}\n                //         size=\"s\"\n                //       />{' '}\n                //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                //     </Link>\n                //   )}\n                // >\n                //   {StatusMenuItems}\n                // </Menu>\n                <span class=\"time\">\n                  {visibility !== 'public' && visibility !== 'direct' && (\n                    <>\n                      <Icon\n                        icon={visibilityIconsMap[visibility]}\n                        alt={visibilityText[visibility]}\n                        size=\"s\"\n                      />{' '}\n                    </>\n                  )}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                </span>\n              ))}\n          </div>\n          {visibility === 'direct' && (\n            <>\n              <div class=\"status-direct-badge\">Private mention</div>{' '}\n            </>\n          )}\n          {!withinContext && (\n            <>\n              {isThread ? (\n                <div class=\"status-thread-badge\">\n                  <Icon icon=\"thread\" size=\"s\" />\n                  Thread\n                  {snapStates.statusThreadNumber[sKey]\n                    ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                    : ''}\n                </div>\n              ) : (\n                !!inReplyToId &&\n                !!inReplyToAccount &&\n                (!!spoilerText ||\n                  !mentions.find((mention) => {\n                    return mention.id === inReplyToAccountId;\n                  })) && (\n                  <div class=\"status-reply-badge\">\n                    <Icon icon=\"reply\" />{' '}\n                    <NameText\n                      account={inReplyToAccount}\n                      instance={instance}\n                      short\n                    />\n                  </div>\n                )\n              )}\n            </>\n          )}\n          <div\n            class={`content-container ${\n              spoilerText || sensitive ? 'has-spoiler' : ''\n            } ${showSpoiler ? 'show-spoiler' : ''} ${\n              showSpoilerMedia ? 'show-media' : ''\n            }`}\n            data-content-text-weight={contentTextWeight ? textWeight() : null}\n            style={\n              (isSizeLarge || contentTextWeight) && {\n                '--content-text-weight': textWeight(),\n              }\n            }\n          >\n            {!!spoilerText && (\n              <>\n                <div\n                  class=\"content spoiler-content\"\n                  lang={language}\n                  dir=\"auto\"\n                  ref={spoilerContentRef}\n                  data-read-more={readMoreText}\n                >\n                  <p>\n                    <EmojiText text={spoilerText} emojis={emojis} />\n                  </p>\n                </div>\n                {readingExpandSpoilers || previewMode ? (\n                  <div class=\"spoiler-divider\">\n                    <Icon icon=\"eye-open\" /> Content warning\n                  </div>\n                ) : (\n                  <button\n                    class={`light spoiler-button ${\n                      showSpoiler ? 'spoiling' : ''\n                    }`}\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      if (showSpoiler) {\n                        delete states.spoilers[id];\n                        if (!readingExpandSpoilers) {\n                          delete states.spoilersMedia[id];\n                        }\n                      } else {\n                        states.spoilers[id] = true;\n                        if (!readingExpandSpoilers) {\n                          states.spoilersMedia[id] = true;\n                        }\n                      }\n                    }}\n                  >\n                    <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                    {showSpoiler ? 'Show less' : 'Show content'}\n                  </button>\n                )}\n              </>\n            )}\n            {!!content && (\n              <div\n                class=\"content\"\n                ref={contentRef}\n                data-read-more={readMoreText}\n              >\n                <PostContent\n                  post={status}\n                  instance={instance}\n                  previewMode={previewMode}\n                />\n                <QuoteStatuses id={id} instance={instance} level={quoted} />\n              </div>\n            )}\n            {!!poll && (\n              <Poll\n                lang={language}\n                poll={poll}\n                readOnly={readOnly || !sameInstance || !authenticated}\n                onUpdate={(newPoll) => {\n                  states.statuses[sKey].poll = newPoll;\n                }}\n                refresh={() => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .fetch()\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n                votePoll={(choices) => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .votes.create({\n                      choices,\n                    })\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n              />\n            )}\n            {(((enableTranslate || inlineTranslate) &&\n              !!content.trim() &&\n              !!getHTMLText(emojifyText(content, emojis)) &&\n              differentLanguage) ||\n              forceTranslate) && (\n              <TranslationBlock\n                forceTranslate={forceTranslate || inlineTranslate}\n                mini={!isSizeLarge && !withinContext}\n                sourceLanguage={language}\n                text={getPostText(status)}\n              />\n            )}\n            {!previewMode &&\n              sensitive &&\n              !!mediaAttachments.length &&\n              readingExpandMedia !== 'show_all' && (\n                <button\n                  class={`plain spoiler-media-button ${\n                    showSpoilerMedia ? 'spoiling' : ''\n                  }`}\n                  type=\"button\"\n                  hidden={!readingExpandSpoilers && !!spoilerText}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (showSpoilerMedia) {\n                      delete states.spoilersMedia[id];\n                    } else {\n                      states.spoilersMedia[id] = true;\n                    }\n                  }}\n                >\n                  <Icon icon={showSpoilerMedia ? 'eye-open' : 'eye-close'} />{' '}\n                  {showSpoilerMedia ? 'Show less' : 'Show media'}\n                </button>\n              )}\n            {!!mediaAttachments.length && (\n              <MultipleMediaFigure\n                lang={language}\n                enabled={showMultipleMediaCaptions}\n                captionChildren={captionChildren}\n              >\n                <div\n                  ref={mediaContainerRef}\n                  class={`media-container media-eq${mediaAttachments.length} ${\n                    mediaAttachments.length > 2 ? 'media-gt2' : ''\n                  } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n                >\n                  {displayedMediaAttachments.map((media, i) => (\n                    <Media\n                      key={media.id}\n                      media={media}\n                      autoAnimate={isSizeLarge}\n                      showCaption={mediaAttachments.length === 1}\n                      allowLongerCaption={\n                        !content && mediaAttachments.length === 1\n                      }\n                      lang={language}\n                      altIndex={\n                        showMultipleMediaCaptions &&\n                        !!media.description &&\n                        i + 1\n                      }\n                      to={`/${instance}/s/${id}?${\n                        withinContext ? 'media' : 'media-only'\n                      }=${i + 1}`}\n                      onClick={\n                        onMediaClick\n                          ? (e) => {\n                              onMediaClick(e, i, media, status);\n                            }\n                          : undefined\n                      }\n                    />\n                  ))}\n                </div>\n              </MultipleMediaFigure>\n            )}\n            {!!card &&\n              /^https/i.test(card?.url) &&\n              !sensitive &&\n              !spoilerText &&\n              !poll &&\n              !mediaAttachments.length &&\n              !snapStates.statusQuotes[sKey] && (\n                <Card\n                  card={card}\n                  selfReferential={\n                    card?.url === status.url || card?.url === status.uri\n                  }\n                  instance={currentInstance}\n                />\n              )}\n          </div>\n          {!isSizeLarge && showCommentCount && (\n            <div class=\"content-comment-hint insignificant\">\n              <Icon icon=\"comment2\" alt=\"Replies\" /> {repliesCount}\n            </div>\n          )}\n          {isSizeLarge && (\n            <>\n              <div class=\"extra-meta\">\n                {_deleted ? (\n                  <span class=\"status-deleted-tag\">Deleted</span>\n                ) : (\n                  <>\n                    {/* <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                    /> */}\n                    <span>{visibilityText[visibility]}</span> &bull;{' '}\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <time\n                        class=\"created\"\n                        datetime={createdAtDate.toISOString()}\n                        title={createdAtDate.toLocaleString()}\n                      >\n                        {createdDateText}\n                      </time>\n                    </a>\n                    {editedAt && (\n                      <>\n                        {' '}\n                        &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                        <time\n                          tabIndex=\"0\"\n                          class=\"edited\"\n                          datetime={editedAtDate.toISOString()}\n                          onClick={() => {\n                            setShowEdited(id);\n                          }}\n                        >\n                          {editedDateText}\n                        </time>\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              {!!emojiReactions?.length && (\n                <div class=\"emoji-reactions\">\n                  {emojiReactions.map((emojiReaction) => {\n                    const { name, count, me, url, staticUrl } = emojiReaction;\n                    if (url) {\n                      // Some servers return url and staticUrl\n                      return (\n                        <span\n                          class={`emoji-reaction tag ${\n                            me ? '' : 'insignificant'\n                          }`}\n                        >\n                          <CustomEmoji\n                            alt={name}\n                            url={url}\n                            staticUrl={staticUrl}\n                          />{' '}\n                          {count}\n                        </span>\n                      );\n                    }\n                    const isShortCode = /^:.+?:$/.test(name);\n                    if (isShortCode) {\n                      const emoji = emojis.find(\n                        (e) =>\n                          e.shortcode ===\n                          name.replace(/^:/, '').replace(/:$/, ''),\n                      );\n                      if (emoji) {\n                        return (\n                          <span\n                            class={`emoji-reaction tag ${\n                              me ? '' : 'insignificant'\n                            }`}\n                          >\n                            <CustomEmoji\n                              alt={name}\n                              url={emoji.url}\n                              staticUrl={emoji.staticUrl}\n                            />{' '}\n                            {count}\n                          </span>\n                        );\n                      }\n                    }\n                    return (\n                      <span\n                        class={`emoji-reaction tag ${\n                          me ? '' : 'insignificant'\n                        }`}\n                      >\n                        {name} {count}\n                      </span>\n                    );\n                  })}\n                </div>\n              )}\n              <div class={`actions ${_deleted ? 'disabled' : ''}`}>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    title=\"Reply\"\n                    alt=\"Comments\"\n                    class=\"reply-button\"\n                    icon=\"comment\"\n                    count={repliesCount}\n                    onClick={replyStatus}\n                  />\n                </div>\n                {/* <div class=\"action has-count\">\n                <StatusButton\n                  checked={reblogged}\n                  title={['Boost', 'Unboost']}\n                  alt={['Boost', 'Boosted']}\n                  class=\"reblog-button\"\n                  icon=\"rocket\"\n                  count={reblogsCount}\n                  onClick={boostStatus}\n                  disabled={!canBoost}\n                />\n              </div> */}\n                <MenuConfirm\n                  disabled={!canBoost}\n                  onClick={confirmBoostStatus}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"rocket\" />\n                      <span>{reblogged ? 'Unboost' : 'Boost'}</span>\n                    </>\n                  }\n                  menuExtras={\n                    <MenuItem\n                      onClick={() => {\n                        states.showCompose = {\n                          draftStatus: {\n                            status: `\\n${url}`,\n                          },\n                        };\n                      }}\n                    >\n                      <Icon icon=\"quote\" />\n                      <span>Quote</span>\n                    </MenuItem>\n                  }\n                  menuFooter={\n                    mediaNoDesc &&\n                    !reblogged && (\n                      <div class=\"footer\">\n                        <Icon icon=\"alert\" />\n                        Some media have no descriptions.\n                      </div>\n                    )\n                  }\n                >\n                  <div class=\"action has-count\">\n                    <StatusButton\n                      checked={reblogged}\n                      title={['Boost', 'Unboost']}\n                      alt={['Boost', 'Boosted']}\n                      class=\"reblog-button\"\n                      icon=\"rocket\"\n                      count={reblogsCount}\n                      // onClick={boostStatus}\n                      disabled={!canBoost}\n                    />\n                  </div>\n                </MenuConfirm>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={favourited}\n                    title={['Like', 'Unlike']}\n                    alt={['Like', 'Liked']}\n                    class=\"favourite-button\"\n                    icon=\"heart\"\n                    count={favouritesCount}\n                    onClick={favouriteStatus}\n                  />\n                </div>\n                <div class=\"action\">\n                  <StatusButton\n                    checked={bookmarked}\n                    title={['Bookmark', 'Unbookmark']}\n                    alt={['Bookmark', 'Bookmarked']}\n                    class=\"bookmark-button\"\n                    icon=\"bookmark\"\n                    onClick={bookmarkStatus}\n                  />\n                </div>\n                <Menu2\n                  portal={{\n                    target:\n                      document.querySelector('.status-deck') || document.body,\n                  }}\n                  align=\"end\"\n                  gap={4}\n                  overflow=\"auto\"\n                  viewScroll=\"close\"\n                  menuButton={\n                    <div class=\"action\">\n                      <button\n                        type=\"button\"\n                        title=\"More\"\n                        class=\"plain more-button\"\n                      >\n                        <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                      </button>\n                    </div>\n                  }\n                >\n                  {StatusMenuItems}\n                </Menu2>\n              </div>\n            </>\n          )}\n        </div>\n        {!!showEdited && (\n          <Modal\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setShowEdited(false);\n                // statusRef.current?.focus();\n              }\n            }}\n          >\n            <EditedAtModal\n              statusID={showEdited}\n              instance={instance}\n              fetchStatusHistory={() => {\n                return masto.v1.statuses.$select(showEdited).history.list();\n              }}\n              onClose={() => {\n                setShowEdited(false);\n                statusRef.current?.focus();\n              }}\n            />\n          </Modal>\n        )}\n        {!!showEmbed && (\n          <Modal\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setShowEmbed(false);\n              }\n            }}\n          >\n            <EmbedModal\n              post={status}\n              instance={instance}\n              onClose={() => {\n                setShowEmbed(false);\n              }}\n            />\n          </Modal>\n        )}\n      </article>\n    </>\n  );\n}\n\nfunction MultipleMediaFigure(props) {\n  const { enabled, children, lang, captionChildren } = props;\n  if (!enabled || !captionChildren) return children;\n  return (\n    <figure class=\"media-figure-multiple\">\n      {children}\n      <figcaption lang={lang} dir=\"auto\">\n        {captionChildren}\n      </figcaption>\n    </figure>\n  );\n}\n\nfunction Card({ card, selfReferential, instance }) {\n  const snapStates = useSnapshot(states);\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    providerUrl,\n    authorName,\n    authorUrl,\n    width,\n    height,\n    image,\n    imageDescription,\n    url,\n    type,\n    embedUrl,\n    language,\n    publishedAt,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && !selfReferential && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.$select(id).fetch();\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image, selfReferential]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (snapStates.unfurledLinks[url]) return null;\n\n  const hasIframeHTML = /<iframe/i.test(html);\n  const handleClick = useCallback(\n    (e) => {\n      if (hasIframeHTML) {\n        e.preventDefault();\n        states.showEmbedModal = {\n          html,\n          url: url || embedUrl,\n          width,\n          height,\n        };\n      }\n    },\n    [hasIframeHTML],\n  );\n\n  if (hasText && (image || (type === 'photo' && blurhash))) {\n    const domain = punycode.toUnicode(\n      new URL(url).hostname.replace(/^www\\./, '').replace(/\\/$/, ''),\n    );\n    let blurhashImage;\n    const rgbAverageColor =\n      image && blurhash ? getBlurHashAverageColor(blurhash) : null;\n    if (!image) {\n      const w = 44;\n      const h = 44;\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\n      const canvas = window.OffscreenCanvas\n        ? new OffscreenCanvas(1, 1)\n        : document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = false;\n      const imageData = ctx.createImageData(w, h);\n      imageData.data.set(blurhashPixels);\n      ctx.putImageData(imageData, 0, 0);\n      blurhashImage = canvas.toDataURL();\n    }\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${blurhashImage ? '' : size}`}\n        lang={language}\n        dir=\"auto\"\n        style={{\n          '--average-color':\n            rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n        }}\n        onClick={handleClick}\n      >\n        <div class=\"card-image\">\n          <img\n            src={image || blurhashImage}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt={imageDescription || ''}\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">\n            <span class=\"domain\">{domain}</span>{' '}\n            {!!publishedAt && <>&middot; </>}\n            {!!publishedAt && (\n              <>\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\n              </>\n            )}\n          </p>\n          <p class=\"title\" dir=\"auto\" title={title}>\n            {title}\n          </p>\n          <p class=\"meta\" dir=\"auto\" title={description}>\n            {description ||\n              (!!publishedAt && (\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\n              ))}\n          </p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n        onClick={handleClick}\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else {\n    if (type === 'video') {\n      if (/youtube/i.test(providerName)) {\n        // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\n        const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\n        if (videoID) {\n          return (\n            <a class=\"card video\" onClick={handleClick}>\n              <lite-youtube videoid={videoID} nocookie></lite-youtube>\n            </a>\n          );\n        }\n      }\n      // return (\n      //   <div\n      //     class=\"card video\"\n      //     style={{\n      //       aspectRatio: `${width}/${height}`,\n      //     }}\n      //     dangerouslySetInnerHTML={{ __html: html }}\n      //   />\n      // );\n    }\n    if (hasText && !image) {\n      const domain = punycode.toUnicode(\n        new URL(url).hostname.replace(/^www\\./, ''),\n      );\n      return (\n        <a\n          href={cardStatusURL || url}\n          target={cardStatusURL ? null : '_blank'}\n          rel=\"nofollow noopener noreferrer\"\n          class={`card link no-image`}\n          lang={language}\n          onClick={handleClick}\n        >\n          <div class=\"meta-container\">\n            <p class=\"meta domain\">\n              <span class=\"domain\">\n                <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\n              </span>{' '}\n              {!!publishedAt && <>&middot; </>}\n              {!!publishedAt && (\n                <>\n                  <RelativeTime datetime={publishedAt} format=\"micro\" />\n                </>\n              )}\n            </p>\n            <p class=\"title\" title={title}>\n              {title}\n            </p>\n            <p class=\"meta\" title={description || providerName || authorName}>\n              {description || providerName || authorName}\n            </p>\n          </div>\n        </a>\n      );\n    }\n  }\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {niceDateTime(createdAtDate, {\n                        formatOpts: {\n                          weekday: 'short',\n                          second: 'numeric',\n                        },\n                      })}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                    previewMode\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction generateHTMLCode(post, instance, level = 0) {\n  const {\n    account: {\n      url: accountURL,\n      displayName,\n      acct,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    poll,\n    spoilerText,\n    language,\n    editedAt,\n    createdAt,\n    content,\n    mediaAttachments,\n    url,\n    emojis,\n  } = post;\n\n  const sKey = statusKey(id, instance);\n  const quotes = states.statusQuotes[sKey] || [];\n  const uniqueQuotes = quotes.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n  const quoteStatusesHTML =\n    uniqueQuotes.length && level <= 2\n      ? uniqueQuotes\n          .map((quote) => {\n            const { id, instance } = quote;\n            const sKey = statusKey(id, instance);\n            const s = states.statuses[sKey];\n            if (s) {\n              return generateHTMLCode(s, instance, ++level);\n            }\n          })\n          .join('')\n      : '';\n\n  const createdAtDate = new Date(createdAt);\n  // const editedAtDate = editedAt && new Date(editedAt);\n\n  const contentHTML =\n    emojifyText(content, emojis) +\n    '\\n' +\n    quoteStatusesHTML +\n    '\\n' +\n    (poll?.options?.length\n      ? `\n        <p>📊:</p>\n        <ul>\n        ${poll.options\n          .map(\n            (option) => `\n              <li>\n                ${option.title}\n                ${option.votesCount >= 0 ? ` (${option.votesCount})` : ''}\n              </li>\n            `,\n          )\n          .join('')}\n        </ul>`\n      : '') +\n    (mediaAttachments.length > 0\n      ? '\\n' +\n        mediaAttachments\n          .map((media) => {\n            const {\n              description,\n              meta,\n              previewRemoteUrl,\n              previewUrl,\n              remoteUrl,\n              url,\n              type,\n            } = media;\n            const { original = {}, small } = meta || {};\n            const width = small?.width || original?.width;\n            const height = small?.height || original?.height;\n\n            // Prefer remote over original\n            const sourceMediaURL = remoteUrl || url;\n            const previewMediaURL = previewRemoteUrl || previewUrl;\n            const mediaURL = previewMediaURL || sourceMediaURL;\n\n            const sourceMediaURLObj = sourceMediaURL\n              ? new URL(sourceMediaURL)\n              : null;\n            const isVideoMaybe =\n              type === 'unknown' &&\n              sourceMediaURLObj &&\n              /\\.(mp4|m4r|m4v|mov|webm)$/i.test(sourceMediaURLObj.pathname);\n            const isAudioMaybe =\n              type === 'unknown' &&\n              sourceMediaURLObj &&\n              /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(sourceMediaURLObj.pathname);\n            const isImage =\n              type === 'image' ||\n              (type === 'unknown' &&\n                previewMediaURL &&\n                !isVideoMaybe &&\n                !isAudioMaybe);\n            const isVideo = type === 'gifv' || type === 'video' || isVideoMaybe;\n            const isAudio = type === 'audio' || isAudioMaybe;\n\n            let mediaHTML = '';\n            if (isImage) {\n              mediaHTML = `<img src=\"${mediaURL}\" width=\"${width}\" height=\"${height}\" alt=\"${description}\" loading=\"lazy\" />`;\n            } else if (isVideo) {\n              mediaHTML = `\n                <video src=\"${sourceMediaURL}\" width=\"${width}\" height=\"${height}\" controls preload=\"auto\" poster=\"${previewMediaURL}\" loading=\"lazy\"></video>\n                ${description ? `<figcaption>${description}</figcaption>` : ''}\n              `;\n            } else if (isAudio) {\n              mediaHTML = `\n                <audio src=\"${sourceMediaURL}\" controls preload=\"auto\"></audio>\n                ${description ? `<figcaption>${description}</figcaption>` : ''}\n              `;\n            } else {\n              mediaHTML = `\n                <a href=\"${sourceMediaURL}\">📄 ${\n                description || sourceMediaURL\n              }</a>\n              `;\n            }\n\n            return `<figure>${mediaHTML}</figure>`;\n          })\n          .join('\\n')\n      : '');\n\n  const htmlCode = `\n    <blockquote lang=\"${language}\" cite=\"${url}\">\n      ${\n        spoilerText\n          ? `\n            <details>\n              <summary>${spoilerText}</summary>\n              ${contentHTML}\n            </details>\n          `\n          : contentHTML\n      }\n      <footer>\n        — ${emojifyText(\n          displayName,\n          accountEmojis,\n        )} (@${acct}) <a href=\"${url}\"><time datetime=\"${createdAtDate.toISOString()}\">${createdAtDate.toLocaleString()}</time></a>\n      </footer>\n    </blockquote>\n  `;\n\n  return prettify(htmlCode);\n}\n\nfunction EmbedModal({ post, instance, onClose }) {\n  const {\n    account: {\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    poll,\n    spoilerText,\n    language,\n    editedAt,\n    createdAt,\n    content,\n    mediaAttachments,\n    url,\n    emojis,\n  } = post;\n\n  const htmlCode = generateHTMLCode(post, instance);\n  return (\n    <div id=\"embed-post\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Embed post</h2>\n      </header>\n      <main tabIndex=\"-1\">\n        <h3>HTML Code</h3>\n        <textarea\n          class=\"embed-code\"\n          readonly\n          onClick={(e) => {\n            e.target.select();\n          }}\n        >\n          {htmlCode}\n        </textarea>\n        <button\n          type=\"button\"\n          onClick={() => {\n            try {\n              navigator.clipboard.writeText(htmlCode);\n              showToast('HTML code copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy HTML code');\n            }\n          }}\n        >\n          <Icon icon=\"clipboard\" /> <span>Copy</span>\n        </button>\n        {!!mediaAttachments?.length && (\n          <section>\n            <p>Media attachments:</p>\n            <ol class=\"links-list\">\n              {mediaAttachments.map((media) => {\n                return (\n                  <li key={media.id}>\n                    <a\n                      href={media.remoteUrl || media.url}\n                      target=\"_blank\"\n                      download\n                    >\n                      {media.remoteUrl || media.url}\n                    </a>\n                  </li>\n                );\n              })}\n            </ol>\n          </section>\n        )}\n        {!!accountEmojis?.length && (\n          <section>\n            <p>Account Emojis:</p>\n            <ul>\n              {accountEmojis.map((emoji) => {\n                return (\n                  <li key={emoji.shortcode}>\n                    <picture>\n                      <source\n                        srcset={emoji.staticUrl}\n                        media=\"(prefers-reduced-motion: reduce)\"\n                      ></source>\n                      <img\n                        class=\"shortcode-emoji emoji\"\n                        src={emoji.url}\n                        alt={`:${emoji.shortcode}:`}\n                        width=\"16\"\n                        height=\"16\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                      />\n                    </picture>{' '}\n                    <code>:{emoji.shortcode}:</code> (\n                    <a href={emoji.url} target=\"_blank\" download>\n                      url\n                    </a>\n                    )\n                    {emoji.staticUrl ? (\n                      <>\n                        {' '}\n                        (\n                        <a href={emoji.staticUrl} target=\"_blank\" download>\n                          static\n                        </a>\n                        )\n                      </>\n                    ) : null}\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n        )}\n        {!!emojis?.length && (\n          <section>\n            <p>Emojis:</p>\n            <ul>\n              {emojis.map((emoji) => {\n                return (\n                  <li key={emoji.shortcode}>\n                    <picture>\n                      <source\n                        srcset={emoji.staticUrl}\n                        media=\"(prefers-reduced-motion: reduce)\"\n                      ></source>\n                      <img\n                        class=\"shortcode-emoji emoji\"\n                        src={emoji.url}\n                        alt={`:${emoji.shortcode}:`}\n                        width=\"16\"\n                        height=\"16\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                      />\n                    </picture>{' '}\n                    <code>:{emoji.shortcode}:</code> (\n                    <a href={emoji.url} target=\"_blank\" download>\n                      url\n                    </a>\n                    )\n                    {emoji.staticUrl ? (\n                      <>\n                        {' '}\n                        (\n                        <a href={emoji.staticUrl} target=\"_blank\" download>\n                          static\n                        </a>\n                        )\n                      </>\n                    ) : null}\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n        )}\n        <section>\n          <small>\n            <p>Notes:</p>\n            <ul>\n              <li>\n                This is static, unstyled and scriptless. You may need to apply\n                your own styles and edit as needed.\n              </li>\n              <li>\n                Polls are not interactive, becomes a list with vote counts.\n              </li>\n              <li>\n                Media attachments can be images, videos, audios or any file\n                types.\n              </li>\n              <li>Post could be edited or deleted later.</li>\n            </ul>\n          </small>\n        </section>\n        <h3>Preview</h3>\n        <output\n          class=\"embed-preview\"\n          dangerouslySetInnerHTML={{ __html: htmlCode }}\n        />\n        <p>\n          <small>Note: This preview is lightly styled.</small>\n        </p>\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  size,\n  icon,\n  iconSize = 'l',\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${size ? 'small' : ''} ${className} ${\n        checked ? 'checked' : ''\n      }`}\n      onClick={(e) => {\n        if (!onClick) return;\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size={iconSize} alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nfunction nicePostURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '');\n  // split only first slash\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\n  return (\n    <>\n      {punycode.toUnicode(host)}\n      {username ? (\n        <>\n          /{username}\n          <wbr />\n          <span class=\"more-insignificant\">/{restPath}</span>\n        </>\n      ) : (\n        <span class=\"more-insignificant\">{path}</span>\n      )}\n    </>\n  );\n}\n\nfunction StatusCompact({ sKey }) {\n  const snapStates = useSnapshot(states);\n  const statusReply = snapStates.statusReply[sKey];\n  if (!statusReply) return null;\n\n  const { id, instance } = statusReply;\n  const status = getStatus(id, instance);\n  if (!status) return null;\n\n  const {\n    sensitive,\n    spoilerText,\n    account: { avatar, avatarStatic, bot },\n    visibility,\n    content,\n    language,\n    filtered,\n  } = status;\n  if (sensitive || spoilerText) return null;\n  if (!content) return null;\n\n  const srKey = statusKey(id, instance);\n  const statusPeekText = statusPeek(status);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') return null;\n\n  const filterTitleStr = filterInfo?.titlesStr || '';\n\n  return (\n    <article\n      class={`status compact-reply ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n      data-state-post-id={srKey}\n    >\n      <Avatar url={avatarStatic || avatar} squircle={bot} />\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {filterInfo ? (\n          <b class=\"status-filtered-badge badge-meta\" title={filterTitleStr}>\n            <span>Filtered</span>\n            <span>{filterTitleStr}</span>\n          </b>\n        ) : (\n          <span>{statusPeekText}</span>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction FilteredStatus({\n  status,\n  filterInfo,\n  instance,\n  containerProps = {},\n  showFollowedTags,\n}) {\n  const snapStates = useSnapshot(states);\n  const {\n    id: statusID,\n    account: { avatar, avatarStatic, bot, group },\n    createdAt,\n    visibility,\n    reblog,\n  } = status;\n  const isReblog = !!reblog;\n  const filterTitleStr = filterInfo?.titlesStr || '';\n  const createdAtDate = new Date(createdAt);\n  const statusPeekText = statusPeek(status.reblog || status);\n\n  const [showPeek, setShowPeek] = useState(false);\n  const bindLongPressPeek = useLongPress(\n    () => {\n      setShowPeek(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const statusPeekRef = useTruncated();\n  const sKey = statusKey(status.id, instance);\n  const ssKey =\n    statusKey(status.id, instance) +\n    ' ' +\n    (statusKey(reblog?.id, instance) || '');\n\n  const actualStatusID = reblog?.id || statusID;\n  const url = instance\n    ? `/${instance}/s/${actualStatusID}`\n    : `/s/${actualStatusID}`;\n  const isFollowedTags =\n    showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length;\n\n  return (\n    <div\n      class={\n        isReblog\n          ? group\n            ? 'status-group'\n            : 'status-reblog'\n          : isFollowedTags\n          ? 'status-followed-tags'\n          : ''\n      }\n      {...containerProps}\n      // title={statusPeekText}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setShowPeek(true);\n      }}\n      {...bindLongPressPeek()}\n    >\n      <article data-state-post-id={ssKey} class=\"status filtered\" tabindex=\"-1\">\n        <b\n          class=\"status-filtered-badge clickable badge-meta\"\n          title={filterTitleStr}\n          onClick={(e) => {\n            e.preventDefault();\n            setShowPeek(true);\n          }}\n        >\n          <span>Filtered</span>\n          <span>{filterTitleStr}</span>\n        </b>{' '}\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\n        <span class=\"status-filtered-info\">\n          <span class=\"status-filtered-info-1\">\n            <NameText account={status.account} instance={instance} />{' '}\n            <Icon\n              icon={visibilityIconsMap[visibility]}\n              alt={visibilityText[visibility]}\n              size=\"s\"\n            />{' '}\n            {isReblog ? (\n              'boosted'\n            ) : isFollowedTags ? (\n              <span>\n                {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n                  <span key={tag} class=\"status-followed-tag-item\">\n                    #{tag}\n                  </span>\n                ))}\n              </span>\n            ) : (\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\n            )}\n          </span>\n          <span class=\"status-filtered-info-2\">\n            {isReblog && (\n              <>\n                <Avatar\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\n                  squircle={bot}\n                />{' '}\n              </>\n            )}\n            {statusPeekText}\n          </span>\n        </span>\n      </article>\n      {!!showPeek && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowPeek(false);\n            }\n          }}\n        >\n          <div id=\"filtered-status-peek\" class=\"sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowPeek(false)}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\n            </header>\n            <main tabIndex=\"-1\">\n              <Link\n                ref={statusPeekRef}\n                class=\"status-link\"\n                to={url}\n                onClick={() => {\n                  setShowPeek(false);\n                }}\n                data-read-more=\"Read more →\"\n              >\n                <Status status={status} instance={instance} size=\"s\" readOnly />\n              </Link>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\n  if (!id || !instance) return;\n  const snapStates = useSnapshot(states);\n  const sKey = statusKey(id, instance);\n  const quotes = snapStates.statusQuotes[sKey];\n  const uniqueQuotes = quotes?.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n\n  if (!uniqueQuotes?.length) return;\n  if (level > 2) return;\n\n  return uniqueQuotes.map((q) => {\n    return (\n      <LazyShazam>\n        <Link\n          key={q.instance + q.id}\n          to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\n          class=\"status-card-link\"\n          data-read-more=\"Read more →\"\n        >\n          <Status\n            statusID={q.id}\n            instance={q.instance}\n            size=\"s\"\n            quoted={level + 1}\n            enableCommentHint\n          />\n        </Link>\n      </LazyShazam>\n    );\n  });\n});\n\nexport default memo(Status, (oldProps, newProps) => {\n  // Shallow equal all props except 'status'\n  // This will be pure static until status ID changes\n  const { status, ...restOldProps } = oldProps;\n  const { status: newStatus, ...restNewProps } = newProps;\n  return (\n    status?.id === newStatus?.id && shallowEqual(restOldProps, restNewProps)\n  );\n});\n"],"file":"assets/status-RflqUT9k.js"}