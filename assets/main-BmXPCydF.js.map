{"version":3,"file":"main-BmXPCydF.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.js","../../src/utils/useLocationChange.js","../../src/utils/lists.js","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../node_modules/chroma-js/src/utils/limit.js","../../node_modules/chroma-js/src/utils/type.js","../../node_modules/chroma-js/src/utils/unpack.js","../../node_modules/chroma-js/src/utils/index.js","../../node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../src/components/media-modal.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.js","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/annual-report.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.js","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/utils/oauth-pkce.js","../../src/utils/auth.js","../../src/pages/login.jsx","../../src/pages/scheduled-posts.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  const { t } = useLingui();\n\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  const visibleTimeout = useRef();\n  usePageVisibility((visible) => {\n    clearTimeout(visibleTimeout.current);\n    if (visible) {\n      setVisible(true);\n    } else {\n      visibleTimeout.current = setTimeout(() => {\n        setVisible(false);\n      }, POLL_INTERVAL);\n    }\n  });\n\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications.list({\n        limit: 1,\n        sinceId: states.notificationsLast.id,\n      });\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys('shift+alt+k', () => {\n    const currentCloakMode = states.settings.cloakMode;\n    states.settings.cloakMode = !currentCloakMode;\n    showToast({\n      text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n    });\n  });\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport showCompose from '../utils/show-compose';\nimport states from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport SubMenu2 from './submenu2';\n\n// Function to fetch the latest posts from the current user\n// Use pmem to memoize fetch results for 1 minute\nconst fetchLatestPostsMemoized = pmem(\n  async (masto, currentAccountID) => {\n    const statusesIterator = masto.v1.accounts\n      .$select(currentAccountID)\n      .statuses.list({\n        limit: 3,\n        exclude_replies: true,\n        exclude_reblogs: true,\n      });\n    const { value } = await statusesIterator.next();\n    return value || [];\n  },\n  { maxAge: 60000 },\n); // 1 minute cache\n\nexport default function ComposeButton() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto } = api();\n\n  // Context menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const buttonRef = useRef(null);\n  const menuRef = useRef(null);\n\n  function handleButton(e) {\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    if (e.shiftKey) {\n      const newWin = openCompose();\n\n      if (!newWin) {\n        states.showCompose = true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal;\n    },\n  });\n\n  // Setup longpress handler to open context menu\n  const bindLongPress = useLongPress(\n    () => {\n      setMenuOpen(true);\n    },\n    {\n      threshold: 600,\n    },\n  );\n\n  const fetchLatestPosts = useCallback(async () => {\n    try {\n      setLoadingPosts(true);\n      const currentAccountID = getCurrentAccountID();\n      if (!currentAccountID) {\n        return;\n      }\n      const posts = await fetchLatestPostsMemoized(masto, currentAccountID);\n      setLatestPosts(posts);\n    } catch (error) {\n    } finally {\n      setLoadingPosts(false);\n    }\n  }, [masto]);\n\n  // Function to handle opening the compose window to reply to a post\n  const handleReplyToPost = useCallback((post) => {\n    showCompose({\n      replyToStatus: post,\n    });\n    setMenuOpen(false);\n  }, []);\n\n  useEffect(() => {\n    if (menuOpen) {\n      fetchLatestPosts();\n    }\n  }, [fetchLatestPosts, menuOpen]);\n\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        id=\"compose-button\"\n        onClick={handleButton}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          setMenuOpen(true);\n        }}\n        {...bindLongPress()}\n        class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n          snapStates.composerState.publishing ? 'loading' : ''\n        } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n      >\n        <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n      </button>\n      <ControlledMenu\n        ref={menuRef}\n        state={menuOpen ? 'open' : undefined}\n        anchorRef={buttonRef}\n        onClose={() => setMenuOpen(false)}\n        direction=\"top\"\n        gap={8} // Add gap between menu and button\n        unmountOnClose\n        portal={{\n          target: document.body,\n        }}\n        boundingBoxPadding={safeBoundingBoxPadding()}\n        containerProps={{\n          style: {\n            zIndex: 101,\n          },\n          onClick: () => {\n            menuRef.current?.closeMenu?.();\n          },\n        }}\n        submenuOpenDelay={600}\n      >\n        <MenuLink to=\"/sp\">\n          <Icon icon=\"schedule\" />{' '}\n          <span>\n            <Trans>Scheduled Posts</Trans>\n          </span>\n        </MenuLink>\n        <MenuDivider />\n        <SubMenu2\n          align=\"end\"\n          direction=\"top\"\n          shift={-8}\n          disabled={loadingPosts || latestPosts.length === 0}\n          label={\n            <>\n              <Icon icon=\"comment\" />{' '}\n              <span className=\"menu-grow\">\n                <Trans>Add to thread</Trans>\n              </span>\n              {loadingPosts ? '…' : <Icon icon=\"chevron-right\" />}\n            </>\n          }\n        >\n          {latestPosts.length > 0 &&\n            latestPosts.map((post) => {\n              const createdDate = new Date(post.createdAt);\n              const isWithinDay =\n                new Date().getTime() - createdDate.getTime() < 86400000;\n\n              return (\n                <MenuItem key={post.id} onClick={() => handleReplyToPost(post)}>\n                  <small>\n                    <div class=\"menu-post-text\">{statusPeek(post)}</div>\n                    <span className=\"more-insignificant\">\n                      {/* Show relative time if within a day */}\n                      {isWithinDay && (\n                        <>\n                          <RelativeTime datetime={createdDate} format=\"micro\" />{' '}\n                          ‒{' '}\n                        </>\n                      )}\n                      <time\n                        className=\"created\"\n                        dateTime={createdDate.toISOString()}\n                        title={createdDate.toLocaleString()}\n                      >\n                        {niceDateTime(post.createdAt)}\n                      </time>\n                    </span>\n                  </small>\n                </MenuItem>\n              );\n            })}\n        </SubMenu2>\n      </ControlledMenu>\n    </>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?, shift+?, shift+slash',\n    (e) => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const isCatchUpPage = /\\/catchup/i.test(location.hash);\n        return isCatchUpPage;\n        // const hasModal = !!document.querySelector('#modal-container > *');\n        // return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus next column in multi-column mode`,\n                    keys: <kbd>]</kbd>,\n                  },\n                  {\n                    action: t`Focus previous column in multi-column mode`,\n                    keys: <kbd>[</kbd>,\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, setCurrentAccountID } from '../utils/store-utils';\n\nconst isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n\nfunction Accounts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  // Accounts\n  const accounts = store.local.getJSON('accounts');\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isCurrent}\n                            onClick={() => {\n                              setCurrentAccountID(account.info.id);\n                              location.reload();\n                            }}\n                          >\n                            <Icon icon=\"transfer\" />{' '}\n                            <Trans>Switch to this account</Trans>\n                          </MenuItem>\n                          {!isStandalone && !isCurrent && (\n                            <MenuLink\n                              href={`./?account=${account.info.id}`}\n                              target=\"_blank\"\n                            >\n                              <Icon icon=\"external\" />\n                              <span>\n                                <Trans>Switch in new tab/window</Trans>\n                              </span>\n                            </MenuLink>\n                          )}\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <MenuItem\n                          disabled={isDefault}\n                          onClick={() => {\n                            // Move account to the top of the list\n                            accounts.splice(i, 1);\n                            accounts.unshift(account);\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          }}\n                        >\n                          <Icon icon=\"check-circle\" />\n                          <span>\n                            <Trans>Set as default</Trans>\n                          </span>\n                        </MenuItem>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={() => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          accounts.splice(i, 1);\n                          store.local.setJSON('accounts', accounts);\n                          // location.reload();\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport store from '../utils/store';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n  'pt-BR': 'pt-BR',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          store.local.set('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getVapidKey } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const vapidKey = getVapidKey();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const vapidKey = getVapidKey();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const vapidKey = getVapidKey();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport targetLanguages from '../data/lingva-target-languages';\nimport { api } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport prettyBytes from '../utils/pretty-bytes';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport supports from '../utils/supports';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nfunction Settings({ onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(store.account.get('preferences') || {});\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <div\n      id=\"settings-container\"\n      class=\"sheet\"\n      tabIndex=\"-1\"\n      style={{\n        '--current-text-size': `${currentTextSize}px`,\n      }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'dark light' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <span>\n                <label>\n                  <Trans>Display language</Trans>\n                </label>\n                <br />\n                <small>\n                  <a\n                    href=\"https://crowdin.com/project/phanpy\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Trans>Volunteer translations</Trans>\n                  </a>\n                </small>\n              </span>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            setPrefs({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                            store.account.set('preferences', {\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Unlisted</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers only</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.contentTranslation}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n                    states.settings.contentTranslation = checked;\n                    if (!checked) {\n                      states.settings.contentTranslationTargetLanguage = null;\n                    }\n                  }}\n                />{' '}\n                <Trans>Post translation</Trans>\n              </label>\n              <div\n                class={`sub-section ${\n                  !snapStates.settings.contentTranslation\n                    ? 'more-insignificant'\n                    : ''\n                }`}\n              >\n                <div>\n                  <label>\n                    <Trans>Translate to </Trans>{' '}\n                    <select\n                      value={targetLanguage || ''}\n                      disabled={!snapStates.settings.contentTranslation}\n                      style={{ width: '10em' }}\n                      onChange={(e) => {\n                        states.settings.contentTranslationTargetLanguage =\n                          e.target.value || null;\n                      }}\n                    >\n                      <option value=\"\">\n                        <Trans>\n                          System language ({systemTargetLanguageText})\n                        </Trans>\n                      </option>\n                      <option disabled>──────────</option>\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = common !== native;\n                        return (\n                          <option value={lang.code}>\n                            {showCommon ? `${native} - ${common}` : common}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </label>\n                </div>\n                <hr />\n                <div class=\"checkbox-fieldset\">\n                  <Plural\n                    value={\n                      snapStates.settings.contentTranslationHideLanguages.length\n                    }\n                    _0={`Hide \"Translate\" button for:`}\n                    other={`Hide \"Translate\" button for (#):`}\n                  />\n                  <div class=\"checkbox-fields\">\n                    {targetLanguages.map((lang) => {\n                      const common = localeCode2Text({\n                        code: lang.code,\n                        fallback: lang.name,\n                      });\n                      const native = localeCode2Text({\n                        code: lang.code,\n                        locale: lang.code,\n                      });\n                      const showCommon = common !== native;\n                      return (\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                              lang.code,\n                            )}\n                            onChange={(e) => {\n                              const { checked } = e.target;\n                              if (checked) {\n                                states.settings.contentTranslationHideLanguages.push(\n                                  lang.code,\n                                );\n                              } else {\n                                states.settings.contentTranslationHideLanguages =\n                                  snapStates.settings.contentTranslationHideLanguages.filter(\n                                    (code) => code !== lang.code,\n                                  );\n                              }\n                            }}\n                          />{' '}\n                          {showCommon ? (\n                            <span>\n                              {native}{' '}\n                              <span class=\"insignificant\">- {common}</span>\n                            </span>\n                          ) : (\n                            common\n                          )}\n                        </label>\n                      );\n                    })}\n                  </div>\n                </div>\n                <p class=\"insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external translation services,\n                      powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/lingva-api\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        Lingva API\n                      </a>{' '}\n                      &amp;{' '}\n                      <a\n                        href=\"https://github.com/thedaviddelta/lingva-translate\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        Lingva Translate\n                      </a>\n                      .\n                    </Trans>\n                  </small>\n                </p>\n                <hr />\n                <div>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={snapStates.settings.contentTranslationAutoInline}\n                      disabled={!snapStates.settings.contentTranslation}\n                      onChange={(e) => {\n                        states.settings.contentTranslationAutoInline =\n                          e.target.checked;\n                      }}\n                    />{' '}\n                    <Trans>Auto inline translation</Trans>\n                  </label>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Automatically show translation for posts in timeline.\n                        Only works for <b>short</b> posts without content\n                        warning, media and poll.\n                      </Trans>\n                    </small>\n                  </p>\n                </div>\n              </div>\n            </li>\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && supports('@mastodon/grouped-notifications') && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.groupedNotificationsAlpha}\n                    onChange={(e) => {\n                      states.settings.groupedNotificationsAlpha =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Server-side grouped notifications</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Alpha-stage feature. Potentially improved grouping window\n                      but basic grouping logic.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://patreon.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Patreon\n            </a>{' '}\n            &middot;{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\" rel=\"noopener\">\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n        {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n          <details class=\"debug-info\">\n            <summary></summary>\n            <p>Debugging</p>\n            {__BENCH_RESULTS?.size > 0 && (\n              <ul>\n                {Array.from(__BENCH_RESULTS.entries()).map(\n                  ([name, duration]) => (\n                    <li>\n                      <b>{name}</b>: {duration}ms\n                    </li>\n                  ),\n                )}\n              </ul>\n            )}\n            <p>Service Worker Cache</p>\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesKeys())}\n            >\n              Show keys count\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesSize())}\n            >\n              Show cache size\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                const key = prompt('Enter cache key');\n                if (!key) return;\n                try {\n                  clearCacheKey(key);\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear cache key\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                try {\n                  clearCaches();\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear all caches\n            </button>\n          </details>\n        )}\n      </main>\n    </div>\n  );\n}\n\nasync function getCachesKeys() {\n  const keys = await caches.keys();\n  const total = {};\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    total[key] = k.length;\n  }\n  return total;\n}\n\nasync function getCachesSize() {\n  const keys = await caches.keys();\n  let total = {};\n  let TOTAL = 0;\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    for (const item of k) {\n      try {\n        const response = await cache.match(item);\n        const blob = await response.blob();\n        total[key] = (total[key] || 0) + blob.size;\n        TOTAL += blob.size;\n      } catch (e) {\n        alert('Failed to get cache size for ' + item);\n        alert(e);\n      }\n    }\n  }\n  return {\n    ...Object.fromEntries(\n      Object.entries(total).map(([k, v]) => [k, prettyBytes(v)]),\n    ),\n    TOTAL: prettyBytes(TOTAL),\n  };\n}\n\nfunction clearCacheKey(key) {\n  return caches.delete(key);\n}\n\nasync function clearCaches() {\n  const keys = await caches.keys();\n  for (const key of keys) {\n    await caches.delete(key);\n  }\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  const { t } = useLingui();\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.entries(alerts).forEach(([alert, value]) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = !!value;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus focused column\n      const focusedColumn = columns.querySelector('.deck-container.focus');\n      if (focusedColumn) {\n        focusedColumn.focus();\n      } else {\n        // Focus first column within viewport\n        const firstVisibleColumn = Array.from(\n          columns.querySelectorAll('.deck-container'),\n        ).find((column) => {\n          const columnRect = column.getBoundingClientRect();\n          return columnRect.left >= 0;\n        });\n        if (firstVisibleColumn) {\n          firstVisibleColumn.focus();\n        } else {\n          // Focus first column\n          columns.querySelector('.deck-container')?.focus?.();\n        }\n      }\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive =\n    supports('@mastodon/list-exclusive') ||\n    supports('@gotosocial/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { msg, plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getLists } from '../utils/lists';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, updateAccount } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport SubMenu2 from './submenu2';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  60 * 60 * 24 * 30, // 30 days\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n  2592_000: i18nDuration(30, 'day'),\n};\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n}) {\n  const { i18n, t } = useLingui();\n  const { masto } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = store.local.getJSON('accounts');\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        store.local.setJSON('accounts', accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const domain = punycode.toUnicode(URL.parse(url).hostname);\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts.$select(id).followers.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts.$select(id).following.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n      style={{\n        '--header-color-1': headerCornerColors[0],\n        '--header-color-2': headerCornerColors[1],\n        '--header-color-3': headerCornerColors[2],\n        '--header-color-4': headerCornerColors[3],\n      }}\n    >\n      {uiState === 'error' && (\n        <div class=\"ui-state\">\n          <p>\n            <Trans>Unable to load account.</Trans>\n          </p>\n          {isString ? (\n            <p>\n              <code class=\"insignificant\">{account}</code>\n            </p>\n          ) : (\n            <p>\n              <a href={url} target=\"_blank\" rel=\"noopener\">\n                <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n              </a>\n            </p>\n          )}\n        </div>\n      )}\n      {uiState === 'loading' ? (\n        <>\n          <header>\n            <AccountBlock avatarSize=\"xxxl\" skeleton />\n          </header>\n          <main>\n            <div class=\"note\">\n              <p>███████ ████ ████</p>\n              <p>████ ████████ ██████ █████████ ████ ██</p>\n            </div>\n            <div class=\"account-metadata-box\">\n              <div class=\"profile-metadata\">\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">███</b>\n                  <p>██████</p>\n                </div>\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">████</b>\n                  <p>███████████</p>\n                </div>\n              </div>\n              <div class=\"stats\">\n                <div>\n                  <span>██</span> <Trans>Followers</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans id=\"following.stats\">Following</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans>Posts</Trans>\n                </div>\n              </div>\n            </div>\n            <div class=\"actions\">\n              <span />\n              <span class=\"buttons\">\n                <button type=\"button\" class=\"plain\" disabled>\n                  <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                </button>\n              </span>\n            </div>\n          </main>\n        </>\n      ) : (\n        info && (\n          <>\n            {!!moved && (\n              <div class=\"account-moved\">\n                <p>\n                  <Trans>\n                    <b>{displayName}</b> has indicated that their new account is\n                    now:\n                  </Trans>\n                </p>\n                <AccountBlock\n                  account={moved}\n                  instance={instance}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    states.showAccount = moved;\n                  }}\n                />\n              </div>\n            )}\n            {!!header && !/missing\\.png$/.test(header) && (\n              <img\n                src={header}\n                alt=\"\"\n                class={`header-banner ${\n                  headerIsAvatar ? 'header-is-avatar' : ''\n                }`}\n                onError={(e) => {\n                  if (e.target.crossOrigin) {\n                    if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.removeAttribute('crossorigin');\n                      e.target.src = header;\n                    }\n                  } else if (e.target.src !== headerStatic) {\n                    e.target.src = headerStatic;\n                  } else {\n                    e.target.remove();\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onLoad={(e) => {\n                  e.target.classList.add('loaded');\n                  try {\n                    // Get color from four corners of image\n                    const canvas = window.OffscreenCanvas\n                      ? new OffscreenCanvas(1, 1)\n                      : document.createElement('canvas');\n                    const ctx = canvas.getContext('2d', {\n                      willReadFrequently: true,\n                    });\n                    canvas.width = e.target.width;\n                    canvas.height = e.target.height;\n                    ctx.imageSmoothingEnabled = false;\n                    ctx.drawImage(e.target, 0, 0);\n                    // const colors = [\n                    //   ctx.getImageData(0, 0, 1, 1).data,\n                    //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                    //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                    //   ctx.getImageData(\n                    //     e.target.width - 1,\n                    //     e.target.height - 1,\n                    //     1,\n                    //     1,\n                    //   ).data,\n                    // ];\n                    // Get 10x10 pixels from corners, get average color from each\n                    const pixelDimension = 10;\n                    const colors = [\n                      ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                        .data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        0,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        0,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                    ].map((data) => {\n                      let r = 0;\n                      let g = 0;\n                      let b = 0;\n                      let a = 0;\n                      for (let i = 0; i < data.length; i += 4) {\n                        r += data[i];\n                        g += data[i + 1];\n                        b += data[i + 2];\n                        a += data[i + 3];\n                      }\n                      const dataLength = data.length / 4;\n                      return [\n                        r / dataLength,\n                        g / dataLength,\n                        b / dataLength,\n                        a / dataLength,\n                      ];\n                    });\n                    const rgbColors = colors.map((color) => {\n                      const [r, g, b, a] = lightenRGB(color);\n                      return `rgba(${r}, ${g}, ${b}, ${a})`;\n                    });\n                    setHeaderCornerColors(rgbColors);\n                    console.log({ colors, rgbColors });\n                  } catch (e) {\n                    // Silently fail\n                  }\n                }}\n              />\n            )}\n            <header>\n              {standalone ? (\n                <Menu2\n                  shift={\n                    window.matchMedia('(min-width: calc(40em))').matches\n                      ? 114\n                      : 64\n                  }\n                  menuButton={\n                    <div>\n                      <AccountBlock\n                        account={info}\n                        instance={instance}\n                        avatarSize=\"xxxl\"\n                        onClick={() => {}}\n                      />\n                    </div>\n                  }\n                >\n                  <div class=\"szh-menu__header\">\n                    <AccountHandleInfo acct={acct} instance={instance} />\n                  </div>\n                  <MenuItem\n                    onClick={() => {\n                      const handleWithInstance = acct.includes('@')\n                        ? `@${acct}`\n                        : `@${acct}@${instance}`;\n                      try {\n                        navigator.clipboard.writeText(handleWithInstance);\n                        showToast(t`Handle copied`);\n                      } catch (e) {\n                        console.error(e);\n                        showToast(t`Unable to copy handle`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"link\" />\n                    <span>\n                      <Trans>Copy handle</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuItem href={url} target=\"_blank\">\n                    <Icon icon=\"external\" />\n                    <span>\n                      <Trans>Go to original profile page</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: [\n                          {\n                            type: 'image',\n                            url: avatarStatic,\n                          },\n                        ],\n                      };\n                    }}\n                  >\n                    <Icon icon=\"user\" />\n                    <span>\n                      <Trans>View profile image</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: [\n                          {\n                            type: 'image',\n                            url: headerStatic,\n                          },\n                        ],\n                      };\n                    }}\n                  >\n                    <Icon icon=\"media\" />\n                    <span>\n                      <Trans>View profile header</Trans>\n                    </span>\n                  </MenuItem>\n                </Menu2>\n              ) : (\n                <AccountBlock\n                  account={info}\n                  instance={instance}\n                  avatarSize=\"xxxl\"\n                  internal\n                />\n              )}\n            </header>\n            <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n            <main>\n              {!!memorial && (\n                <span class=\"tag\">\n                  <Trans>In Memoriam</Trans>\n                </span>\n              )}\n              {!!bot && (\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                </span>\n              )}\n              {!!group && (\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> <Trans>Group</Trans>\n                </span>\n              )}\n              {roles?.map((role) => (\n                <span class=\"tag\">\n                  {role.name}\n                  {!!accountInstance && (\n                    <>\n                      {' '}\n                      <span class=\"more-insignificant\">{accountInstance}</span>\n                    </>\n                  )}\n                </span>\n              ))}\n              <div\n                class=\"note\"\n                dir=\"auto\"\n                onClick={handleContentLinks({\n                  instance: currentInstance,\n                })}\n                dangerouslySetInnerHTML={{\n                  __html: enhanceContent(note, { emojis }),\n                }}\n              />\n              <div class=\"account-metadata-box\">\n                {fields?.length > 0 && (\n                  <div class=\"profile-metadata\">\n                    {fields.map(({ name, value, verifiedAt }, i) => (\n                      <div\n                        class={`profile-field ${\n                          verifiedAt ? 'profile-verified' : ''\n                        }`}\n                        key={name + i}\n                        dir=\"auto\"\n                      >\n                        <b>\n                          <EmojiText text={name} emojis={emojis} />{' '}\n                          {!!verifiedAt && (\n                            <Icon\n                              icon=\"check-circle\"\n                              size=\"s\"\n                              alt={t`Verified`}\n                            />\n                          )}\n                        </b>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: enhanceContent(value, { emojis }),\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div class=\"stats\">\n                  <LinkOrDiv\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          id: 'followers',\n                          heading: t`Followers`,\n                          fetchAccounts: fetchFollowers,\n                          instance,\n                          excludeRelationshipAttrs: isSelf\n                            ? ['followedBy']\n                            : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    {!!familiarFollowers.length && (\n                      <span class=\"shazam-container-horizontal\">\n                        <span class=\"shazam-container-inner stats-avatars-bunch\">\n                          {familiarFollowers.map((follower) => (\n                            <Avatar\n                              url={follower.avatarStatic}\n                              size=\"s\"\n                              alt={`${follower.displayName} @${follower.acct}`}\n                              squircle={follower?.bot}\n                            />\n                          ))}\n                        </span>\n                      </span>\n                    )}\n                    <span title={followersCount}>\n                      {shortenNumber(followersCount)}\n                    </span>{' '}\n                    <Trans>Followers</Trans>\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          heading: t({\n                            id: 'following.stats',\n                            message: 'Following',\n                          }),\n                          fetchAccounts: fetchFollowing,\n                          instance,\n                          excludeRelationshipAttrs: isSelf ? ['following'] : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    <span title={followingCount}>\n                      {shortenNumber(followingCount)}\n                    </span>{' '}\n                    <Trans id=\"following.stats\">Following</Trans>\n                    <br />\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    to={accountLink}\n                    // onClick={\n                    //   standalone\n                    //     ? undefined\n                    //     : () => {\n                    //         hideAllModals();\n                    //       }\n                    // }\n                  >\n                    <span title={statusesCount}>\n                      {shortenNumber(statusesCount)}\n                    </span>{' '}\n                    <Trans>Posts</Trans>\n                  </LinkOrDiv>\n                  {!!createdAt && (\n                    <div class=\"insignificant\">\n                      <Trans>\n                        Joined{' '}\n                        <time datetime={createdAt}>\n                          {niceDateTime(createdAt, {\n                            hideTime: true,\n                          })}\n                        </time>\n                      </Trans>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {!!postingStats && (\n                <LinkOrDiv\n                  to={accountLink}\n                  class=\"account-metadata-box\"\n                  // onClick={() => {\n                  //   states.showAccount = false;\n                  // }}\n                >\n                  <div class=\"shazam-container\">\n                    <div class=\"shazam-container-inner\">\n                      {hasPostingStats ? (\n                        <div\n                          class=\"posting-stats\"\n                          title={t`${(\n                            postingStats.originals / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} original posts, ${(\n                            postingStats.replies / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} replies, ${(\n                            postingStats.boosts / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} boosts`}\n                        >\n                          <div>\n                            {postingStats.daysSinceLastPost < 365\n                              ? plural(postingStats.total, {\n                                  one: plural(postingStats.daysSinceLastPost, {\n                                    one: `Last 1 post in the past 1 day`,\n                                    other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                  }),\n                                  other: plural(\n                                    postingStats.daysSinceLastPost,\n                                    {\n                                      one: `Last ${postingStats.total} posts in the past 1 day`,\n                                      other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                    },\n                                  ),\n                                })\n                              : plural(postingStats.total, {\n                                  one: 'Last 1 post in the past year(s)',\n                                  other: `Last ${postingStats.total} posts in the past year(s)`,\n                                })}\n                          </div>\n                          <div\n                            class=\"posting-stats-bar\"\n                            style={{\n                              // [originals | replies | boosts]\n                              '--originals-percentage': `${\n                                (postingStats.originals / postingStats.total) *\n                                100\n                              }%`,\n                              '--replies-percentage': `${\n                                ((postingStats.originals +\n                                  postingStats.replies) /\n                                  postingStats.total) *\n                                100\n                              }%`,\n                            }}\n                          />\n                          <div class=\"posting-stats-legends\">\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                              <Trans>Original</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                              <Trans>Replies</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                              <Trans>Boosts</Trans>\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div class=\"posting-stats\">\n                          <Trans>Post stats unavailable.</Trans>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </LinkOrDiv>\n              )}\n              {!moved && (\n                <div class=\"account-metadata-box\">\n                  <div\n                    class=\"shazam-container no-animation\"\n                    hidden={!!postingStats}\n                  >\n                    <div class=\"shazam-container-inner\">\n                      <button\n                        type=\"button\"\n                        class=\"posting-stats-button\"\n                        disabled={postingStatsUIState === 'loading'}\n                        onClick={() => {\n                          renderPostingStats();\n                        }}\n                      >\n                        <div\n                          class={`posting-stats-bar posting-stats-icon ${\n                            postingStatsUIState === 'loading' ? 'loading' : ''\n                          }`}\n                          style={{\n                            '--originals-percentage': '33%',\n                            '--replies-percentage': '66%',\n                          }}\n                        />\n                        <Trans>View post stats</Trans>{' '}\n                        {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </main>\n            <footer>\n              <RelatedActions\n                info={info}\n                instance={instance}\n                standalone={standalone}\n                authenticated={authenticated}\n                onRelationshipChange={onRelationshipChange}\n                onProfileUpdate={onProfileUpdate}\n              />\n            </footer>\n          </>\n        )\n      )}\n    </div>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  onProfileUpdate = () => {},\n}) {\n  if (!info) return null;\n  const { _, t } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.fetch({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf && (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  itemProps={{\n                    className: 'danger',\n                  }}\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) setRelationship(newRelationship);\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const { t } = useLingui();\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nconst SUPPORTED_IMAGE_FORMATS = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/webp',\n];\nconst SUPPORTED_IMAGE_FORMATS_STR = SUPPORTED_IMAGE_FORMATS.join(',');\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n  const [headerPreview, setHeaderPreview] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source, avatar, header } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  const avatarMediaAttachments = [\n    ...(avatar ? [{ type: 'image', url: avatar }] : []),\n    ...(avatarPreview ? [{ type: 'image', url: avatarPreview }] : []),\n  ];\n  const headerMediaAttachments = [\n    ...(header ? [{ type: 'image', url: header }] : []),\n    ...(headerPreview ? [{ type: 'image', url: headerPreview }] : []),\n  ];\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const header = formData.get('header');\n              const avatar = formData.get('avatar');\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    header,\n                    avatar,\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Header picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"header\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setHeaderPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {header ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: headerMediaAttachments,\n                        index: 0,\n                      };\n                    }}\n                  >\n                    <img src={header} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {headerPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: headerMediaAttachments,\n                          index: 1,\n                        };\n                      }}\n                    >\n                      <img src={headerPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Profile picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"avatar\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setAvatarPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {avatar ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: avatarMediaAttachments,\n                        index: 0,\n                      };\n                    }}\n                  >\n                    <img src={avatar} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {avatarPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: avatarMediaAttachments,\n                          index: 1,\n                        };\n                      }}\n                    >\n                      <img src={avatarPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <p>\n              <label>\n                <Trans>Name</Trans>{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  const encodedAcct = punycode.toASCII(acct);\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\" title={encodedAcct}>\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { t } = useLingui();\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.fetch({\n                q: account,\n                type: 'accounts',\n                limit: 1,\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                return result.accounts[0];\n              } else if (/https?:\\/\\/[^/]+\\/@/.test(account)) {\n                const accountURL = URL.parse(account);\n                const { hostname, pathname } = accountURL;\n                const acct =\n                  pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                  '@' +\n                  hostname;\n                const result = await masto.v2.search.fetch({\n                  q: acct,\n                  type: 'accounts',\n                  limit: 1,\n                  resolve: authenticated,\n                });\n                if (result.accounts.length) {\n                  return result.accounts[0];\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) =>\n                new Date(b.updatedAt).getTime() -\n                new Date(a.updatedAt).getTime(),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        if (replyTo) {\n                          setUIState('loading');\n                          try {\n                            replyToStatus = await masto.v1.statuses\n                              .$select(replyTo.id)\n                              .fetch();\n                          } catch (e) {\n                            console.error(e);\n                            alert(t`Error fetching reply-to status!`);\n                            setUIState('default');\n                            return;\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { t } = useLingui();\n  const { draftStatus, replyTo } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasPollOrMedia = hasPoll || hasMedia;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  const { t } = useLingui();\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a href={url} target=\"_blank\" rel=\"noopener\" class=\"button plain\">\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy,\n}) {\n  const { t } = useLingui();\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (staticAccounts?.length > 0) {\n      setAccounts(staticAccounts);\n      loadRelationships(staticAccounts);\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [staticAccounts, fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">\n            {blankCopy || t`Nothing to show`}\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklch2rgb, rgb2oklch } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = () => {\n      onClose();\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, []);\n\n  useHotkeys(\n    'esc',\n    onClose,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaOkColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        return rgb2oklch(averageColor);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentColors = useMemo(() => {\n    return mediaOkColors?.map((okColor) => {\n      if (okColor) {\n        return {\n          light: oklch2rgb([0.95, 0.01, okColor[2]]),\n          dark: oklch2rgb([0.35, 0.01, okColor[2]]),\n          default: oklch2rgb([0.6, okColor[1], okColor[2]]),\n        };\n      }\n      return null;\n    });\n  });\n  const mediaAccentGradients = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    const colors = mediaAccentColors.map((color, i) => {\n      const start = i * range + gap;\n      const end = (i + 1) * range - gap;\n      if (color?.light && color?.dark) {\n        return {\n          light: `\n                rgb(${color.light?.join(',')}) ${start}%, \n                rgb(${color.light?.join(',')}) ${end}%\n              `,\n          dark: `\n                rgb(${color.dark?.join(',')}) ${start}%, \n                rgb(${color.dark?.join(',')}) ${end}%\n              `,\n        };\n      }\n\n      return {\n        light: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n        dark: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n      };\n    });\n    const lightGradient = colors.map((color) => color.light).join(', ');\n    const darkGradient = colors.map((color) => color.dark).join(', ');\n    return {\n      light: lightGradient,\n      dark: darkGradient,\n    };\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const currentColor = mediaAccentColors[currentIndex];\n    let $meta;\n    let metaColor;\n    if (currentColor) {\n      const theme = store.local.get('theme');\n      if (theme) {\n        const mediaColor = `rgb(${currentColor[theme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      } else {\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        const mediaColor = `rgb(${currentColor[colorScheme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      }\n    }\n    return () => {\n      // Reset meta color\n      if ($meta && metaColor) {\n        $meta.content = metaColor;\n      }\n    };\n  }, [currentIndex, mediaAccentColors]);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose();\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                '--accent-gradient-light': mediaAccentGradients?.light,\n                '--accent-gradient-dark': mediaAccentGradients?.dark,\n                //     backgroundImage: `linear-gradient(\n                // to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor.default.join(',')})`,\n                      '--accent-light-color': `rgb(${accentColor.light?.join(\n                        ',',\n                      )})`,\n                      '--accent-dark-color': `rgb(${accentColor.dark?.join(\n                        ',',\n                      )})`,\n                      '--accent-alpha-color': `rgba(${accentColor.default.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={() => onClose()}\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.focus();\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          {!!statusID && (\n            <Link\n              to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n                window.matchMedia('(min-width: calc(40em + 350px))').matches\n                  ? `?media=${currentIndex + 1}`\n                  : ''\n              }`}\n              class=\"button carousel-button media-post-link\"\n              // onClick={() => {\n              //   // if small screen (not media query min-width 40em + 350px), run onClose\n              //   if (\n              //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n              //   ) {\n              //     onClose();\n              //   }\n              // }}\n            >\n              <span class=\"button-label\">\n                <Trans>View post</Trans>{' '}\n              </span>\n              &raquo;\n            </Link>\n          )}\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './report-modal.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [, /*'dislike'*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [rules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    return [rules || [], domain];\n  });\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !rules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!rules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {rules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags.list({\n    limit: LIMIT,\n  });\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, t } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) =>\n      index === 0\n        ? t`Home`\n        : t({ id: 'following.title', message: 'Following' }),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type, scheduledAt } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                if (scheduledAt) states.reloadScheduledPosts++;\n                showToast({\n                  text: {\n                    post: scheduledAt\n                      ? t`Post scheduled`\n                      : t`Post published. Check it out.`,\n                    reply: scheduledAt\n                      ? t`Reply scheduled`\n                      : t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    if (scheduledAt) {\n                      navigate('/sp');\n                    } else {\n                      navigate(\n                        instance\n                          ? `/${instance}/s/${newStatus.id}`\n                          : `/s/${newStatus.id}`,\n                      );\n                    }\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.index}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, t } from '@lingui/core/macro';\nimport { Plural, Select, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { api } from '../utils/api';\nimport { isFiltered } from '../utils/filters';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n  annual_report: 'celebrate',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: () => t`A post you interacted with has been edited.`,\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n  annual_report: ({ year }) => <Trans>Your {year} #Wrapstodon is here!</Trans>,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    annualReport,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    _groupKeys,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n    groupKey,\n  } = notification;\n  let { type } = notification;\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  if (typeof text === 'function') {\n    const count =\n      _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || (status ? 1 : 0);\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({\n        account: <NameText account={account} showAvatar />,\n        emoji: notification.emoji,\n        emojiURL,\n      });\n    } else if (type === 'annual_report') {\n      text = text({\n        ...notification.annualReport,\n      });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  const diffCount =\n    notificationsCount > 0 && notificationsCount > sampleAccounts?.length;\n  const expandAccounts = diffCount ? 'remote' : 'local';\n\n  // If there's a status and filter action is 'hide', then the notification is hidden\n  // TODO: Handle 'warn' action one day\n  if (!!status?.filtered) {\n    const isOwnPost = status?.account?.id === currentAccount;\n    const filterInfo = isFiltered(status.filtered, 'notifications');\n    if (!isSelf && !isOwnPost && filterInfo?.action === 'hide') {\n      return null;\n    }\n  }\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      data-group-key={_groupKeys?.join(' ') || groupKey}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {type !== 'mention' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n            {type === 'annual_report' && (\n              <div>\n                <Link to={`/annual_report/${annualReport?.year}`}>\n                  <Trans>View #Wrapstodon</Trans>\n                </Link>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                          ? 'xl'\n                          : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {type === 'favourite+reblog' && expandAccounts === 'remote' ? (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                data-group-keys={_groupKeys?.join(' ')}\n                onClick={() => {\n                  states.showGenericAccounts = {\n                    heading: genericAccountsHeading,\n                    fetchAccounts: async () => {\n                      const keyAccounts = await Promise.allSettled(\n                        _groupKeys.map(async (gKey) => {\n                          const iterator = masto.v2.notifications\n                            .$select(gKey)\n                            .accounts.list();\n                          return [gKey, (await iterator.next()).value];\n                        }),\n                      );\n                      const accounts = [];\n                      for (const keyAccount of keyAccounts) {\n                        const [key, _accounts] = keyAccount.value;\n                        const type = /^favourite/.test(key)\n                          ? 'favourite'\n                          : /^reblog/.test(key)\n                            ? 'reblog'\n                            : null;\n                        if (!type) continue;\n                        for (const account of _accounts) {\n                          const theAccount = accounts.find(\n                            (a) => a.id === account.id,\n                          );\n                          if (theAccount) {\n                            theAccount._types.push(type);\n                          } else {\n                            account._types = [type];\n                            accounts.push(account);\n                          }\n                        }\n                      }\n                      return {\n                        done: true,\n                        value: accounts,\n                      };\n                    },\n                    showReactions: true,\n                    postID: statusKey(actualStatusID, instance),\n                  };\n                }}\n              >\n                <Icon icon=\"chevron-down\" />\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                onClick={handleOpenGenericAccounts}\n              >\n                {_accounts.length > AVATARS_LIMIT &&\n                  `+${_accounts.length - AVATARS_LIMIT}`}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            )}\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  const { t } = useLingui();\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { t } = useLingui();\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <Trans>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <Trans>\n                  Posts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <Trans>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </Trans>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <Trans>\n                  Look up <mark>{query}</mark>\n                </Trans>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <Trans>\n                  Accounts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  console.log('onClick', e);\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return isSearchPage || hasModal;\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { t, _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  const isMultiColumnMode =\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode);\n  if (isMultiColumnMode) {\n    return null;\n  }\n\n  const menuRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else {\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else {\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  const navigate = useNavigate();\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e, handler) => {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      if (index < formattedShortcuts.length) {\n        const { path } = formattedShortcuts[index];\n        if (path) {\n          navigate(path);\n          menuRef.current?.closeMenu?.();\n        }\n      }\n    },\n    {\n      enabled: !isMultiColumnMode,\n    },\n  );\n\n  const [lists, setLists] = useState([]);\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>{list.title}</span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  const { t } = useLingui();\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media']?.toLowerCase() || 'default';\n  }, []);\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = store.local.getJSON('accounts') || [];\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes.list({\n        limit: 80,\n      });\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks.list({\n        limit: 80,\n      });\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans id=\"following.title\">Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <ListMenu menuState={menuState} />\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/sp\">\n                  <Icon icon=\"schedule\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Scheduled Posts</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nfunction ListMenu({ menuState }) {\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState, supportsLists]);\n\n  return lists.length > 0 ? (\n    <SubMenu2\n      menuClassName=\"nav-submenu\"\n      overflow=\"auto\"\n      gap={-8}\n      label={\n        <>\n          <Icon icon=\"list\" size=\"l\" />\n          <span class=\"menu-grow\">\n            <Trans>Lists</Trans>\n          </span>\n          <Icon icon=\"chevron-right\" />\n        </>\n      }\n    >\n      <MenuLink to=\"/l\">\n        <span>\n          <Trans>All Lists</Trans>\n        </span>\n      </MenuLink>\n      {lists?.length > 0 && (\n        <>\n          <MenuDivider />\n          {lists.map((list) => (\n            <MenuLink key={list.id} to={`/l/${list.id}`}>\n              <span>{list.title}</span>\n            </MenuLink>\n          ))}\n        </>\n      )}\n    </SubMenu2>\n  ) : (\n    supportsLists && (\n      <MenuLink to=\"/l\">\n        <Icon icon=\"list\" size=\"l\" />\n        <span>\n          <Trans>Lists</Trans>\n        </span>\n      </MenuLink>\n    )\n  );\n}\n\nexport default memo(NavMenu);\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'start',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n  __BENCHMARK.start(`timeline-${id}-load`);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n          __BENCHMARK.end(`timeline-${id}-load`);\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          if (firstLoad && !items.length && errorText) {\n            showToast(errorText);\n          }\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys('j, shift+j', (_, handler) => {\n    // focus on next status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    ).filter((item) => !!item.offsetHeight);\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (handler.shift) {\n        // get next status that's not .timeline-item-alt\n        nextItem = allItems.find(\n          (item, index) =>\n            index > activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k, shift+k', (_, handler) => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    ).filter((item) => !!item.offsetHeight);\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (handler.shift) {\n        // get prev status that's not .timeline-item-alt\n        prevItem = allItems.findLast(\n          (item, index) =>\n            index < activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    // open active status\n    const activeItem = document.activeElement;\n    if (activeItem?.matches(itemsSelector)) {\n      activeItem.click();\n    }\n  });\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts);\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef(node);\n          kRef(node);\n          oRef(node);\n          dotRef(node);\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    const { t } = useLingui();\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = plural(fItems.length, {\n          one: '# Boost',\n          other: '# Boosts',\n        });\n      } else if (type === 'pinned') {\n        title = t`Pinned posts`;\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered) filteredItemsIDs.add(a.id);\n          if (bFiltered) filteredItemsIDs.add(b.id);\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const { t } = useLingui();\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.fetch({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const { i18n, t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.fetch({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        });\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      // Check if value is same as pinned post (results)\n      // If the index for every post is the same, means API might not support pinned posts\n      if (results.length) {\n        let pinnedStatusesIds = [];\n        if (results[0]?.type === 'pinned') {\n          pinnedStatusesIds = results[0].id;\n        } else {\n          pinnedStatusesIds = results\n            .filter((status) => status._pinned)\n            .map((status) => status.id);\n        }\n        const containsAllPinned = pinnedStatusesIds.every((postId) =>\n          value.some((status) => status.id === postId),\n        );\n        if (containsAllPinned) {\n          // Remove pinned posts\n          results = [];\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = (/@/.test(account.acct) ? '' : '@') + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccount = useCallback(() => {\n    return memFetchAccount(id, masto);\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url).hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <Timeline\n      key={id}\n      title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n      titleComponent={\n        <h1\n          class=\"header-double-lines header-account\"\n          // onClick={() => {\n          //   states.showAccount = {\n          //     account,\n          //     instance,\n          //   };\n          // }}\n        >\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          <div>\n            <span class=\"bidi-isolate\">@{acct}</span>\n          </div>\n        </h1>\n      }\n      id=\"account-statuses\"\n      instance={instance}\n      emptyText={t`Nothing to see here yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchAccountStatuses}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      timelineStart={TimelineStart}\n      refresh={[\n        excludeReplies,\n        excludeBoosts,\n        tagged,\n        media,\n        month + account?.acct,\n      ].toString()}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            disabled={!allowSwitch}\n            onClick={() => {\n              (async () => {\n                try {\n                  const { masto } = api({\n                    instance: accountInstance,\n                  });\n                  const acc = await masto.v1.accounts.lookup({\n                    acct: account.acct,\n                  });\n                  const { id } = acc;\n                  location.hash = `/${accountInstance}/a/${id}`;\n                } catch (e) {\n                  console.error(e);\n                  alert(t`Unable to fetch account info`);\n                }\n              })();\n            }}\n          >\n            <Icon icon=\"transfer\" />{' '}\n            <small class=\"menu-double-lines\">\n              <Trans>\n                Switch to account's instance{' '}\n                {accountInstance ? (\n                  <>\n                    {' '}\n                    (<b>{punycode.toUnicode(accountInstance)}</b>)\n                  </>\n                ) : null}\n              </Trans>\n            </small>\n          </MenuItem>\n          {!sameCurrentInstance && (\n            <MenuItem\n              onClick={() => {\n                (async () => {\n                  try {\n                    const acc = await currentMasto.v1.accounts.lookup({\n                      acct: account.acct + '@' + instance,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${currentInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1).toString().padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount, {\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nexport default AccountStatuses;\n","import './annual-report.css';\n\nimport { Trans } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NameText from '../components/name-text';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nexport default function AnnualReport() {\n  const params = useParams();\n  const { year } = params;\n  useTitle(year ? `Annual Report: ${year}` : 'Annual Report');\n  const { masto, instance } = api();\n  const [results, setResults] = useState(null);\n  const [uiState, setUIState] = useState('default');\n\n  useEffect(() => {\n    if (year) {\n      (async () => {\n        setUIState('loading');\n        const results = await masto.v1.annualReports.$select(year).fetch();\n        console.log('REPORT', results);\n        setResults(results);\n        setUIState('default');\n      })();\n    }\n  }, [year]);\n\n  const { accounts, annualReports, statuses } = results || {};\n  const report = annualReports?.find((report) => report.year == year)?.data;\n\n  const datePlaceholder = new Date();\n\n  return (\n    <div id=\"annual-report-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"report\">\n        <h1>{year} #Wrapstodon</h1>\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> <Trans>Loading…</Trans>\n          </p>\n        )}\n        {!!report && (\n          <dl>\n            {Object.entries(report).map(([key, value]) => (\n              <>\n                <dt>{key}</dt>\n                <dd class={`report-${key}`}>\n                  {Array.isArray(value) ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          {Object.entries(value[0]).map(([key, value]) => (\n                            <th\n                              class={\n                                key !== 'month' && typeof value === 'number'\n                                  ? 'number'\n                                  : ''\n                              }\n                            >\n                              {key}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {value.map((item) => (\n                          <tr>\n                            {Object.entries(item).map(([k, value]) => (\n                              <td\n                                class={\n                                  k !== 'month' && typeof value === 'number'\n                                    ? 'number'\n                                    : ''\n                                }\n                              >\n                                {value &&\n                                /(accountId)/i.test(k) &&\n                                /^(mostRebloggedAccounts|commonlyInteractedWithAccounts)$/i.test(\n                                  key,\n                                ) ? (\n                                  <NameText\n                                    account={accounts?.find(\n                                      (a) => a.id === value,\n                                    )}\n                                    showAvatar\n                                  />\n                                ) : k === 'month' ? (\n                                  datePlaceholder.setMonth(value - 1) &&\n                                  datePlaceholder.toLocaleString(undefined, {\n                                    month: 'long',\n                                  })\n                                ) : typeof value === 'number' ? (\n                                  value.toLocaleString()\n                                ) : (\n                                  value\n                                )}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : typeof value === 'object' ? (\n                    /^(topStatuses)$/i.test(key) ? (\n                      <dl>\n                        {Object.entries(value).map(([k, value]) => (\n                          <>\n                            <dt>{k}</dt>\n                            <dd>\n                              {value && (\n                                <Link to={`/${instance}/s/${value}`}>\n                                  <Status\n                                    status={statuses?.find(\n                                      (s) => s.id === value,\n                                    )}\n                                    size=\"s\"\n                                    readOnly\n                                  />\n                                </Link>\n                              )}\n                            </dd>\n                          </>\n                        ))}\n                      </dl>\n                    ) : (\n                      <table>\n                        <tbody>\n                          {Object.entries(value).map(([k, value]) => (\n                            <tr>\n                              <th>{k}</th>\n                              <td\n                                class={\n                                  typeof value === 'number' ? 'number' : ''\n                                }\n                              >\n                                {value}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    )\n                  ) : typeof value === 'string' ? (\n                    value\n                  ) : (\n                    // Last resort\n                    JSON.stringify(value, null, 2)\n                  )}\n                </dd>\n              </>\n            ))}\n          </dl>\n        )}\n      </div>\n      <hr />\n      <p style={{ textAlign: 'center' }}>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  const { t } = useLingui();\n  useTitle(t`Bookmarks`, '/bookmarks');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks.list({ limit: LIMIT });\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={t`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__BL_1JinT__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, select } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction Catchup() {\n  const { i18n, _, t } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    const maxCreatedAtDate = maxCreatedAt ? new Date(maxCreatedAt) : null;\n    console.debug('fetchHome', maxCreatedAtDate);\n    const allResults = [];\n    const homeIterator = masto.v1.timelines.home.list({ limit: 40 });\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterator.nextParams) {\n          if (typeof homeIterator.nextParams === 'string') {\n            homeIterator.nextParams += '&include_reblogs=true';\n          } else {\n            homeIterator.nextParams.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtDate = new Date(item.createdAt);\n            if (!maxCreatedAtDate || createdAtDate >= maxCreatedAtDate) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered) {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const handleArrowKeys = useCallback((e) => {\n    const activeElement = document.activeElement;\n    const isRadio =\n      activeElement?.tagName === 'INPUT' && activeElement.type === 'radio';\n    const isArrowKeys =\n      e.key === 'ArrowDown' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowRight';\n    if (isArrowKeys && isRadio) {\n      // Note: page scroll won't trigger on first arrow key press due to this. Subsequent presses will.\n      activeElement.blur();\n      return;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n        hlRef(node);\n        escRef(node);\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main onKeyDown={handleArrowKeys}>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let st = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                st?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = punycode.toUnicode(\n                        URL.parse(url)\n                          .hostname.replace(/^www\\./, '')\n                          .replace(/\\/$/, ''),\n                      );\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                          class=\"link-block\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <button\n                                        type=\"button\"\n                                        class=\"plain\"\n                                        style={{\n                                          padding: 0,\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          e.stopPropagation();\n                                          // Reset and filter to author\n                                          const { id } = s;\n                                          setSelectedAuthor(id);\n                                          setSelectedFilterCategory('all');\n                                        }}\n                                      >\n                                        <Avatar\n                                          url={avatarStatic}\n                                          size=\"s\"\n                                          alt={displayName}\n                                        />\n                                      </button>\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order = /(replies|favourites|reblogs)/.test(\n                              key,\n                            )\n                              ? 'desc'\n                              : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans id=\"group.filter\">Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo;\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n              ? 'reblog'\n              : isFollowedTags?.length\n                ? 'followed-tags'\n                : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n        ? CARD_DENSITY\n        : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const { t } = useLingui();\n  const {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  // const readingExpandSpoilers = true;\n  const showMedia = readingExpandSpoilers || (!spoilerText && !sensitive);\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: emojifyText(content, emojis),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {!filterInfo && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { t } = useLingui();\n  const { reblogsCount, repliesCount, favouritesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 && (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {shortenNumber(reblogsCount)}\n        </span>\n      )}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = Math.min(maxDate.getTime(), Date.now()) - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const date = new Date(item[key]);\n    if (date.getTime() > Date.now()) {\n      // Future dates go into the last bin\n      bins[bins.length - 1].push(item);\n    } else {\n      const normalized = (date.getTime() - minDate.getTime()) / range;\n      const binIndex = Math.floor(normalized * (numBins - 1));\n      bins[binIndex].push(item);\n    }\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  const { t } = useLingui();\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites.list({ limit: LIMIT });\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={t`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { t } = useLingui();\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - new Date()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={filterAction === 'warn' || !editMode}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const { t } = useLingui();\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && expiresAtDate <= new Date();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  const { t } = useLingui();\n  useTitle(\n    title ||\n      t({\n        id: 'following.title',\n        message: 'Following',\n      }),\n    path || '/following',\n  );\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterator = useRef();\n  const latestItem = useRef();\n  __BENCHMARK.end('time-to-following');\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      __BENCHMARK.start('fetch-home-first');\n      homeIterator.current = masto.v1.timelines.home.list({ limit: LIMIT });\n    }\n    if (supportsPixelfed && homeIterator.current?.nextParams) {\n      if (typeof homeIterator.current.nextParams === 'string') {\n        homeIterator.current.nextParams += '&include_reblogs=true';\n      } else {\n        homeIterator.current.nextParams.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    __BENCHMARK.end('fetch-home-first');\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || t({ id: 'following.title', message: 'Following' })}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  const { t } = useLingui();\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n      ? t`${hashtagTitle} (Media only)`\n      : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   });\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <Timeline\n      key={instance + hashtagTitle}\n      title={title}\n      titleComponent={\n        !!instance && (\n          <h1 class=\"header-double-lines\">\n            <b dir=\"auto\">{hashtagTitle}</b>\n            <div>{instance}</div>\n          </h1>\n        )\n      }\n      id=\"hashtag\"\n      instance={instance}\n      emptyText={t`No one has posted anything with this tag yet.`}\n      errorText={t`Unable to load posts with this tag`}\n      fetchItems={fetchHashtags}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      refresh={media}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          setDownOverflow\n          overflow=\"auto\"\n          // viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          {!!info && hashtags.length === 1 && (\n            <>\n              <MenuConfirm\n                subMenu\n                confirm={info.following}\n                confirmLabel={t`Unfollow #${hashtag}?`}\n                disabled={followUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFollowUIState('loading');\n                  if (info.following) {\n                    // const yes = confirm(`Unfollow #${hashtag}?`);\n                    // if (!yes) {\n                    //   setFollowUIState('default');\n                    //   return;\n                    // }\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .unfollow()\n                      .then(() => {\n                        setInfo({ ...info, following: false });\n                        showToast(t`Unfollowed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  } else {\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .follow()\n                      .then(() => {\n                        setInfo({ ...info, following: true });\n                        showToast(t`Followed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  }\n                }}\n              >\n                {info.following ? (\n                  <>\n                    <Icon icon=\"check-circle\" />{' '}\n                    <span>\n                      <Trans>Following…</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"plus\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuConfirm>\n              <MenuItem\n                type=\"checkbox\"\n                checked={isFeaturedTag}\n                disabled={featuredUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFeaturedUIState('loading');\n                  if (isFeaturedTag) {\n                    const featuredTagID = featuredTags.find(\n                      (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n                    ).id;\n                    if (featuredTagID) {\n                      masto.v1.featuredTags\n                        .$select(featuredTagID)\n                        .remove()\n                        .then(() => {\n                          setIsFeaturedTag(false);\n                          showToast(t`Unfeatured on profile`);\n                          setFeaturedTags(\n                            featuredTags.filter(\n                              (tag) => tag.id !== featuredTagID,\n                            ),\n                          );\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    } else {\n                      showToast(t`Unable to unfeature on profile`);\n                    }\n                  } else {\n                    masto.v1.featuredTags\n                      .create({\n                        name: hashtag,\n                      })\n                      .then((value) => {\n                        setIsFeaturedTag(true);\n                        showToast(t`Featured on profile`);\n                        setFeaturedTags(featuredTags.concat(value));\n                      })\n                      .catch((e) => {\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFeaturedUIState('default');\n                      });\n                  }\n                }}\n              >\n                {isFeaturedTag ? (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Featured on profile</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Feature on profile</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          {!mediaFirst && (\n            <>\n              <MenuHeader className=\"plain\">\n                <Trans>Filters</Trans>\n              </MenuHeader>\n              <MenuItem\n                type=\"checkbox\"\n                checked={!!media}\n                onClick={() => {\n                  if (media) {\n                    searchParams.delete('media');\n                  } else {\n                    searchParams.set('media', '1');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                <span class=\"menu-grow\">\n                  <Trans>Media only</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n            {({ ref }) => (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const newHashtag = e.target[0].value?.trim?.();\n                  // Use includes but need to be case insensitive\n                  if (\n                    newHashtag &&\n                    !hashtags.some(\n                      (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                    )\n                  ) {\n                    hashtags.push(newHashtag);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }\n                }}\n              >\n                <Icon icon=\"hashtag\" />\n                <input\n                  ref={ref}\n                  type=\"text\"\n                  placeholder={\n                    reachLimit\n                      ? plural(TOTAL_TAGS_LIMIT, {\n                          other: 'Max # tags',\n                        })\n                      : t`Add hashtag`\n                  }\n                  required\n                  autocorrect=\"off\"\n                  autocapitalize=\"off\"\n                  spellCheck={false}\n                  // no spaces, no hashtags\n                  pattern=\"[^#][^\\s#]+[^#]\"\n                  disabled={reachLimit}\n                  dir=\"auto\"\n                />\n              </form>\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {hashtags.map((tag, i) => (\n              <MenuItem\n                key={tag}\n                disabled={hashtags.length === 1}\n                onClick={(e) => {\n                  hashtags.splice(i, 1);\n                  hashtags.sort();\n                  // navigate(\n                  //   instance\n                  //     ? `/${instance}/t/${hashtags.join('+')}`\n                  //     : `/t/${hashtags.join('+')}`,\n                  // );\n                  location.hash = instance\n                    ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                    : `/t/${hashtags.join('+')}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                <span class=\"bidi-isolate\">\n                  <span class=\"more-insignificant\">#</span>\n                  {tag}\n                </span>\n              </MenuItem>\n            ))}\n          </MenuGroup>\n          <MenuDivider />\n          <MenuItem\n            disabled={!currentAuthenticated}\n            onClick={() => {\n              if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                alert(\n                  plural(SHORTCUTS_LIMIT, {\n                    one: 'Max # shortcut reached. Unable to add shortcut.',\n                    other: 'Max # shortcuts reached. Unable to add shortcut.',\n                  }),\n                );\n                return;\n              }\n              const shortcut = {\n                type: 'hashtag',\n                hashtag: hashtags.join(' '),\n                instance,\n                media: media ? 'on' : undefined,\n              };\n              // Check if already exists\n              const exists = states.shortcuts.some(\n                (s) =>\n                  s.type === shortcut.type &&\n                  s.hashtag\n                    .split(/[\\s+]+/)\n                    .sort()\n                    .join(' ') ===\n                    shortcut.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') &&\n                  (s.instance ? s.instance === shortcut.instance : true) &&\n                  (s.media ? !!s.media === !!shortcut.media : true),\n              );\n              if (exists) {\n                alert(t`This shortcut already exists`);\n              } else {\n                states.shortcuts.push(shortcut);\n                showToast(t`Hashtag shortcut added`);\n              }\n            }}\n          >\n            <Icon icon=\"shortcut\" />{' '}\n            <span>\n              <Trans>Add to Shortcuts</Trans>\n            </span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                location.hash = `/${newInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list.$select(id).list({\n        limit: LIMIT,\n      });\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    getLists().then(setLists);\n  }, []);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>{list.title}</span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\nfunction ListManageMembers({ listID, onClose }) {\n  const { t } = useLingui();\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            });\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\n\nconst GROUP_TYPES = ['favourite', 'reblog', 'follow'];\nconst groupable = (type) => GROUP_TYPES.includes(type);\n\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  const notificationsMap = {};\n  const newGroupNotifications1 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const {\n      type,\n      status,\n      createdAt,\n      notificationsCount,\n      sampleAccounts,\n      groupKey,\n    } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    // const sameCount =\n    notificationsCount > 0 && notificationsCount === sampleAccounts?.length;\n    // if (sameCount && (type === 'favourite' || type === 'reblog')) {\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    // const key = `${status?.id}-${virtualType}-${date}-${sameCount ? 1 : 0}`;\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      newGroupNotifications1.push(gn);\n    } else if (mappedNotification) {\n      // Merge sampleAccounts + merge _types\n      sampleAccounts.forEach((a) => {\n        const mappedAccount = mappedNotification.sampleAccounts.find(\n          (ma) => ma.id === a.id,\n        );\n        if (!mappedAccount) {\n          mappedNotification.sampleAccounts.push({\n            ...a,\n            _types: [type],\n          });\n        } else {\n          mappedAccount._types.push(type);\n          mappedAccount._types.sort().reverse();\n        }\n      });\n      // mappedNotification.notificationsCount =\n      //   mappedNotification.sampleAccounts.length;\n      mappedNotification.notificationsCount = Math.min(\n        mappedNotification.notificationsCount,\n        notificationsCount,\n      );\n      mappedNotification._notificationsCount.push(notificationsCount);\n      mappedNotification._accounts = mappedNotification.sampleAccounts;\n      mappedNotification._groupKeys.push(groupKey);\n    } else {\n      const accounts = sampleAccounts.map((a) => ({\n        ...a,\n        _types: [type],\n      }));\n      notificationsMap[key] = {\n        ...gn,\n        sampleAccounts: accounts,\n        type: virtualType,\n        _accounts: accounts,\n        _groupKeys: groupKey ? [groupKey] : [],\n        _notificationsCount: [notificationsCount],\n      };\n      newGroupNotifications1.push(notificationsMap[key]);\n    }\n  }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications1.length; i++) {\n    const gn = newGroupNotifications1[i];\n    const { type, account, _accounts, sampleAccounts, createdAt, groupKey } =\n      gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if (\n      (type === 'favourite' ||\n        type === 'reblog' ||\n        type === 'favourite+reblog') &&\n      hasOneAccount\n    ) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n        mappedNotification._groupKeys.push(groupKey);\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n          _groupKeys: groupKey ? [groupKey] : [],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  console.log('newGroupNotifications2', newGroupNotifications2);\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        types: ['mention'],\n      });\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => supports('@mastodon/grouped-notifications'),\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nexport function mastoFetchNotifications(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _, t } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterator.current = mastoFetchNotifications({\n        excludeTypes: ['follow_request'],\n      });\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const [annualReportNotification, setAnnualReportNotification] =\n    useState(null);\n  useEffect(async () => {\n    // Skip this if not in December\n    const date = new Date();\n    if (date.getMonth() !== 11) return;\n\n    // Skip if doesn't support annual report\n    if (!supports('@mastodon/annual-report')) return;\n\n    let annualReportNotification = store.account.get(\n      'annualReportNotification',\n    );\n    if (annualReportNotification) {\n      setAnnualReportNotification(annualReportNotification);\n      return;\n    }\n    const notificationIterator = mastoFetchNotifications({\n      types: ['annual_report'],\n    });\n    try {\n      const notification = await notificationIterator.next();\n      annualReportNotification = notification?.value?.notificationGroups?.[0];\n      const annualReportYear = annualReportNotification?.annualReport?.year;\n      // If same year, show the annual report\n      if (annualReportYear == date.getFullYear()) {\n        console.log(\n          'ANNUAL REPORT',\n          annualReportYear,\n          annualReportNotification,\n        );\n        setAnnualReportNotification(annualReportNotification);\n        store.account.set('annualReportNotification', annualReportNotification);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const statusLink = activeItem?.querySelector('.status-link');\n    if (statusLink) {\n      statusLink.click();\n    }\n  });\n\n  const today = new Date();\n  const todaySubHeading = useMemo(() => {\n    return niceDateTime(today, {\n      forceOpts: {\n        weekday: 'long',\n      },\n    });\n  }, [today]);\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n        oRef(node);\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        {annualReportNotification && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <Notification notification={annualReportNotification} />\n            </div>\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>{' '}\n          <small class=\"insignificant bidi-isolate\">{todaySubHeading}</small>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                const subHeading = niceDateTime(currentDay, {\n                  forceOpts: {\n                    weekday: 'long',\n                  },\n                });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && (\n                      <h2 class=\"timeline-header\">\n                        <span>{heading}</span>{' '}\n                        <small class=\"insignificant bidi-isolate\">\n                          {subHeading}\n                        </small>\n                      </h2>\n                    )}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts);\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Search({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const typeResults = {\n    statuses: statusResults,\n    accounts: accountResults,\n    hashtags: hashtagResults,\n  };\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.fetch(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            // If first item is the same, it means API doesn't support offset\n            // I know this is a very basic check, but it works for now\n            if (results[type]?.[0]?.id === typeResults[type]?.[0]?.id) {\n              setShowMore(false);\n            } else {\n              setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n              const length = results[type]?.length;\n              offsetRef.current = offsetRef.current + LIMIT;\n              setShowMore(!!length);\n            }\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    let timer;\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      timer = setTimeout(() => {\n        searchFormRef.current?.focus?.();\n      }, 150); // Right after focusDeck runs\n    }\n    return () => clearTimeout(timer);\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['/', 'Slash'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      preventDefault: true,\n    },\n  );\n\n  const itemsSelector = '.timeline > li > a, .hashtag-list > li > a';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div\n      id=\"search-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n      }}\n    >\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>\n                Enter your search term or paste a URL above to get started.\n              </Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending.list({\n      range: 'daily',\n    });\n  }\n  return masto.v1.trends.statuses.list({\n    limit: LIMIT,\n  });\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params);\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authors,\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const author = authors?.[0]?.account?.id\n                ? authors[0].account\n                : null;\n              const isShortTitle = title.length < 30;\n              const hasAuthor = !!(authorName || author);\n              const domain = punycode.toUnicode(\n                URL.parse(url)\n                  .hostname.replace(/^www\\./, '')\n                  .replace(/\\/$/, ''),\n              );\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    class={`link-block ${\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }`}\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class={`description ${\n                              hasAuthor && !isShortTitle ? '' : 'more-lines'\n                            }`}\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                        {hasAuthor && (\n                          <>\n                            <hr />\n                            <p class=\"byline\">\n                              <small>\n                                <Trans comment=\"By [Author]\">\n                                  By{' '}\n                                  {author ? (\n                                    <NameText account={author} showAvatar />\n                                  ) : authorUrl ? (\n                                    <a\n                                      href={authorUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener\"\n                                    >\n                                      {authorName}\n                                    </a>\n                                  ) : (\n                                    authorName\n                                  )}\n                                </Trans>\n                              </small>\n                            </p>\n                          </>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { useLingui } from '@lingui/react/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport isRTL from '../utils/is-rtl';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'nearest',\n  behavior: 'smooth',\n};\n\nfunction Columns() {\n  const { t } = useLingui();\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    try {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      const $column = document.querySelectorAll('#columns > *')[index];\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  useHotkeys(['[', ']'], (e, handler) => {\n    const key = handler.keys[0];\n    const currentFocusedColumn = document.activeElement.closest('#columns > *');\n\n    const rtl = isRTL();\n    const prevColKey = rtl ? ']' : '[';\n    const nextColKey = rtl ? '[' : ']';\n    let $column;\n\n    if (key === prevColKey) {\n      // If [, focus on left of focused column, else first column\n      $column = currentFocusedColumn\n        ? currentFocusedColumn.previousElementSibling\n        : document.querySelectorAll('#columns > *')[0];\n    } else if (key === nextColKey) {\n      // If ], focus on right of focused column, else 2nd column\n      $column = currentFocusedColumn\n        ? currentFocusedColumn.nextElementSibling\n        : document.querySelectorAll('#columns > *')[1];\n    }\n    if ($column) {\n      $column.focus();\n      $column.scrollIntoView(scrollIntoViewOptions);\n    }\n  });\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n      onFocus={() => {\n        // Get current focused column\n        const currentFocusedColumn =\n          document.activeElement.closest('#columns > *');\n        if (currentFocusedColumn) {\n          // Remove focus classes from all columns\n          // Add focus class to current focused column\n          document.querySelectorAll('#columns > *').forEach((column) => {\n            column.classList.toggle('focus', column === currentFocusedColumn);\n          });\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  __BENCHMARK.end('time-to-home');\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications() {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        const followRequests = await fetchFollowRequests();\n        setHasFollowRequests(!!followRequests?.length);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    if (state === 'open') loadNotifications();\n  }, [state]);\n\n  const menuRef = useRef();\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <main>\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n              .map((notification) => (\n                <Notification\n                  key={notification._ids || notification.id}\n                  instance={instance}\n                  notification={notification}\n                  disableContextMenu\n                />\n              ))}\n          </>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : (\n          uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>\n                <Trans>Unable to fetch notifications.</Trans>\n              </p>\n              <p>\n                <button type=\"button\" onClick={loadNotifications}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            </div>\n          )\n        )}\n      </main>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+\\/post\\/([^\\/]+)/i, // Threads\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const { hostname, pathname } = URL.parse(url);\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { Trans } from '@lingui/react/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.fetch({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  const { t } = useLingui();\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <span>\n                        <Icon icon=\"list\" /> <span>{list.title}</span>\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural value={lists.length} one=\"# list\" other=\"# lists\" />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Bj_CmqRM__\"","function dec2hex(dec) {\n  return ('0' + dec.toString(16)).slice(-2);\n}\nexport function verifier() {\n  var array = new Uint32Array(56 / 2);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\nfunction base64urlencode(a) {\n  let str = '';\n  const bytes = new Uint8Array(a);\n  const len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    str += String.fromCharCode(bytes[i]);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generateCodeChallenge(v) {\n  const hashed = await sha256(v);\n  return base64urlencode(hashed);\n}\n\n// If /.well-known/oauth-authorization-server exists and code_challenge_methods_supported includes \"S256\", means support PKCE\nexport async function supportsPKCE({ instanceURL }) {\n  if (!instanceURL) return false;\n  try {\n    const res = await fetch(\n      `https://${instanceURL}/.well-known/oauth-authorization-server`,\n    );\n    if (!res.ok || res.status !== 200) return false;\n    const json = await res.json();\n    if (json.code_challenge_methods_supported?.includes('S256')) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n// For debugging\nwindow.__generateCodeChallenge = generateCodeChallenge;\n","import { generateCodeChallenge, verifier } from './oauth-pkce';\n\nconst {\n  DEV,\n  PHANPY_CLIENT_NAME: CLIENT_NAME,\n  PHANPY_WEBSITE: WEBSITE,\n} = import.meta.env;\n\nconst SCOPES = 'read write follow push';\n\n/*\n  PHANPY_WEBSITE is set to the default official site.\n  It's used in pre-built releases, so there's no way to change it dynamically\n  without rebuilding.\n  Therefore, we can't use it as redirect_uri.\n  We only use PHANPY_WEBSITE if it's \"same\" as current location URL.\n  \n  Very basic check based on location.hostname for now\n*/\nconst sameSite = WEBSITE\n  ? WEBSITE.toLowerCase().includes(location.hostname)\n  : false;\nconst currentLocation = location.origin + location.pathname;\nconst REDIRECT_URI = DEV || !sameSite ? currentLocation : WEBSITE;\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: REDIRECT_URI,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getPKCEAuthorizationURL({ instanceURL, client_id }) {\n  const codeVerifier = verifier();\n  const codeChallenge = await generateCodeChallenge(codeVerifier);\n  const params = new URLSearchParams({\n    client_id,\n    code_challenge_method: 'S256',\n    code_challenge: codeChallenge,\n    redirect_uri: REDIRECT_URI,\n    response_type: 'code',\n    scope: SCOPES,\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${params.toString()}`;\n  return [authorizationURL, codeVerifier];\n}\n\nexport async function getAuthorizationURL({ instanceURL, client_id }) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: REDIRECT_URI,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n  code_verifier,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    redirect_uri: REDIRECT_URI,\n    grant_type: 'authorization_code',\n    code,\n    scope: SCOPES,\n    // client_secret,\n    // code_verifier,\n  });\n  if (client_secret) {\n    params.append('client_secret', client_secret);\n  }\n  if (code_verifier) {\n    params.append('code_verifier', code_verifier);\n  }\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n","import './login.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport {\n  getAuthorizationURL,\n  getPKCEAuthorizationURL,\n  registerApplication,\n} from '../utils/auth';\nimport { supportsPKCE } from '../utils/oauth-pkce';\nimport store from '../utils/store';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  const { t } = useLingui();\n  useTitle(t`Log in`, '/login');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n\n    (async () => {\n      // WEB_DOMAIN vs LOCAL_DOMAIN negotiation time\n      // https://docs.joinmastodon.org/admin/config/#web_domain\n      try {\n        const res = await fetch(`https://${instanceURL}/.well-known/host-meta`); // returns XML\n        const text = await res.text();\n        // Parse XML\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        // Get Link[template]\n        const link = xmlDoc.getElementsByTagName('Link')[0];\n        const template = link.getAttribute('template');\n        const url = URL.parse(template);\n        const { host } = url; // host includes the port\n        if (instanceURL !== host) {\n          console.log(`💫 ${instanceURL} -> ${host}`);\n          instanceURL = host;\n        }\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n\n      store.local.set('instanceURL', instanceURL);\n\n      setUIState('loading');\n      try {\n        const { client_id, client_secret, vapid_key } =\n          await registerApplication({\n            instanceURL,\n          });\n\n        const authPKCE = await supportsPKCE({ instanceURL });\n        console.log({ authPKCE });\n        if (authPKCE) {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            const [url, verifier] = await getPKCEAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n            store.sessionCookie.set('codeVerifier', verifier);\n            location.href = url;\n          } else {\n            alert(t`Failed to register application`);\n          }\n        } else {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            location.href = await getAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n          } else {\n            alert(t`Failed to register application`);\n          }\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n      ? instancesSuggestions[0]\n      : instanceText\n        ? instancesList.find((instance) => instance.includes(instanceText))\n        : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={t`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './scheduled-posts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useMemo, useReducer, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport ScheduledAtField, {\n  getLocalTimezoneName,\n} from '../components/ScheduledAtField';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 40;\n\nexport default function ScheduledPosts() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  useTitle(t`Scheduled Posts`, '/sp');\n  const { masto } = api();\n  const [scheduledPosts, setScheduledPosts] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [showScheduledPostModal, setShowScheduledPostModal] = useState(false);\n\n  useEffect(reload, [snapStates.reloadScheduledPosts]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const postsIterator = masto.v1.scheduledStatuses.list({ limit: LIMIT });\n        const allPosts = [];\n        let posts;\n        do {\n          const result = await postsIterator.next();\n          posts = result.value;\n          if (posts?.length) {\n            allPosts.push(...posts);\n          }\n        } while (posts?.length);\n        setScheduledPosts(allPosts);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      } finally {\n        setUIState('default');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"scheduled-posts-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Scheduled Posts</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <Menu2\n                portal\n                setDownOverflow\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                position=\"anchor\"\n                menuButton={\n                  <button type=\"button\" class=\"plain\">\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                }\n              >\n                <MenuItem\n                  onClick={() => {\n                    reload();\n                  }}\n                >\n                  <Icon icon=\"refresh\" size=\"l\" />\n                  <span>\n                    <Trans>Refresh</Trans>\n                  </span>\n                </MenuItem>\n              </Menu2>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!scheduledPosts.length ? (\n            <p class=\"ui-state\">\n              {uiState === 'loading' ? <Loader /> : t`No scheduled posts.`}\n            </p>\n          ) : (\n            <ul class=\"posts-list\">\n              {scheduledPosts.map((post) => {\n                const { id, params, scheduledAt, mediaAttachments } = post;\n                const {\n                  inReplyToId,\n                  language,\n                  poll,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                } = params;\n                const status = {\n                  // account: account.info,\n                  id,\n                  inReplyToId,\n                  language,\n                  mediaAttachments,\n                  poll: poll\n                    ? {\n                        ...poll,\n                        expiresAt: new Date(Date.now() + poll.expiresIn * 1000),\n                        options: poll.options.map((option) => ({\n                          title: option,\n                          votesCount: 0,\n                        })),\n                      }\n                    : undefined,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                  content: `<p>${text}</p>`,\n                  // createdAt: scheduledAt,\n                };\n\n                return (\n                  <li key={id}>\n                    <ScheduledPostPreview\n                      status={status}\n                      scheduledAt={scheduledAt}\n                      onClick={() => {\n                        setShowScheduledPostModal({\n                          post: status,\n                          scheduledAt: new Date(scheduledAt),\n                        });\n                      }}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {showScheduledPostModal && (\n            <Modal\n              onClick={(e) => {\n                if (e.target === e.currentTarget) {\n                  setShowScheduledPostModal(false);\n                }\n              }}\n            >\n              <ScheduledPostEdit\n                post={showScheduledPostModal.post}\n                scheduledAt={showScheduledPostModal.scheduledAt}\n                onClose={() => setShowScheduledPostModal(false)}\n              />\n            </Modal>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction ScheduledPostPreview({ status, scheduledAt, onClick }) {\n  // Look at scheduledAt, if it's months away, ICON = 'month'. If it's days away, ICON = 'day', else ICON = 'time'\n  const icon = useMemo(() => {\n    const hours =\n      (new Date(scheduledAt).getTime() - Date.now()) / (1000 * 60 * 60);\n    if (hours < 24) {\n      return 'time';\n    } else if (hours < 720) {\n      // 30 days\n      return 'day';\n    } else {\n      return 'month';\n    }\n  }, [scheduledAt]);\n\n  return (\n    <button type=\"button\" class=\"textual block\" onClick={onClick}>\n      <div class={`post-schedule-meta post-schedule-${icon}`}>\n        <Icon icon={icon} class=\"insignificant\" />{' '}\n        <span>\n          <Trans comment=\"Scheduled [in 1 day] ([Thu, Feb 27, 6:30:00 PM])\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>{' '}\n            <small>\n              (\n              {niceDateTime(scheduledAt, {\n                formatOpts: {\n                  weekday: 'short',\n                  second: 'numeric',\n                },\n              })}\n              )\n            </small>\n          </Trans>\n        </span>\n      </div>\n      <Status status={status} size=\"s\" previewMode readOnly />\n    </button>\n  );\n}\n\nfunction ScheduledPostEdit({ post, scheduledAt, onClose }) {\n  const { masto } = api();\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const [newScheduledAt, setNewScheduledAt] = useState();\n  const differentScheduledAt =\n    newScheduledAt && newScheduledAt.getTime() !== scheduledAt.getTime();\n  const localTZ = getLocalTimezoneName();\n  const pastSchedule = scheduledAt && scheduledAt <= Date.now();\n\n  const { inReplyToId } = post;\n  const [replyToStatus, setReplyToStatus] = useState(null);\n  // TODO: Uncomment this once https://github.com/mastodon/mastodon/issues/34000 is fixed\n  // useEffect(() => {\n  //   if (inReplyToId) {\n  //     (async () => {\n  //       try {\n  //         const status = await masto.v1.statuses.$select(inReplyToId).fetch();\n  //         setReplyToStatus(status);\n  //       } catch (e) {\n  //         console.error(e);\n  //       }\n  //     })();\n  //   }\n  // }, [inReplyToId]);\n\n  return (\n    <div id=\"scheduled-post-sheet\" class=\"sheet\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" size=\"l\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>\n          <Trans comment=\"Scheduled [in 1 day]\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>\n          </Trans>\n          <br />\n          <small>\n            {niceDateTime(scheduledAt, {\n              formatOpts: {\n                weekday: 'short',\n                second: 'numeric',\n              },\n            })}\n          </small>\n        </h2>\n      </header>\n      <main tabIndex=\"-1\">\n        {!!replyToStatus && (\n          <div class=\"status-reply\">\n            <Status status={replyToStatus} size=\"s\" previewMode readOnly />\n          </div>\n        )}\n        <Status\n          status={post}\n          size=\"s\"\n          previewMode\n          readOnly\n          onMediaClick={(e, i, media, status) => {\n            e.preventDefault();\n            states.showMediaModal = {\n              mediaAttachments: post.mediaAttachments,\n              mediaIndex: i,\n            };\n          }}\n        />\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.scheduledStatuses.$select(post.id).update({\n                  scheduledAt: newScheduledAt.toISOString(),\n                });\n                showToast(t`Scheduled post rescheduled`);\n                onClose();\n                setUIState('default');\n                states.reloadScheduledPosts++;\n              } catch (e) {\n                setUIState('error');\n                console.error(e);\n                showToast(t`Failed to reschedule post`);\n              }\n            })();\n          }}\n        >\n          <footer>\n            <div class=\"row\">\n              <span>\n                <ScheduledAtField\n                  scheduledAt={scheduledAt}\n                  setScheduledAt={(date) => {\n                    setNewScheduledAt(date);\n                  }}\n                />{' '}\n                <small class=\"ib\">{localTZ}</small>\n              </span>\n            </div>\n            <div class=\"row\">\n              <button\n                disabled={\n                  !differentScheduledAt || uiState === 'loading' || pastSchedule\n                }\n              >\n                <Trans>Reschedule</Trans>\n              </button>\n              <span class=\"grow\" />\n              <MenuConfirm\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete scheduled post?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await api()\n                        .masto.v1.scheduledStatuses.$select(post.id)\n                        .remove();\n                      showToast(t`Scheduled post deleted`);\n                      onClose();\n                      setUIState('default');\n                      states.reloadScheduledPosts++;\n                    } catch (e) {\n                      setUIState('error');\n                      console.error(e);\n                      showToast(t`Failed to delete scheduled post`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading' || pastSchedule}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            </div>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n","import './status.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { t } = useLingui();\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const handleMediaClose = useCallback(() => {\n    if (\n      !window.matchMedia('(min-width: calc(40em + 350px))').matches &&\n      snapStates.prevLocation\n    ) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\n// oldest first\nfunction createdAtSort(a, b) {\n  return new Date(b.created_at) - new Date(a.created_at);\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        ancestors.sort(createdAtSort);\n        descendants.sort(createdAtSort);\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find(\n              (s) =>\n                s.id === status.inReplyToId &&\n                s.account.id === heroStatus.account.id,\n            ) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        // sort hero author to top\n        nestedDescendants.sort((a, b) => {\n          const heroAccountID = heroStatus.account.id;\n          if (a.account.id === heroAccountID && b.account.id !== heroAccountID)\n            return -1;\n          if (b.account.id === heroAccountID && a.account.id !== heroAccountID)\n            return 1;\n          return 0;\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        let descendantLevelsCount = 1;\n        function expandReplies(_replies, level) {\n          const nextLevel = level + 1;\n          if (nextLevel > descendantLevelsCount) {\n            descendantLevelsCount = level;\n          }\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            level: nextLevel,\n            replies: expandReplies(_r.__replies, nextLevel),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            level: 1,\n            replies: expandReplies(s.__replies, 1),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        // const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        const heroLimit = ancestors.length || 0; // 0-indexed\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses, descendantLevelsCount });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t({\n          id: 'post.title',\n          message: 'Post',\n        }),\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url).hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys('backspace', () => {\n    location.hash = closeLink;\n  });\n\n  useHotkeys('j', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    console.log({ allStatusLinks });\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let nextStatus = allStatusLinks[activeStatusIndex + 1];\n      if (nextStatus) {\n        nextStatus.focus();\n        nextStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  useHotkeys('k', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let prevStatus = allStatusLinks[activeStatusIndex - 1];\n      if (prevStatus) {\n        prevStatus.focus();\n        prevStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys('x', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const details = activeStatus.nextElementSibling;\n      if (details && details.tagName.toLowerCase() === 'details') {\n        details.open = !details.open;\n      }\n    }\n  });\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n        level,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link\n                    to={\n                      DEFAULT_INSTANCE\n                        ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                        : '/login'\n                    }\n                    class=\"button\"\n                  >\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.fetch({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={level}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title={t`Go to main post`}\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                <Trans id=\"post.title\">Post</Trans>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={t`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={ancestor.account.avatar}\n                        alt={ancestor.account.displayName}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title={t`Switch to Side Peek view`}\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>\n                  <Trans>Refresh</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  {viewMode === 'full'\n                    ? t`Switch to Side Peek view`\n                    : t`Switch to Full view`}\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" />{' '}\n                <span>\n                  <Trans>Show all sensitive content</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">\n                <Trans>Experimental</Trans>\n              </MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert(t`Unable to switch`);\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  {postInstance\n                    ? t`Switch to post's instance (${punycode.toUnicode(\n                        postInstance,\n                      )})`\n                    : t`Switch to post's instance`}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li class=\"descendant descendant-more\">\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  <Trans>Show more…</Trans>{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              <Trans>Unable to load post</Trans>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // If not open, delay render replies\n  const [renderReplies, setRenderReplies] = useState(openBefore || open);\n  useEffect(() => {\n    let timer;\n    if (!openBefore && !open) {\n      timer = setTimeout(() => setRenderReplies(true), 100);\n    }\n    return () => clearTimeout(timer);\n  }, [openBefore, open]);\n\n  const Container = open ? 'div' : 'details';\n  const isDetails = Container === 'details';\n\n  return (\n    <Container\n      ref={detailsRef}\n      class=\"replies\"\n      open={isDetails ? openBefore || open : undefined}\n      onToggle={\n        isDetails\n          ? (e) => {\n              const { open } = e.target;\n              // use first reply as ID\n              cachedRepliesToggle[replies[0].id] = open;\n            }\n          : undefined\n      }\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      {!open && (\n        <summary class=\"replies-summary\" hidden={open}>\n          <span class=\"avatars\">\n            {accounts.map((a) => (\n              <Avatar\n                key={a.id}\n                url={a.avatarStatic}\n                title={`${a.displayName} @${a.username}`}\n                squircle={a?.bot}\n              />\n            ))}\n          </span>\n          <span class=\"replies-counts\">\n            <b>\n              <Plural\n                value={replies.length}\n                one=\"# reply\"\n                other={\n                  <Trans>\n                    <span title={replies.length}>\n                      {shortenNumber(replies.length)}\n                    </span>{' '}\n                    replies\n                  </Trans>\n                }\n              />\n            </b>\n            {!sameCount && totalComments > 1 && (\n              <>\n                {' '}\n                &middot;{' '}\n                <span>\n                  <Plural\n                    value={totalComments}\n                    one=\"# comment\"\n                    other={\n                      <Trans>\n                        <span title={totalComments}>\n                          {shortenNumber(totalComments)}\n                        </span>{' '}\n                        comments\n                      </Trans>\n                    }\n                  />\n                </span>\n              </>\n            )}\n          </span>\n          <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n          {!!parentLink && (\n            <Link\n              class=\"replies-parent-link\"\n              to={parentLink.to}\n              onClick={parentLink.onClick}\n              title={t`View post with its replies`}\n            >\n              &raquo;\n            </Link>\n          )}\n        </summary>\n      )}\n      {renderReplies && (\n        <ul>\n          {replies.map((r) => (\n            <li key={r.id}>\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n              <div class=\"status-focus\" tabIndex={0}>\n                <Status\n                  statusID={r.id}\n                  instance={instance}\n                  withinContext\n                  size=\"s\"\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  showActionsBar\n                />\n                {!r.replies?.length && r.repliesCount > 0 && (\n                  <div class=\"replies-link\">\n                    <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                    <span title={r.repliesCount}>\n                      {shortenNumber(r.repliesCount)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {/* </Link> */}\n              {r.replies?.length && (\n                <SubComments\n                  instance={instance}\n                  replies={r.replies}\n                  level={r.level}\n                  accWeight={!open ? r.weight : totalWeight}\n                  openAll={openAll}\n                  parentLink={{\n                    to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                    onClick: () => {\n                      resetScrollPosition(r.id);\n                    },\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__BbkKeAoc__\"","export default \"__VITE_ASSET__C$apFnmr__\"","export default \"__VITE_ASSET__MUCjVR2Z__\"","export default \"__VITE_ASSET__Pb$jWfr9__\"","export default \"__VITE_ASSET__DJIucEyS__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logoText from '../assets/logo-text.svg';\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  const { t } = useLingui();\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport { memo } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport AnnualReport from './pages/annual-report';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport ScheduledPosts from './pages/scheduled-posts';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  hasInstance,\n  hasPreferences,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport {\n  getAccount,\n  getCurrentAccount,\n  setCurrentAccountID,\n} from './utils/store-utils';\n\nimport './utils/toast-alert';\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(\n  () => {\n    if (!window.__IDLE__) return;\n    const { statuses, unfurledLinks, notifications } = states;\n    let keysCount = 0;\n    const { instance } = api();\n    for (const key in statuses) {\n      if (!window.__IDLE__) break;\n      try {\n        const $post = document.querySelector(\n          `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n        );\n        const postInNotifications = notifications.some(\n          (n) => key === statusKey(n.status?.id, instance),\n        );\n        if (!$post && !postInNotifications) {\n          delete states.statuses[key];\n          delete states.statusQuotes[key];\n          for (const link in unfurledLinks) {\n            const unfurled = unfurledLinks[link];\n            const sKey = statusKey(unfurled.id, unfurled.instance);\n            if (sKey === key) {\n              delete states.unfurledLinks[link];\n              break;\n            }\n          }\n          keysCount++;\n        }\n      } catch (e) {}\n    }\n    if (keysCount) {\n      console.info(`GC: Removed ${keysCount} keys`);\n    }\n  },\n  15 * 60 * 1000,\n);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      // Don't reset theme color if media modal is showing\n      // Media modal will set its own theme color based on the media's color\n      const showingMediaModal =\n        document.getElementsByClassName('media-modal-container').length > 0;\n      if (showingMediaModal) return;\n\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nconst BENCHES = new Map();\nwindow.__BENCH_RESULTS = new Map();\nwindow.__BENCHMARK = {\n  start(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    // If already started, ignore\n    if (BENCHES.has(name)) return;\n    const start = performance.now();\n    BENCHES.set(name, start);\n  },\n  end(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    const start = BENCHES.get(name);\n    if (start) {\n      const end = performance.now();\n      const duration = end - start;\n      __BENCH_RESULTS.set(name, duration);\n      BENCHES.delete(name);\n    }\n  },\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  __BENCHMARK.start('app-init');\n  __BENCHMARK.start('time-to-following');\n  __BENCHMARK.start('time-to-home');\n  __BENCHMARK.start('time-to-isLoggedIn');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const clientID = store.sessionCookie.get('clientID');\n      const clientSecret = store.sessionCookie.get('clientSecret');\n      const vapidKey = store.sessionCookie.get('vapidKey');\n      const verifier = store.sessionCookie.get('codeVerifier');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n          code_verifier: verifier || undefined,\n        });\n\n        if (accessToken) {\n          const client = initClient({ instance: instanceURL, accessToken });\n          await Promise.allSettled([\n            initPreferences(client),\n            initInstance(client, instanceURL),\n            initAccount(client, instanceURL, accessToken, vapidKey),\n          ]);\n          initStates();\n          window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n\n          setIsLoggedIn(true);\n          setUIState('default');\n        } else {\n          setUIState('error');\n        }\n        __BENCHMARK.end('app-init');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const searchAccount = decodeURIComponent(\n        (window.location.search.match(/account=([^&]+)/) || [, ''])[1],\n      );\n      let account;\n      if (searchAccount) {\n        account = getAccount(searchAccount);\n        console.log('searchAccount', searchAccount, account);\n        if (account) {\n          setCurrentAccountID(account.info.id);\n          window.history.replaceState(\n            {},\n            document.title,\n            window.location.pathname || '/',\n          );\n        }\n      }\n      if (!account) {\n        account = getCurrentAccount();\n      }\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            if (hasPreferences() && hasInstance(instance)) {\n              // Non-blocking\n              initPreferences(client);\n              initInstance(client, instance);\n            } else {\n              await Promise.allSettled([\n                initPreferences(client),\n                initInstance(client, instance),\n              ]);\n            }\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n            __BENCHMARK.end('app-init');\n          }\n        })();\n      } else {\n        setUIState('default');\n        __BENCHMARK.end('app-init');\n      }\n    }\n\n    // Cleanup\n    store.sessionCookie.del('clientID');\n    store.sessionCookie.del('clientSecret');\n    store.sessionCookie.del('codeVerifier');\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  if (uiState === 'loading') {\n    return <Loader id=\"loader-root\" />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      <Routes>\n        <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n      </Routes>\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      <SearchCommand onClose={focusDeck} />\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction Root({ isLoggedIn }) {\n  if (isLoggedIn) {\n    __BENCHMARK.end('time-to-isLoggedIn');\n  }\n  return isLoggedIn ? <Home /> : <Welcome />;\n}\n\nconst PrimaryRoutes = memo(({ isLoggedIn }) => {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route path=\"/\" element={<Root isLoggedIn={isLoggedIn} />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n    </Routes>\n  );\n});\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/sp\" element={<ScheduledPosts />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n          <Route path=\"/annual_report/:year\" element={<AnnualReport />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { initActivateLang } from './utils/lang';\n\ninitActivateLang();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\n// Service worker cache cleanup\nif ('serviceWorker' in navigator && typeof caches !== 'undefined') {\n  const MAX_SW_CACHE_SIZE = 50;\n  const IGNORE_CACHE_KEYS = ['icons'];\n  let clearRanOnce = false;\n  const FAST_INTERVAL = 10_000; // 10 seconds\n  const SLOW_INTERVAL = 60 * 60 * 1000; // 1 hour\n  async function clearCaches() {\n    if (window.__IDLE__) {\n      try {\n        const keys = await caches.keys();\n        for (const key of keys) {\n          if (IGNORE_CACHE_KEYS.includes(key)) continue;\n          const cache = await caches.open(key);\n          const _keys = await cache.keys();\n          if (_keys.length > MAX_SW_CACHE_SIZE) {\n            console.warn('Cleaning cache', key, _keys.length);\n            const deleteKeys = _keys.slice(MAX_SW_CACHE_SIZE);\n            for (const deleteKey of deleteKeys) {\n              await cache.delete(deleteKey);\n            }\n          }\n        }\n        clearRanOnce = true;\n      } catch (e) {} // Silent fail\n    }\n    // Once cleared, clear again at slower interval\n    setTimeout(clearCaches, clearRanOnce ? SLOW_INTERVAL : FAST_INTERVAL);\n  }\n  setTimeout(clearCaches, FAST_INTERVAL);\n}\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","t","_useLingui","visible","setVisible","useState","visibleTimeout","clearTimeout","setTimeout","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","user","notification","subscribe","log","entry","_a","checkForUpdates","clearInterval","r","info","useInterval","lastCheckDate","useHotkeys","currentCloakMode","Date","diff","_t","settings","fetchLatestPostsMemoized","pmem","currentAccountID","statusesIterator","accounts","$select","statuses","exclude_replies","exclude_reblogs","maxAge","ComposeButton","snapStates","useSnapshot","menuOpen","setMenuOpen","latestPosts","setLatestPosts","loadingPosts","setLoadingPosts","buttonRef","menuRef","handleButton","composerState","minimized","openOSK","shiftKey","openCompose","showCompose","ignoreEventWhen","querySelector","bindLongPress","useLongPress","threshold","fetchLatestPosts","useCallback","getCurrentAccountID","posts","handleReplyToPost","post","replyToStatus","_jsxs","_Fragment","children","_jsx","ref","type","onClick","onContextMenu","preventDefault","class","publishing","publishingError","Icon","icon","size","alt","ControlledMenu","state","undefined","anchorRef","onClose","direction","gap","unmountOnClose","portal","target","body","boundingBoxPadding","safeBoundingBoxPadding","containerProps","style","zIndex","closeMenu","submenuOpenDelay","MenuLink","to","_Trans","MenuDivider","SubMenu2","align","shift","disabled","label","className","map","createdDate","createdAt","isWithinDay","getTime","MenuItem","statusPeek","RelativeTime","datetime","format","dateTime","toISOString","title","toLocaleString","niceDateTime","KeyboardShortcutsHelp","showKeyboardShortcutsHelp","isCatchUpPage","Modal","tabindex","keys","0","action","1","2","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","i","child","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","isStandalone","matchMedia","matches","Accounts","store","local","getJSON","currentAccount","moreThanOneAccount","_","reload","useReducer","accountsListParent","tabIndex","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","NameText","test","showAcct","setCurrentAccountID","Menu2","menuButton","location","href","splice","MenuConfirm","subMenu","confirmLabel","menuItemClassName","Link","logo","regionMaps","LangSelector","i18n","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","replace","native","localeCode2Text","code","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","a","b","order","localeCompare","DEFAULT_LANG","onChange","set","common","import","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","sameKey","vapidKey","key2","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","data","policy","removeSubscription","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_WEBSITE","WEBSITE","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","Settings","currentTheme","get","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","authenticated","onInput","formData","theme","documentElement","html","classList","$manualMeta","$autoMetas","querySelectorAll","m","toggle","defaultChecked","fontSize","min","max","step","parseInt","setProperty","rel","for","checked","autoRefresh","boostsCarousel","targetLanguages","showCommon","contentTranslationHideLanguages","contentTranslation","composerGIFPicker","mediaAltGenerator","supports","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","PushNotificationsSection","display","flexWrap","lineHeight","src","aspectRatio","verticalAlign","borderRadius","readOnly","__BUILD_TIME__","showToast","caches","uiState","setUIState","allowNotifications","setAllowNotifications","setNeedRelogin","pushFormRef","needRelogin","alerts","previousPolicyRef","policyEl","namedItem","isLoading","values","mention","favourite","reblog","follow","status","key","alertsCount","allowNotifications2","_t2","permission","components","alert2","alert","focusDeck","timer","columns","getElementById","focusedColumn","focus","firstVisibleColumn","Array","from","column","getBoundingClientRect","modals","modal","modalFocusElement","pages","page","useLocationChange","useLocation","currentLocationRef","pathname","FETCH_MAX_AGE","MAX_AGE","fetchLists","lists","updatedAt","now","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","index","deleteListStore","listID","findIndex","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","onSubmit","FormData","listResult","replies_policy","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","LIMIT","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","currentID","familiarFollowers","memFetchFamiliarFollowers","fetchPostingStats","accountID","fetchStatuses","total","originals","replies","stats","boosts","memFetchPostingStats","fetchAccount","standalone","currentMasto","currentInstance","isString","setInfo","sameCurrentInstance","info2","acct","avatar","bot","displayName","emojis","fields","group","lastStatusAt","locked","note","statusesCount","username","memorial","moved","roles","hideCollections","header","headerStatic","headerIsAvatar","isSelf","infoHasEssentials","account2","updated","punycode","accountInstance","setHeaderCornerColors","followersIterator","toUnicode","domain","fetchFollowers","firstLoad","familiarFollowersCache","results","newValue","familiarFollowers2","familiar","followingIterator","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","hasPostingStats","followers","renderPostingStats","onRelationshipChange","onProfileUpdate","newAccount","headerCornerColors","stopPropagation","onError","ctx","canvas","onLoad","pixelDimension","rgbColors","OffscreenCanvas","createElement","g","imageSmoothingEnabled","drawImage","colors","getImageData","dataLength","lightenRGB","color","AccountBlock","avatarSize","handleWithInstance","clipboard","enhanceContent","verifiedAt","__html","EmojiText","text","blankCopy","follower","followersCount","shortenNumber","fetchFollowing","followingCount","excludeRelationshipAttrs","hideTime","_i18n","daysSinceLastPost","FAMILIAR_FOLLOWERS_LIMIT","sameInstance","setRelationshipUIState","relationship","setRelationship","currentAuthenticated","following","showingReblogs","currentInfo","setCurrentInfo","notifying","followedBy","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","acctWithInstance","setIsSelf","q","fetchRelationships","relationships","relationship2","showAddRemoveLists","setShowAddRemoveLists","showPrivateNoteModal","setLists","updateAccount","showTranslatedBio","showEditProfile","setShowPrivateNoteModal","lists2","loading","onMenuChange","setShowTranslatedBio","handle","niceAccountURL","newRelationship","counter","duration","error","setShowEditProfile","relationshipUIState","Loader","TranslatedBioSheet","EditProfileSheet","AddRemoveListsSheet","luminence","alpha","urlObj","host","getHTMLText","fieldsText","Math","path","_t4","_t3","listsContainingAccount","setListsContainingAccount","reloadCount","listsContainingAccount2","setShowListAddEditModal","inList","showListAddEditModal","accountIds","result","PrivateNoteSheet","initialNote","_t5","textareaRef","_b","e2","trim","SUPPORTED_IMAGE_FORMATS_STR","SUPPORTED_IMAGE_FORMATS","_t6","setAccount","headerPreview","avatarPreview","setAvatarPreview","source","fieldsAttributesRef","avatarMediaAttachments","headerMediaAttachments","header2","note2","fieldsAttributes","fieldsAttributesFields","field","avatar2","displayName2","match","file","setHeaderPreview","blob","showMediaModal","files","FieldsAttributesRow","hasValue","setHasValue","AccountHandleInfo","server","encodedAcct","dir","AccountSheet","propInstance","AccountInfo","lookup","skip_webfinger","v2","search","resolve","accountURL","URL","parse","hostname","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","filter","startsWith","getMany","hasDrafts","abrupt","draft","draftStatus","replyTo","updatedAtDate","MiniDraft","spoilerText","mediaAttachments","hasPoll","hasMedia","firstImageMedia","image","objectURL","createObjectURL","hasPollOrMedia","EmbedModal","dangerouslySetInnerHTML","GenericAccounts","postID","isCurrentInstance","setAccounts","showMore","setShowMore","showGenericAccounts","heading","fetchAccounts","staticAccounts","showReactions","relationshipsMap","setRelationshipsMap","loadRelationships","loadAccounts","done","isArray","theAccount","j","_types","newAccounts","reloadGenericAccounts","Status","showStats","InView","MediaAltModal","forceTranslate","setForceTranslate","differentLanguage","localeMatch","l","supportsTTS","speak","whiteSpace","textWrap","TranslationBlock","sourceLanguage","classToType","obj","unpack","keyOrder","k","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","multiplyMatrices","A","B","B_cols","product","row","col","labConstants","compand","linear","sign","xyz2rgb","z","MtxAdaptMa","MtxAdaptMaI","MtxXYZ2RGB","RefWhiteRGB","Xn","Yn","Zn","LAB_CONSTANTS","As","Bs","Cs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","oklab2rgb","L","rest","X","Y","Z","OKLab_to_XYZ","b_","OKLab","LMStoXYZ","OKLabtoLMS","LMSnl","gammaAdjustSRGB","companded","rgb2xyz","MtxRGB2XYZ","rgb2oklab","xyz","XYZ_to_OKLab","XYZ","XYZtoLMS","LMStoOKLab","LMS","sin","cos","lch2lab","h","oklch2rgb","sqrt","atan2","round","lab2lch","rgb2oklch","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","behavior","showControls","setShowControls","handleSwipe","addEventListener","removeEventListener","handleScroll","abs","passive","mediaOkColors","media","blurhash","averageColor","getBlurHashAverageColor","mediaAccentColors","okColor","light","dark","default","mediaAccentGradients","range","join","lightGradient","darkGradient","toastRef","hideToast","currentColor","$meta","metaColor","mediaColor","colorScheme","content","accentColor","description","showMediaAlt","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","ReportModal","split","rules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","Object","fromEntries","category","comment","forward","ruleIds","reports","accountId","statusIds","Fragment","rule","required","maxlength","rows","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","res","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","opacity","textTransform","imgURL","multiColumnUrl","shortcutsViewMode","Boolean","shortcut","excludedViewMode","includes","shortcutsArr","temp","shortcutIndex","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","setFollowedHashtags","form","formRef","switch","followedHashtags","autocorrect","autocapitalize","tag","shortcutsStr","compressToEncodedURIComponent","importShortcutStr","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","parsed","JSON","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","v","dt","s","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","writeText","share","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","scheduledAt","reloadStatusPage","reloadScheduledPosts","reply","edit","toast","prevLocation","showSettings","showAccounts","showAccount","destination","showDrafts","contains","showShortcutsSettings","showEmbedModal","showReportModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","follow_request","severed_relationships","moderation_warning","emoji_reaction","annual_report","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","3","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","year","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","report","annualReport","_ids","_accounts","_statuses","_groupKeys","sampleAccounts","notificationsCount","groupKey","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","genericAccountsHeading","statusKey","diffCount","expandAccounts","_g","isOwnPost","isFiltered","filtered","type2","gKey","keyAccounts","keyAccount","_accounts2","status2","TruncatedLink","dispatchEvent","clientX","clientY","useTruncated","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasAccount","hasModal","hash","warn","id2","setShowNotificationSheet","tagName","instanceURL","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","select","blur","autocomplete","spellCheck","onSearch","onFocus","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","firstItem","prevItem","previousElementSibling","lastItem","click","queryType","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","isMultiColumnMode","shortcutsColumnsMode","hasLists","formattedShortcuts","pin","handler","updatesButton","instanceRef","overflow","viewScroll","menuClassName","position","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","slice","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","groupContext","contexts","contextIndex","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","aDate","bDate","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","skipThreading","ids","replyToStatuses","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","extractedTags","itemFollowedTags","acc","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","filterInfo","hasSpoiler","readingExpandMedia","mediaKey","toLowerCase","filterTitleStr","Media","showSpoilerMedia","NavMenu","showFollowing","detect","cancelOnMovement","menuState","setMenuState","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","squircle","appVersion","commitHash","__COMMIT_HASH__","confirm","ListMenu","supportsLists","scrollIntoViewOptions","block","inline","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","debug","isMediaFirstInstance","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","itemsSelector","jRef","activeItem","activeItemRect","closest","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","handleLoadNewPosts","showNewPostsIndicator","dotRef","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","hasUpdate","lastHiddenTime","TimelineItem","skeleton","inView","fItems","filteredItemsIDs","aFiltered","bFiltered","isCarousel","unfiltered","filteredItems2","has","StatusCarousel","_pinned2","_grouped","item2","statusID3","_pinned3","actualStatusID3","reblog3","statusID2","actualStatusID2","reblog2","url2","showCompact","_differentAuthor","isSpoiler","manyItems","isMiddle","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","startButtonRef","oldID","toString","setRender","render","endButtonRef","statusPeekText","statusThreadNumber","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","postId","containsAllPinned","setFeaturedTags","acctDisplay","accountDisplay","monthYear","fetchAccount2","memFetchAccount","featuredTags2","useTitle","cachedAccount","featuredTags","filterBarRef","TimelineStart","month2","date","validity","MonthPicker","active","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","monthFieldRef","yearFieldRef","checkValidity","minYear","minMonth","maxYear","maxMonth","AnnualReport","setResults","annualReports","report2","datePlaceholder","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","groups","FILTER_SORTS","FILTER_GROUPS","DTF","mem","Intl","DateTimeFormat","day","hour","minute","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","maxCreatedAtDate","allResults","mainloop","homeIterator","nextParams","createdAtDate","selfPost","addedResults","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","trimmedCatchups","lastCatchups","restCatchups","endAt","startAt","reloadCatchupsCount","_followedTags","_e","thePost","__FILTER","links","sharers","links2","link","topLinks","shared","linksLoop","likes","filteredPosts","authors","authorCounts","selectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bAccountID","aIndex","bIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBar","postsBarType","posts2","postsBins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","escRef","handleArrowKeys","ignoreModifiers","activeElement","isRadio","isArrowKeys","setRange","pc","st","yes","del","setSelectedFilterCategory","setSortBy","formatRange","setGroupBy","transform","imageDescription","publishedAt","labAverageColor","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","isFollowedTags","PostLine","isReplyTo","show","setShow","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","density","_thread","readingExpandSpoilers","showMedia","showPostContent","isThread","emojifyText","o","multiple","remoteMediaURL","_f","_h","_j","_i","mediaURL","MEDIA_SIZE","previewUrl","gifv","video","audio","PostStats","numBins","dates","minDate","maxDate","bins","normalized","binIndex","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","keyword","ExpiryStatus","_id","incID","FiltersAddEdit","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","title2","keywordIDs","getAll","keywordKeywords","keywordWholeWords","wholeWord","removedKeywordIDs","keywordsAttributes","context2","expiresIn","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","latestItem","__BENCHMARK","latestItemChanged","clearFollowedTagsState","opts","payload","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","columnMode","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","valueContainsLatestItem","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","setIsFeaturedTag","finally","featuredTagID","catch","MenuHeader","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","setDownOverflow","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","removed","setRemoved","notificationTypeKeys","GROUP_TYPES","groupable","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications","newGroupNotifications","gn","latestPageNotificationAt","mostRecentNotificationId","newGroupNotifications1","notificationsMap","virtualType","mappedNotification","ma","mappedAccount","newGroupNotifications2","notificationsMap2","hasOneAccount","toLocaleDateString","n","cleanNotifications","cleanNotifications2","emptySearchParams","URLSearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastoFetchNotifications","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","setAnnualReportNotification","annualReportNotification2","annualReportYear","getFullYear","statusLink","today","todaySubHeading","forceOpts","setShowNotificationsSettings","announcement","notificationsPolicy","open","onToggle","request","pendingRequestsCount","NotificationRequestModalButton","NotificationRequestButtons","annualReportNotification","notificationDay","differentDay","toDateString","subHeading","newPolicy","AnnouncementBlock","contact","contactAccount","startsAt","endsAt","published","allDay","reactions","publishedAtDate","read","publishedDateText","updatedAtText","reaction","me","fetchNotficationsByAccount","showModal","setShowModal","notifs","setNotifications","hasRequestState","Public","isLocal","publicIterator","fetchPublic","remote","prompt","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","typeResults","setTypeResultsFunc","loadResults","_c","_d","filterBarParent","history","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","supportsTrendingLinkPosts","currentLinkRef","hasCurrentLink","fetchLinkMentions","prevCurrentLink","authorUrl","authorName","providerName","providerUrl","isShortTitle","hasAuthor","flexShrink","textAlign","Columns","Hashtag","Component","$column","currentFocusedColumn","prevColKey","nextColKey","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","statusPostRegexes","getInstanceStatusObject","regex","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","instancesListURL","dec2hex","dec","verifier","array","Uint32Array","crypto","getRandomValues","sha256","plain","TextEncoder","encode","subtle","digest","base64urlencode","bytes","len","byteLength","String","fromCharCode","btoa","generateCodeChallenge","hashed","supportsPKCE","ok","json","code_challenge_methods_supported","__generateCodeChallenge","DEV","PHANPY_CLIENT_NAME","CLIENT_NAME","SCOPES","sameSite","currentLocation","origin","REDIRECT_URI","registerApplication","registrationParams","client_name","redirect_uris","scopes","website","method","headers","getPKCEAuthorizationURL","registrationJSON","client_id","codeChallenge","code_challenge_method","code_challenge","authorizationParams","scope","authorizationURL","client_secret","code_verifier","redirect_uri","append","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","xmlDoc","parseFromString","template","vapid_key","authPKCE","sessionCookie","getAuthorizationURL","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","ScheduledPosts","scheduledPosts","setScheduledPosts","showScheduledPostModal","setShowScheduledPostModal","postsIterator","scheduledStatuses","allPosts","option","votesCount","ScheduledPostPreview","ScheduledPostEdit","hours","weekday","setNewScheduledAt","differentScheduledAt","newScheduledAt","localTZ","pastSchedule","ScheduledAtField","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaIndex","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","handleMediaClose","$carousel","$deckContainers","$deckContainer","StatusParent","linkable","restProps","createdAtSort","StatusThread","navigation","translate","setStatuses","heroStatusRef","totalDescendants","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","cachedStatuses","reallyCachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","level","nextLevel","descendantLevelsCount","expandReplies","_r","weight","descendants","ancestors2","ancestors","missingStatuses","ancestorsIsThread","nestedDescendants","__replies","heroAccountID","ancestor","threadifyStatus","offsetTop","heroLimit","setLimit","showRefresh","setShowRefresh","allStatuses","scrollPosition","initContext","interval","newScrollOffsets","contextURL","newScrollTop","statusWeightCache","heroContentText","apiCache","heroDisplayName","postInstance","hasDescendants","div","innerHTML","activeStatusRect","activeStatus","postSameInstance","nextStatus","allStatusLinks","activeStatusIndex","some","heroPointer","topmostStatusLink","heroInView","prevStatus","statusLinkRect","details","initialPageState","handleMediaClick","handleStatusLinkClick","descendant","isHero","requestAnimationFrame","setHeroInView","setReachTopPost","isLinkable","SubComments","enableTranslate","onStatusLinkClick","showActionsBar","prevLocationIsStatusPage","prevEntry","hasParentThread","openAll","getIDs","statusesList","renderStatus","spoilerButton","viewMode","moreStatusesKeys","onAnimationEnd","back","reachTopPost","arr","setViewMode","button","full","buttons","accWeight","parentLink","diveDeep","replies2","replies3","totalComments","sameCount","totalWeight","calcStatusWeight","openBefore","detailsRef","renderReplies","Container","isDetails","shortReply","open2","dataset","setRenderReplies","MEDIA_VIRTUAL_LENGTH","CARD_VIRTUAL_LENGTH","cachedWeight","mediaLength","pollLength","POLL_VIRTUAL_LENGTH","cardLength","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","Welcome","marginBlockEnd","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","setInterval","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","isIOS","tempColor","themeDarkColor","textSize","$app","BENCHES","setIsLoggedIn","decodeURIComponent","clientSecret","clientID","initStates","searchAccount","getAccount","client","hasPreferences","hasInstance","initPreferences","initInstance","PrimaryRoutes","Routes","Route","Root","nonRootLocation","getPrevLocation","SecondaryRoutes","backgroundLocation","isModalPage","initActivateLang","I18nProvider","HashRouter","App","localStorage","removeItem","sessionStorage","IGNORE_CACHE_KEYS","clearRanOnce","FAST_INTERVAL","SLOW_INTERVAL","clearCaches","cache","_keys","MAX_SW_CACHE_SIZE","deleteKeys"],"mappings":"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","x_google_ignoreList":[0,1,6,7,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39]}