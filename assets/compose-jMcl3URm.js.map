{"version":3,"file":"compose-jMcl3URm.js","sources":["../../node_modules/@github/combobox-nav/dist/index.js","../../node_modules/@github/text-expander-element/dist/index.js","../../node_modules/ansi-regex/index.js","../../node_modules/strip-ansi/index.js","../../node_modules/string-length/index.js","../../src/assets/powered-by-giphy.svg","../../src/components/compose.jsx"],"sourcesContent":["export default class Combobox {\n    constructor(input, list, { tabInsertsSuggestions, defaultFirstOption } = {}) {\n        this.input = input;\n        this.list = list;\n        this.tabInsertsSuggestions = tabInsertsSuggestions !== null && tabInsertsSuggestions !== void 0 ? tabInsertsSuggestions : true;\n        this.defaultFirstOption = defaultFirstOption !== null && defaultFirstOption !== void 0 ? defaultFirstOption : false;\n        this.isComposing = false;\n        if (!list.id) {\n            list.id = `combobox-${Math.random().toString().slice(2, 6)}`;\n        }\n        this.ctrlBindings = !!navigator.userAgent.match(/Macintosh/);\n        this.keyboardEventHandler = event => keyboardBindings(event, this);\n        this.compositionEventHandler = event => trackComposition(event, this);\n        this.inputHandler = this.clearSelection.bind(this);\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-controls', list.id);\n        input.setAttribute('aria-expanded', 'false');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-haspopup', 'listbox');\n    }\n    destroy() {\n        this.clearSelection();\n        this.stop();\n        this.input.removeAttribute('role');\n        this.input.removeAttribute('aria-controls');\n        this.input.removeAttribute('aria-expanded');\n        this.input.removeAttribute('aria-autocomplete');\n        this.input.removeAttribute('aria-haspopup');\n    }\n    start() {\n        this.input.setAttribute('aria-expanded', 'true');\n        this.input.addEventListener('compositionstart', this.compositionEventHandler);\n        this.input.addEventListener('compositionend', this.compositionEventHandler);\n        this.input.addEventListener('input', this.inputHandler);\n        this.input.addEventListener('keydown', this.keyboardEventHandler);\n        this.list.addEventListener('click', commitWithElement);\n        this.indicateDefaultOption();\n    }\n    stop() {\n        this.clearSelection();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.input.removeEventListener('compositionstart', this.compositionEventHandler);\n        this.input.removeEventListener('compositionend', this.compositionEventHandler);\n        this.input.removeEventListener('input', this.inputHandler);\n        this.input.removeEventListener('keydown', this.keyboardEventHandler);\n        this.list.removeEventListener('click', commitWithElement);\n    }\n    indicateDefaultOption() {\n        var _a;\n        if (this.defaultFirstOption) {\n            (_a = Array.from(this.list.querySelectorAll('[role=\"option\"]:not([aria-disabled=\"true\"])'))\n                .filter(visible)[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('data-combobox-option-default', 'true');\n        }\n    }\n    navigate(indexDiff = 1) {\n        const focusEl = Array.from(this.list.querySelectorAll('[aria-selected=\"true\"]')).filter(visible)[0];\n        const els = Array.from(this.list.querySelectorAll('[role=\"option\"]')).filter(visible);\n        const focusIndex = els.indexOf(focusEl);\n        if ((focusIndex === els.length - 1 && indexDiff === 1) || (focusIndex === 0 && indexDiff === -1)) {\n            this.clearSelection();\n            this.input.focus();\n            return;\n        }\n        let indexOfItem = indexDiff === 1 ? 0 : els.length - 1;\n        if (focusEl && focusIndex >= 0) {\n            const newIndex = focusIndex + indexDiff;\n            if (newIndex >= 0 && newIndex < els.length)\n                indexOfItem = newIndex;\n        }\n        const target = els[indexOfItem];\n        if (!target)\n            return;\n        for (const el of els) {\n            el.removeAttribute('data-combobox-option-default');\n            if (target === el) {\n                this.input.setAttribute('aria-activedescendant', target.id);\n                target.setAttribute('aria-selected', 'true');\n                scrollTo(this.list, target);\n            }\n            else {\n                el.removeAttribute('aria-selected');\n            }\n        }\n    }\n    clearSelection() {\n        this.input.removeAttribute('aria-activedescendant');\n        for (const el of this.list.querySelectorAll('[aria-selected=\"true\"]')) {\n            el.removeAttribute('aria-selected');\n        }\n        this.indicateDefaultOption();\n    }\n}\nfunction keyboardBindings(event, combobox) {\n    if (event.shiftKey || event.metaKey || event.altKey)\n        return;\n    if (!combobox.ctrlBindings && event.ctrlKey)\n        return;\n    if (combobox.isComposing)\n        return;\n    switch (event.key) {\n        case 'Enter':\n            if (commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Tab':\n            if (combobox.tabInsertsSuggestions && commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Escape':\n            combobox.clearSelection();\n            break;\n        case 'ArrowDown':\n            combobox.navigate(1);\n            event.preventDefault();\n            break;\n        case 'ArrowUp':\n            combobox.navigate(-1);\n            event.preventDefault();\n            break;\n        case 'n':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(1);\n                event.preventDefault();\n            }\n            break;\n        case 'p':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(-1);\n                event.preventDefault();\n            }\n            break;\n        default:\n            if (event.ctrlKey)\n                break;\n            combobox.clearSelection();\n    }\n}\nfunction commitWithElement(event) {\n    if (!(event.target instanceof Element))\n        return;\n    const target = event.target.closest('[role=\"option\"]');\n    if (!target)\n        return;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return;\n    fireCommitEvent(target);\n}\nfunction commit(input, list) {\n    const target = list.querySelector('[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]');\n    if (!target)\n        return false;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return true;\n    target.click();\n    return true;\n}\nfunction fireCommitEvent(target) {\n    target.dispatchEvent(new CustomEvent('combobox-commit', { bubbles: true }));\n}\nfunction visible(el) {\n    return (!el.hidden &&\n        !(el instanceof HTMLInputElement && el.type === 'hidden') &&\n        (el.offsetWidth > 0 || el.offsetHeight > 0));\n}\nfunction trackComposition(event, combobox) {\n    combobox.isComposing = event.type === 'compositionstart';\n    const list = document.getElementById(combobox.input.getAttribute('aria-controls') || '');\n    if (!list)\n        return;\n    combobox.clearSelection();\n}\nfunction scrollTo(container, target) {\n    if (!inViewport(container, target)) {\n        container.scrollTop = target.offsetTop;\n    }\n}\nfunction inViewport(container, element) {\n    const scrollTop = container.scrollTop;\n    const containerBottom = scrollTop + container.clientHeight;\n    const top = element.offsetTop;\n    const bottom = top + element.clientHeight;\n    return top >= scrollTop && bottom <= containerBottom;\n}\n","import Combobox from '@github/combobox-nav';\n\nconst boundary = /\\s|\\(|\\[/;\nfunction query(text, key, cursor, { multiWord, lookBackIndex, lastMatchPosition } = {\n    multiWord: false,\n    lookBackIndex: 0,\n    lastMatchPosition: null\n}) {\n    let keyIndex = text.lastIndexOf(key, cursor - 1);\n    if (keyIndex === -1)\n        return;\n    if (keyIndex < lookBackIndex)\n        return;\n    if (multiWord) {\n        if (lastMatchPosition != null) {\n            if (lastMatchPosition === keyIndex)\n                return;\n            keyIndex = lastMatchPosition - key.length;\n        }\n        const charAfterKey = text[keyIndex + 1];\n        if (charAfterKey === ' ' && cursor >= keyIndex + key.length + 1)\n            return;\n        const newLineIndex = text.lastIndexOf('\\n', cursor - 1);\n        if (newLineIndex > keyIndex)\n            return;\n        const dotIndex = text.lastIndexOf('.', cursor - 1);\n        if (dotIndex > keyIndex)\n            return;\n    }\n    else {\n        const spaceIndex = text.lastIndexOf(' ', cursor - 1);\n        if (spaceIndex > keyIndex)\n            return;\n    }\n    const pre = text[keyIndex - 1];\n    if (pre && !boundary.test(pre))\n        return;\n    const queryString = text.substring(keyIndex + key.length, cursor);\n    return {\n        text: queryString,\n        position: keyIndex + key.length\n    };\n}\n\n/**\n * A custom element is implemented as a class which extends HTMLElement (in the\n * case of autonomous elements) or the interface you want to customize (in the\n * case of customized built-in elements).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#custom_element_lifecycle_callbacks\n */\nclass CustomHTMLElement extends HTMLElement {\n}\n\nclass InputStyleCloneUpdateEvent extends Event {\n    constructor() {\n        super(\"update\");\n    }\n}\nconst CloneRegistry = new WeakMap();\n/**\n * Create an element that exactly matches an input pixel-for-pixel and automatically stays in sync with it. This\n * is a non-interactive overlay on to the input and can be used to affect the visual appearance of the input\n * without modifying its behavior. The clone element is hidden by default.\n *\n * This lower level API powers the `InputRange` but provides more advanced functionality including event updates.\n *\n * Emits `update` events whenever anything is recalculated: when the layout changes, when the user scrolls, when the\n * input is updated, etc. This event may be emitted more than once per change.\n *\n * @note There may be cases in which the clone cannot observe changes to the input and fails to automatically update.\n * For example, if the `value` property on the input is written to directly, no `input` event is emitted by the input\n * and the clone does not automatically update. In these cases, `forceUpdate` can be used to manually trigger an update.\n */\n// PRIOR ART: This approach was adapted from the following MIT-licensed sources:\n//  - primer/react (Copyright (c) 2018 GitHub, Inc.): https://github.com/primer/react/blob/a0db832302702b869aa22b0c4049ad9305ef631f/src/drafts/utils/character-coordinates.ts\n//  - component/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/component/textarea-caret-position/blob/b5db7a7e47dd149c2a66276183c69234e4dabe30/index.js\n//  - koddsson/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/koddsson/textarea-caret-position/blob/eba40ec8488eed4d77815f109af22e1d9c0751d3/index.js\nclass InputStyleCloneElement extends CustomHTMLElement {\n    #styleObserver = new MutationObserver(() => this.#updateStyles());\n    #resizeObserver = new ResizeObserver(() => this.#requestUpdateLayout());\n    // This class is unique in that it will prevent itself from getting garbage collected because of the subscribed\n    // observers (if never detached). Because of this, we want to avoid preventing the existence of this class from also\n    // preventing the garbage collection of the associated input. This also allows us to automatically detach if the\n    // input gets collected.\n    #inputRef;\n    #container;\n    /**\n     * Get the clone for an input, reusing an existing one if available. This avoids creating unecessary clones, which\n     * have a performance cost due to their high-frequency event-based updates. Because these elements are shared, they\n     * should be mutated with caution.\n     *\n     * Upon initial creation the clone element will automatically be inserted into the DOM and begin observing the\n     * linked input. Only one clone per input can ever exist at a time.\n     * @param input The target input to clone.\n     */\n    static for(input) {\n        const clone = CloneRegistry.get(input) ?? new InputStyleCloneElement(input);\n        CloneRegistry.set(input, clone);\n        return clone;\n    }\n    /**\n     * Avoid constructing directly: Use `InputStyleCloneElement.for` instead.\n     * @private\n     */\n    constructor(input) {\n        super();\n        this.#inputRef = new WeakRef(input);\n        // We want position:absolute so it doesn't take space in the layout, but that doesn't work with display:table-cell\n        // used in the HTMLInputElement approach. So we need a wrapper.\n        this.#container = document.createElement(\"div\");\n        this.#container.style.position = \"absolute\";\n        this.#container.style.pointerEvents = \"none\";\n        input.after(this.#container);\n        this.#container.appendChild(this);\n    }\n    /**\n     * Force a recalculation. Will emit an `update` event. This is typically not needed unless the input has changed in\n     * an unobservable way, eg by directly writing to the `value` property.\n     */\n    forceUpdate() {\n        this.#updateStyles();\n        this.#updateText();\n    }\n    /** @private */\n    connectedCallback() {\n        const input = this.#inputRef.deref();\n        if (!input)\n            return this.remove();\n        this.style.pointerEvents = \"none\";\n        this.style.userSelect = \"none\";\n        this.style.overflow = \"hidden\";\n        this.style.display = \"block\";\n        // Important not to use display:none which would not render the content at all\n        this.style.visibility = \"hidden\";\n        if (input instanceof HTMLTextAreaElement) {\n            this.style.whiteSpace = \"pre-wrap\";\n            this.style.wordWrap = \"break-word\";\n        }\n        else {\n            this.style.whiteSpace = \"nowrap\";\n            // text in single-line inputs is vertically centered\n            this.style.display = \"table-cell\";\n            this.style.verticalAlign = \"middle\";\n        }\n        this.setAttribute(\"aria-hidden\", \"true\");\n        this.#updateStyles();\n        this.#updateText();\n        this.#styleObserver.observe(input, {\n            attributeFilter: [\n                \"style\",\n                \"dir\", // users can right-click in some browsers to change the text direction dynamically\n            ],\n        });\n        this.#resizeObserver.observe(input);\n        document.addEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.addEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        // capture so this happens first, so other things can respond to `input` events after this data updates\n        input.addEventListener(\"input\", this.#onInput, { capture: true });\n    }\n    /** @private */\n    disconnectedCallback() {\n        this.#container.remove();\n        this.#styleObserver.disconnect();\n        this.#resizeObserver.disconnect();\n        document.removeEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.removeEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        const input = this.#inputRef.deref();\n        if (input) {\n            input.removeEventListener(\"input\", this.#onInput, { capture: true });\n            CloneRegistry.delete(input);\n        }\n    }\n    // --- private ---\n    /** Perform `fn` using the `input` if it is still available. If not, clean up the clone instead. */\n    #usingInput(fn) {\n        const input = this.#inputRef.deref();\n        if (!input)\n            return this.remove();\n        return fn(input);\n    }\n    /** Current relative x-adjustment in pixels, executed via CSS transform. */\n    #xOffset = 0;\n    /** Current relative y-adjustment in pixels, executed via CSS transform. */\n    #yOffset = 0;\n    /**\n     * Update only geometric properties without recalculating styles. Typically call `#requestUpdateLayout` instead to\n     * only update once per animation frame.\n     */\n    #updateLayout() {\n        // This runs often, so keep it as fast as possible! Avoid all unecessary updates.\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            this.style.height = inputStyle.height;\n            this.style.width = inputStyle.width;\n            // Immediately re-adjust for browser inconsistencies in scrollbar handling, if necessary\n            if (input.clientHeight !== this.clientHeight)\n                this.style.height = `calc(${inputStyle.height} + ${input.clientHeight - this.clientHeight}px)`;\n            if (input.clientWidth !== this.clientWidth)\n                this.style.width = `calc(${inputStyle.width} + ${input.clientWidth - this.clientWidth}px)`;\n            // Position on top of the input\n            const inputRect = input.getBoundingClientRect();\n            const cloneRect = this.getBoundingClientRect();\n            this.#xOffset = this.#xOffset + inputRect.left - cloneRect.left;\n            this.#yOffset = this.#yOffset + inputRect.top - cloneRect.top;\n            this.style.transform = `translate(${this.#xOffset}px, ${this.#yOffset}px)`;\n            this.scrollTop = input.scrollTop;\n            this.scrollLeft = input.scrollLeft;\n            this.dispatchEvent(new InputStyleCloneUpdateEvent());\n        });\n    }\n    #isLayoutUpdating = false;\n    /** Request a layout update. Will only happen once per animation frame, to avoid unecessary updates. */\n    #requestUpdateLayout() {\n        if (this.#isLayoutUpdating)\n            return;\n        this.#isLayoutUpdating = true;\n        requestAnimationFrame(() => {\n            this.#updateLayout();\n            this.#isLayoutUpdating = false;\n        });\n    }\n    /** Update the styles of the clone based on the styles of the input, then request a layout update. */\n    #updateStyles() {\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            for (const prop of propertiesToCopy)\n                this.style[prop] = inputStyle[prop];\n            this.#requestUpdateLayout();\n        });\n    }\n    /**\n     * Update the text content of the clone based on the text content of the input. Triggers a layout update in case the\n     * text update caused scrolling.\n     */\n    #updateText() {\n        this.#usingInput((input) => {\n            this.textContent = input.value;\n            // This is often unecessary on a pure text update, but text updates could potentially cause layout updates like\n            // scrolling or resizing. And we run the update on _every frame_ when scrolling, so this isn't that expensive.\n            // We don't requestUpdateLayout here because this one should happen synchronously, so that clients can react\n            // within their own `input` event handlers.\n            this.#updateLayout();\n        });\n    }\n    #onInput = () => this.#updateText();\n    #onDocumentScrollOrResize = (event) => {\n        this.#usingInput((input) => {\n            if (event.target === document ||\n                event.target === window ||\n                (event.target instanceof Node && event.target.contains(input)))\n                this.#requestUpdateLayout();\n        });\n    };\n}\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nconst propertiesToCopy = [\n    // RTL / vertical writing modes support:\n    \"direction\",\n    \"writingMode\",\n    \"unicodeBidi\",\n    \"textOrientation\",\n    \"boxSizing\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\",\n];\n// Inspired by https://github.com/github/catalyst/blob/dc284dcf4f82329a9cac5c867462a8fa529b6c40/src/register.ts\ntry {\n    customElements.define(\"input-style-clone\", InputStyleCloneElement);\n}\ncatch (e) {\n    // Throws DOMException with NotSupportedError if already defined\n    if (!(e instanceof DOMException && e.name === \"NotSupportedError\"))\n        throw e;\n}\n\nclass InputRange {\n    #inputElement;\n    #startOffset;\n    #endOffset;\n    /**\n     * Construct a new `InputRange`.\n     * @param element The target input element that contains the content for the range.\n     * @param startOffset The inclusive 0-based start index for the range. Will be adjusted to fit in the input contents.\n     * @param endOffset The exclusive 0-based end index for the range. Will be adjusted to fit in the input contents.\n     */\n    constructor(element, startOffset = 0, endOffset = startOffset) {\n        this.#inputElement = element;\n        this.#startOffset = startOffset;\n        this.#endOffset = endOffset;\n    }\n    /**\n     * Create a new range from the current user selection. If the input is not focused, the range will just be the start\n     * of the input (offsets `0` to `0`).\n     *\n     * This can be used to get the caret coordinates: if the resulting range is `collapsed`, the location of the\n     * `getBoundingClientRect` will be the location of the caret caret (note, however, that the width will be `0` in\n     * this case).\n     */\n    static fromSelection(input) {\n        const { selectionStart, selectionEnd } = input;\n        return new InputRange(input, selectionStart ?? undefined, selectionEnd ?? undefined);\n    }\n    /** Returns true if the start is equal to the end of this range. */\n    get collapsed() {\n        return this.startOffset === this.endOffset;\n    }\n    /** Always returns the containing input element. */\n    get commonAncestorContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get endContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get startContainer() {\n        return this.#inputElement;\n    }\n    get startOffset() {\n        return this.#startOffset;\n    }\n    get endOffset() {\n        return this.#endOffset;\n    }\n    /** Update the inclusive start offset. Will be adjusted to fit within the content size. */\n    setStartOffset(offset) {\n        this.#startOffset = this.#clampOffset(offset);\n    }\n    /** Update the exclusive end offset. Will be adjusted to fit within the content size. */\n    setEndOffset(offset) {\n        this.#endOffset = this.#clampOffset(offset);\n    }\n    /**\n     * Collapse this range to one side.\n     * @param toStart If `true`, will collapse to the start side. Otherwise, will collapse to the end.\n     */\n    collapse(toStart = false) {\n        if (toStart)\n            this.setEndOffset(this.startOffset);\n        else\n            this.setStartOffset(this.endOffset);\n    }\n    /** Returns a `DocumentFragment` containing a new `Text` node containing the content in the range. */\n    cloneContents() {\n        return this.#createCloneRange().cloneContents();\n    }\n    /** Create a copy of this range. */\n    cloneRange() {\n        return new InputRange(this.#inputElement, this.startOffset, this.endOffset);\n    }\n    /**\n     * Obtain one rect that contains the entire contents of the range. If the range spans multiple lines, this box will\n     * contain all pieces of the range but may also contain some space outside the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getBoundingClientRect() {\n        return this.#createCloneRange().getBoundingClientRect();\n    }\n    /**\n     * Obtain the rects that contain contents of this range. If the range spans multiple lines, there will be multiple\n     * bounding boxes. These boxes can be used, for example, to draw a highlight over the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getClientRects() {\n        return this.#createCloneRange().getClientRects();\n    }\n    /** Get the contents of the range as a string. */\n    toString() {\n        return this.#createCloneRange().toString();\n    }\n    /**\n     * Get the underlying `InputStyleClone` instance powering these calculations. This can be used to listen for\n     * updates to trigger layout recalculation.\n     */\n    getStyleClone() {\n        return this.#styleClone;\n    }\n    // --- private ---\n    get #styleClone() {\n        return InputStyleCloneElement.for(this.#inputElement);\n    }\n    get #cloneElement() {\n        return this.#styleClone;\n    }\n    #clampOffset(offset) {\n        return Math.max(0, Math.min(offset, this.#inputElement.value.length));\n    }\n    #createCloneRange() {\n        // It's tempting to create a single Range and reuse it across the lifetime of the class. However, this wouldn't be\n        // accurate because the contents of the input can change and the contents of the range would become stale. So we\n        // must create a new range every time we need it.\n        const range = document.createRange();\n        const textNode = this.#cloneElement.childNodes[0];\n        if (textNode) {\n            range.setStart(textNode, this.startOffset);\n            range.setEnd(textNode, this.endOffset);\n        }\n        return range;\n    }\n}\n\nconst states = new WeakMap();\nclass TextExpander {\n    constructor(expander, input) {\n        this.expander = expander;\n        this.input = input;\n        this.combobox = null;\n        this.menu = null;\n        this.match = null;\n        this.justPasted = false;\n        this.lookBackIndex = 0;\n        this.oninput = this.onInput.bind(this);\n        this.onpaste = this.onPaste.bind(this);\n        this.onkeydown = this.onKeydown.bind(this);\n        this.oncommit = this.onCommit.bind(this);\n        this.onmousedown = this.onMousedown.bind(this);\n        this.onblur = this.onBlur.bind(this);\n        this.interactingWithList = false;\n        input.addEventListener('paste', this.onpaste);\n        input.addEventListener('input', this.oninput);\n        input.addEventListener('keydown', this.onkeydown);\n        input.addEventListener('blur', this.onblur);\n    }\n    destroy() {\n        this.input.removeEventListener('paste', this.onpaste);\n        this.input.removeEventListener('input', this.oninput);\n        this.input.removeEventListener('keydown', this.onkeydown);\n        this.input.removeEventListener('blur', this.onblur);\n    }\n    dismissMenu() {\n        if (this.deactivate()) {\n            this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n        }\n    }\n    activate(match, menu) {\n        var _a, _b;\n        if (this.input !== document.activeElement && this.input !== ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement)) {\n            return;\n        }\n        this.deactivate();\n        this.menu = menu;\n        if (!menu.id)\n            menu.id = `text-expander-${Math.floor(Math.random() * 100000).toString()}`;\n        this.expander.append(menu);\n        this.combobox = new Combobox(this.input, menu);\n        this.expander.dispatchEvent(new Event('text-expander-activate'));\n        this.positionMenu(menu, match.position);\n        this.combobox.start();\n        menu.addEventListener('combobox-commit', this.oncommit);\n        menu.addEventListener('mousedown', this.onmousedown);\n        this.combobox.navigate(1);\n    }\n    positionMenu(menu, position) {\n        const caretRect = new InputRange(this.input, position).getBoundingClientRect();\n        const targetPosition = { left: caretRect.left, top: caretRect.top + caretRect.height };\n        const currentPosition = menu.getBoundingClientRect();\n        const delta = {\n            left: targetPosition.left - currentPosition.left,\n            top: targetPosition.top - currentPosition.top\n        };\n        if (delta.left !== 0 || delta.top !== 0) {\n            const currentStyle = getComputedStyle(menu);\n            menu.style.left = currentStyle.left ? `calc(${currentStyle.left} + ${delta.left}px)` : `${delta.left}px`;\n            menu.style.top = currentStyle.top ? `calc(${currentStyle.top} + ${delta.top}px)` : `${delta.top}px`;\n        }\n    }\n    deactivate() {\n        const menu = this.menu;\n        if (!menu || !this.combobox)\n            return false;\n        this.expander.dispatchEvent(new Event('text-expander-deactivate'));\n        this.menu = null;\n        menu.removeEventListener('combobox-commit', this.oncommit);\n        menu.removeEventListener('mousedown', this.onmousedown);\n        this.combobox.destroy();\n        this.combobox = null;\n        menu.remove();\n        return true;\n    }\n    onCommit({ target }) {\n        var _a;\n        const item = target;\n        if (!(item instanceof HTMLElement))\n            return;\n        if (!this.combobox)\n            return;\n        const match = this.match;\n        if (!match)\n            return;\n        const beginning = this.input.value.substring(0, match.position - match.key.length);\n        const remaining = this.input.value.substring(match.position + match.text.length);\n        const detail = { item, key: match.key, value: null, continue: false };\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-value', { cancelable: true, detail }));\n        if (canceled)\n            return;\n        if (!detail.value)\n            return;\n        let suffix = (_a = this.expander.getAttribute('suffix')) !== null && _a !== void 0 ? _a : ' ';\n        if (detail.continue) {\n            suffix = '';\n        }\n        const value = `${detail.value}${suffix}`;\n        this.input.value = beginning + value + remaining;\n        const cursor = beginning.length + value.length;\n        this.deactivate();\n        this.input.focus({\n            preventScroll: true\n        });\n        this.input.selectionStart = cursor;\n        this.input.selectionEnd = cursor;\n        if (!detail.continue) {\n            this.lookBackIndex = cursor;\n            this.match = null;\n        }\n        this.expander.dispatchEvent(new CustomEvent('text-expander-committed', { cancelable: false, detail: { input: this.input } }));\n    }\n    onBlur() {\n        if (this.interactingWithList) {\n            this.interactingWithList = false;\n            return;\n        }\n        this.deactivate();\n    }\n    onPaste() {\n        this.justPasted = true;\n    }\n    async onInput() {\n        if (this.justPasted) {\n            this.justPasted = false;\n            return;\n        }\n        const match = this.findMatch();\n        if (match) {\n            this.match = match;\n            const menu = await this.notifyProviders(match);\n            if (!this.match)\n                return;\n            if (menu) {\n                this.activate(match, menu);\n            }\n            else {\n                this.deactivate();\n            }\n        }\n        else {\n            this.match = null;\n            this.deactivate();\n        }\n    }\n    findMatch() {\n        const cursor = this.input.selectionEnd || 0;\n        const text = this.input.value;\n        if (cursor <= this.lookBackIndex) {\n            this.lookBackIndex = cursor - 1;\n        }\n        for (const { key, multiWord } of this.expander.keys) {\n            const found = query(text, key, cursor, {\n                multiWord,\n                lookBackIndex: this.lookBackIndex,\n                lastMatchPosition: this.match ? this.match.position : null\n            });\n            if (found) {\n                return { text: found.text, key, position: found.position };\n            }\n        }\n    }\n    async notifyProviders(match) {\n        const providers = [];\n        const provide = (result) => providers.push(result);\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-change', { cancelable: true, detail: { provide, text: match.text, key: match.key } }));\n        if (canceled)\n            return;\n        const all = await Promise.all(providers);\n        const fragments = all.filter(x => x.matched).map(x => x.fragment);\n        return fragments[0];\n    }\n    onMousedown() {\n        this.interactingWithList = true;\n    }\n    onKeydown(event) {\n        if (event.key === 'Escape') {\n            this.match = null;\n            if (this.deactivate()) {\n                this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        }\n    }\n}\nclass TextExpanderElement extends HTMLElement {\n    get keys() {\n        const keysAttr = this.getAttribute('keys');\n        const keys = keysAttr ? keysAttr.split(' ') : [];\n        const multiWordAttr = this.getAttribute('multiword');\n        const multiWord = multiWordAttr ? multiWordAttr.split(' ') : [];\n        const globalMultiWord = multiWord.length === 0 && this.hasAttribute('multiword');\n        return keys.map(key => ({ key, multiWord: globalMultiWord || multiWord.includes(key) }));\n    }\n    connectedCallback() {\n        const input = this.querySelector('input[type=\"text\"], textarea');\n        if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement))\n            return;\n        const state = new TextExpander(this, input);\n        states.set(this, state);\n    }\n    disconnectedCallback() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.destroy();\n        states.delete(this);\n    }\n    dismiss() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.dismissMenu();\n    }\n}\n\nif (!window.customElements.get('text-expander')) {\n    window.TextExpanderElement = TextExpanderElement;\n    window.customElements.define('text-expander', TextExpanderElement);\n}\n\nexport default TextExpanderElement;\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n","import stripAnsi from 'strip-ansi';\n\nconst segmenter = new Intl.Segmenter();\n\nexport default function stringLength(string, {countAnsiEscapeCodes = false} = {}) {\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tlet length = 0;\n\n\tfor (const _ of segmenter.segment(string)) { // eslint-disable-line no-unused-vars\n\t\tlength++;\n\t}\n\n\treturn length;\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20version='1.0'%20viewBox='0%200%20641%20223'%3e%3cpath%20fill='%23aaa'%20d='M86%20214c-9-1-17-4-24-8l-6-3-5-5-5-4-4-6-4-6-3-8-2-8v-27l2-9%203-9%204-6%204-6%205-5%205-5%207-3%206-4%207-2%207-2%2012-1h12l7%201%208%202%207%204%207%203%205%205%205%204-10%2010-10%209-4-3-10-5-5-1H88l-5%202-6%203-3%204-4%204-2%205-2%206v6l-1%207%201%207%202%207%203%205%202%204%204%203%204%203%205%202%206%202h9l10-1%205-2%206-3v-16H91v-27h59v54l-1%203-2%203-5%204-4%204-5%203-5%202-8%202-8%202-10%201H92l-6-1zm266-62V91h34v46h44V91h34v121h-34v-46h-44v46h-34v-61zm-182-1V90h34v121h-34v-60zm59-1V90h35l36%201%205%202c3%200%208%202%2010%204l5%202%204%205%205%204%203%207%203%207%201%2013v13l-4%206-3%207-4%204-5%205-5%202-5%203-6%202-5%201-18%201h-18v32h-34v-61zm67-2%203-2%202-4%202-5v-5l-2-4-2-4-3-2-3-3h-30v31h30l3-2zm226%2039v-24l-8-12-18-28a1751%201751%200%200%200-20-31v-2h39l7%2012%2012%2021%206%209%2013-21%2013-21h38v2l-41%2061-7%2010v48h-34v-24zM109%2066l-4-1-5-5-5-4-1-5-3-9v-5l1-5c2-7%203-10%208-15l4-4%207-2%207-2h7l6%201%205%202%205%202%203%204%204%203%202%206%202%205v13l-2%205-2%206-4%204-3%203-5%202-4%202-9%201h-9l-5-2zm22-11%204-2%203-4%202-5V34l-2-4-2-4-3-2-4-3-5-1h-6l-4%202-5%202-2%204-3%205-1%203v4l1%205%202%205%202%202%205%203%204%202h10l4-2zM37%2039V11h33l3%201%203%202%204%203%203%203%201%205%201%204v5l-1%204-3%204-3%205-4%201-3%202-11%201H49v16H37V39zm31%200%203-2%201-2%201-2v-4l-1-3-3-2-2-2H49v18h15l4-1zm107%2025a512%20512%200%200%200-19-53h14l4%2014%206%2019%201%204%201-1%207-19%205-17h9l6%2019%207%2018v-1l2-6%205-17%204-13h14v1l-4%2012-16%2041v2h-5l-5-1-6-15-6-15-1%201-3%207-6%2015-2%208h-11l-1-3zm74-25V11h42v11h-29v2l-1%205v4h29v11h-28v11h2l15%201h13v11h-43V39zm55%200V11h33l5%203%205%202%202%204%202%205v10l-2%203-1%204-5%203-5%203%205%205%208%2010%203%204h-14l-7-9-8-10h-9v19h-12V39zm33-3%202-3v-6l-3-3-2-3h-18v16h1v1h17l2-2zm26%203V11h42v11h-29l-1%206v5h29v11h-28v5l-1%205%201%201v1h30v11h-43V39zm54%200V11h17l18%201%204%202%205%203%202%204%203%204%202%206%201%206v5c-1%206-3%2012-6%2015l-3%204-5%203-5%202-17%201h-16V39zm33%2014%205-5%202-3v-6l-1-6-1-3-1-3-4-3-3-2h-5l-6-1-3%201h-3v34h9l8-1%203-2zm50-14V11h34l5%202%204%202%202%203%202%203v9l-2%202-3%204-1%201%203%203%203%204%201%203%201%204-1%204-1%204-3%203-3%203-5%201-5%201h-31V39zm34%2015%202-1v-6l-2-2-2-2h-20v13h20l2-2zm-3-22%204-2v-6l-2-1-2-2h-19v12h16l4-1zm42%2024V45l-6-9-11-17-5-8h15l4%208%207%2011%202%203%207-11%207-11h14l-11%2016-11%2017v23h-12V56z'/%3e%3c/svg%3e\"","import './compose.css';\nimport '@github/text-expander-element';\n\nimport { MenuItem } from '@szhsin/react-menu';\nimport { deepEqual } from 'fast-equals';\nimport Fuse from 'fuse.js';\nimport { forwardRef, memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\nimport { detectAll } from 'tinyld/light';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport poweredByGiphyURL from '../assets/powered-by-giphy.svg';\n\nimport Menu2 from '../components/menu2';\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport localeMatch from '../utils/locale-match';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport openCompose from '../utils/open-compose';\nimport pmem from '../utils/pmem';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n  getCurrentInstanceConfiguration,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useCloseWatcher from '../utils/useCloseWatcher';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst {\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\nconst MENTION_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\n  'uig',\n);\n\n// AI-generated, all other regexes are too complicated\nconst HASHTAG_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\n  'ig',\n);\n\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\nconst SCAN_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\n  'g',\n);\n\nconst segmenter = new Intl.Segmenter();\nfunction escapeHTML(text) {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;');\n}\nfunction highlightText(text, { maxCharacters = Infinity }) {\n  // Exceeded characters limit\n  const { composerCharacterCount } = states;\n  if (composerCharacterCount > maxCharacters) {\n    // Highlight exceeded characters\n    let withinLimitHTML = '',\n      exceedLimitHTML = '';\n    const htmlSegments = segmenter.segment(text);\n    for (const { segment, index } of htmlSegments) {\n      if (index < maxCharacters) {\n        withinLimitHTML += segment;\n      } else {\n        exceedLimitHTML += segment;\n      }\n    }\n    if (exceedLimitHTML) {\n      exceedLimitHTML =\n        '<mark class=\"compose-highlight-exceeded\">' +\n        escapeHTML(exceedLimitHTML) +\n        '</mark>';\n    }\n    return escapeHTML(withinLimitHTML) + exceedLimitHTML;\n  }\n\n  return escapeHTML(text)\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\n    .replace(\n      SCAN_RE,\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\n    ); // Emoji shortcodes\n}\n\nconst rtf = new Intl.RelativeTimeFormat();\n\nconst CUSTOM_EMOJIS_COUNT = 100;\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const configuration = getCurrentInstanceConfiguration();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: {\n      maxCharacters,\n      maxMediaAttachments,\n      charactersReservedPerUrl,\n    } = {},\n    mediaAttachments: {\n      supportedMimeTypes = [],\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n    polls: {\n      maxOptions,\n      maxCharactersPerOption,\n      maxExpiration,\n      minExpiration,\n    } = {},\n  } = configuration || {};\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      if (!textareaRef.current) return;\n      // status starts with newline, focus on first position\n      if (draftStatus?.status?.startsWith?.('\\n')) {\n        textareaRef.current.selectionStart = 0;\n        textareaRef.current.selectionEnd = 0;\n      }\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility']\n          : visibility,\n      );\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive && !!spoilerText);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses\n            .$select(editStatus.id)\n            .source.fetch();\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          if (composablePoll) setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility']);\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language']);\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasValue = (value || '')\n      .trim()\n      .replace(/^\\p{White_Space}+|\\p{White_Space}+$/gu, '');\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!hasValue && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n      ignoreEventWhen: (e) => {\n        const modals = document.querySelectorAll('#modal-container > *');\n        const hasModal = !!modals;\n        const hasOnlyComposer =\n          modals.length === 1 && modals[0].querySelector('#compose-container');\n        return hasModal && !hasOnlyComposer;\n      },\n    },\n  );\n  useCloseWatcher(() => {\n    if (!standalone && confirmClose()) {\n      onClose();\n    }\n  }, [standalone, confirmClose, onClose]);\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    if (states.composerState.minimized) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\n      !canClose()\n    ) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showMentionPicker, setShowMentionPicker] = useState(false);\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n  const [showGIFPicker, setShowGIFPicker] = useState(false);\n\n  const [autoDetectedLanguages, setAutoDetectedLanguages] = useState(null);\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\n    const topLanguages = [];\n    const restLanguages = [];\n    const { contentTranslationHideLanguages = [] } = states.settings;\n    supportedLanguages.forEach((l) => {\n      const [code] = l;\n      if (\n        code === language ||\n        code === prevLanguage.current ||\n        code === DEFAULT_LANG ||\n        contentTranslationHideLanguages.includes(code) ||\n        (autoDetectedLanguages?.length && autoDetectedLanguages.includes(code))\n      ) {\n        topLanguages.push(l);\n      } else {\n        restLanguages.push(l);\n      }\n    });\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\n      if (codeA === language) return -1;\n      if (codeB === language) return 1;\n      return commonA.localeCompare(commonB);\n    });\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\n      commonA.localeCompare(commonB),\n    );\n    return [topLanguages, restLanguages];\n  }, [language, autoDetectedLanguages]);\n\n  const replyToStatusMonthsAgo = useMemo(\n    () =>\n      !!replyToStatus?.createdAt &&\n      Math.floor(\n        (Date.now() - new Date(replyToStatus.createdAt)) /\n          (1000 * 60 * 60 * 24 * 30),\n      ),\n    [replyToStatus],\n  );\n\n  const onMinimize = () => {\n    saveUnsavedDraft();\n    states.composerState.minimized = true;\n  };\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n              useAvatarStatic\n            />\n          )}\n          {!standalone ? (\n            <span class=\"compose-controls\">\n              <button\n                type=\"button\"\n                class=\"plain4 pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                    },\n                  });\n\n                  if (!newWin) {\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt=\"Pop out\" />\n              </button>\n              <button\n                type=\"button\"\n                class=\"plain4 min-button\"\n                onClick={onMinimize}\n              >\n                <Icon icon=\"minimize\" alt=\"Minimize\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert('Looks like you closed the parent window.');\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    if (window.opener.__STATES__.composerState?.publishing) {\n                      alert(\n                        'Looks like you already have a compose field open in the parent window and currently publishing. Please wait for it to be done and try again later.',\n                      );\n                      return;\n                    }\n\n                    let confirmText =\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?';\n                    const yes = confirm(confirmText);\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      if (window.opener.__STATES__.showCompose) {\n                        window.opener.__STATES__.showCompose = false;\n                        setTimeout(() => {\n                          window.opener.__STATES__.showCompose = true;\n                        }, 10);\n                      } else {\n                        window.opener.__STATES__.showCompose = true;\n                      }\n                      if (window.opener.__STATES__.composerState.minimized) {\n                        // Maximize it\n                        window.opener.__STATES__.composerState.minimized = false;\n                      }\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt=\"Pop in\" />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              Replying to @\n              {replyToStatus.account.acct || replyToStatus.account.username}\n              &rsquo;s post\n              {replyToStatusMonthsAgo >= 3 && (\n                <>\n                  {' '}\n                  (\n                  <strong>\n                    {rtf.format(-replyToStatusMonthsAgo, 'month')}\n                  </strong>\n                  )\n                </>\n              )}\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">Editing source post</div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText } = entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert('Poll must have at least 2 options');\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert('Some poll choices are empty');\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  'Some media have no descriptions. Continue?',\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            // states.composerState.minimized = true;\n            states.composerState.publishing = true;\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.media.create(params).then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    states.composerState.publishing = false;\n                    states.composerState.publishingError = true;\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || `Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses\n                    .$select(editStatus.id)\n                    .update(params);\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      requestInit: {\n                        headers: {\n                          'Idempotency-Key': UID.current,\n                        },\n                      },\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                states.composerState.minimized = false;\n                states.composerState.publishing = false;\n                setUIState('default');\n\n                // Close\n                onClose({\n                  // type: post, reply, edit\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\n                  newStatus,\n                  instance,\n                });\n              } catch (e) {\n                states.composerState.publishing = false;\n                states.composerState.publishingError = true;\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder=\"Content warning\"\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title=\"Content warning or sensitive media\"\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={`Visibility: ${visibility}`}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n              >\n                <option value=\"public\">\n                  Public <Icon icon=\"earth\" />\n                </option>\n                <option value=\"unlisted\">Unlisted</option>\n                <option value=\"private\">Followers only</option>\n                <option value=\"direct\">Private mention</option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? 'Post your reply'\n                : editStatus\n                ? 'Edit your post'\n                : 'What are you doing?'\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              const { type, q, limit } = params;\n              if (type === 'accounts') {\n                return masto.v1.accounts.search.list({\n                  q,\n                  limit,\n                  resolve: false,\n                });\n              }\n              return masto.v2.search.fetch(params);\n            }}\n            onTrigger={(action) => {\n              if (action?.name === 'custom-emojis') {\n                setShowEmoji2Picker({\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\n                });\n              } else if (action?.name === 'mention') {\n                setShowMentionPicker({\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\n                });\n              } else if (\n                action?.name === 'auto-detect-language' &&\n                action?.languages\n              ) {\n                setAutoDetectedLanguages(action.languages);\n              }\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i].description = value;\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>Mark media as sensitive</span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          <div\n            class=\"toolbar wrap\"\n            style={{\n              justifyContent: 'flex-end',\n            }}\n          >\n            <span>\n              <label class=\"toolbar-button\">\n                <input\n                  type=\"file\"\n                  accept={supportedMimeTypes.join(',')}\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onChange={(e) => {\n                    const files = e.target.files;\n                    if (!files) return;\n\n                    const mediaFiles = Array.from(files).map((file) => ({\n                      file,\n                      type: file.type,\n                      size: file.size,\n                      url: URL.createObjectURL(file),\n                      id: null, // indicate uploaded state\n                      description: null,\n                    }));\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                    // Validate max media attachments\n                    if (\n                      mediaAttachments.length + mediaFiles.length >\n                      maxMediaAttachments\n                    ) {\n                      alert(\n                        `You can only attach up to ${maxMediaAttachments} files.`,\n                      );\n                    } else {\n                      setMediaAttachments((attachments) => {\n                        return attachments.concat(mediaFiles);\n                      });\n                    }\n                    // Reset\n                    e.target.value = '';\n                  }}\n                />\n                <Icon icon=\"attachment\" />\n              </label>\n              {/* If maxOptions is not defined or defined and is greater than 1, show poll button */}\n              {maxOptions == null ||\n                (maxOptions > 1 && (\n                  <>\n                    <button\n                      type=\"button\"\n                      class=\"toolbar-button\"\n                      disabled={\n                        uiState === 'loading' ||\n                        !!poll ||\n                        !!mediaAttachments.length\n                      }\n                      onClick={() => {\n                        setPoll({\n                          options: ['', ''],\n                          expiresIn: 24 * 60 * 60, // 1 day\n                          multiple: false,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"poll\" alt=\"Add poll\" />\n                    </button>\n                  </>\n                ))}\n              {/* <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowMentionPicker(true);\n                }}\n              >\n                <Icon icon=\"at\" />\n              </button> */}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowEmoji2Picker(true);\n                }}\n              >\n                <Icon icon=\"emoji2\" />\n              </button>\n              {!!states.settings.composerGIFPicker && (\n                <button\n                  type=\"button\"\n                  class=\"toolbar-button gif-picker-button\"\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onClick={() => {\n                    setShowGIFPicker(true);\n                  }}\n                >\n                  <span>GIF</span>\n                </button>\n              )}\n            </span>\n            <div class=\"spacer\" />\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ||\n                (autoDetectedLanguages?.length &&\n                  !autoDetectedLanguages.includes(language))\n                  ? 'highlight'\n                  : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                {topSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n                <hr />\n                {restSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n              </select>\n            </label>{' '}\n            <button\n              type=\"submit\"\n              class=\"large\"\n              disabled={uiState === 'loading'}\n            >\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showMentionPicker && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowMentionPicker(false);\n            }\n          }}\n        >\n          <MentionModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowMentionPicker(false);\n            }}\n            defaultSearchTerm={showMentionPicker?.defaultSearchTerm}\n            onSelect={(socialAddress) => {\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const textBeforeMention = text.slice(0, selectionStart);\n              const spaceBeforeMention = textBeforeMention\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeMention)\n                  ? ''\n                  : ' '\n                : '';\n              const textAfterMention = text.slice(selectionEnd);\n              const spaceAfterMention = /^[\\s\\t\\n\\r]/.test(textAfterMention)\n                ? ''\n                : ' ';\n              const newText =\n                textBeforeMention +\n                spaceBeforeMention +\n                '@' +\n                socialAddress +\n                spaceAfterMention +\n                textAfterMention;\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd +\n                1 +\n                socialAddress.length +\n                spaceAfterMention.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n      {showEmoji2Picker && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEmoji2Picker(false);\n            }\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            defaultSearchTerm={showEmoji2Picker?.defaultSearchTerm}\n            onSelect={(emojiShortcode) => {\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const textBeforeEmoji = text.slice(0, selectionStart);\n              const spaceBeforeEmoji = textBeforeEmoji\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeEmoji)\n                  ? ''\n                  : ' '\n                : '';\n              const textAfterEmoji = text.slice(selectionEnd);\n              const spaceAfterEmoji = /^[\\s\\t\\n\\r]/.test(textAfterEmoji)\n                ? ''\n                : ' ';\n              const newText =\n                textBeforeEmoji +\n                spaceBeforeEmoji +\n                emojiShortcode +\n                spaceAfterEmoji +\n                textAfterEmoji;\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiShortcode.length + spaceAfterEmoji.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n      {showGIFPicker && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowGIFPicker(false);\n            }\n          }}\n        >\n          <GIFPickerModal\n            onClose={() => setShowGIFPicker(false)}\n            onSelect={({ url, type, alt_text }) => {\n              console.log('GIF URL', url);\n              if (mediaAttachments.length >= maxMediaAttachments) {\n                alert(\n                  `You can only attach up to ${maxMediaAttachments} files.`,\n                );\n                return;\n              }\n              // Download the GIF and insert it as media attachment\n              (async () => {\n                let theToast;\n                try {\n                  theToast = showToast({\n                    text: 'Downloading GIF…',\n                    duration: -1,\n                  });\n                  const blob = await fetch(url, {\n                    referrerPolicy: 'no-referrer',\n                  }).then((res) => res.blob());\n                  const file = new File(\n                    [blob],\n                    type === 'video/mp4' ? 'video.mp4' : 'image.gif',\n                    {\n                      type,\n                    },\n                  );\n                  const newMediaAttachments = [\n                    ...mediaAttachments,\n                    {\n                      file,\n                      type,\n                      size: file.size,\n                      id: null,\n                      description: alt_text || '',\n                    },\n                  ];\n                  setMediaAttachments(newMediaAttachments);\n                  theToast?.hideToast?.();\n                } catch (err) {\n                  console.error(err);\n                  theToast?.hideToast?.();\n                  showToast('Failed to download GIF');\n                }\n              })();\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction autoResizeTextarea(textarea) {\n  if (!textarea) return;\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\n  if (offsetHeight < window.innerHeight) {\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\n    // No idea why it does that, will re-investigate in far future\n    const offset = offsetHeight - clientHeight;\n    const height = value ? scrollHeight + offset + 'px' : null;\n    textarea.style.height = height;\n  }\n}\n\nasync function _getCustomEmojis(instance, masto) {\n  const emojis = await masto.v1.customEmojis.list();\n  const visibleEmojis = emojis.filter((e) => e.visibleInPicker);\n  const searcher = new Fuse(visibleEmojis, {\n    keys: ['shortcode'],\n    findAllMatches: true,\n  });\n  return [visibleEmojis, searcher];\n}\nconst getCustomEmojis = pmem(_getCustomEmojis, {\n  // Limit by time to reduce memory usage\n  // Cached by instance\n  matchesArg: (cacheKeyArg, keyArg) => cacheKeyArg.instance === keyArg.instance,\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nconst detectLangs = (text) => {\n  const langs = detectAll(text);\n  if (langs?.length) {\n    // return max 2\n    return langs.slice(0, 2).map((lang) => lang.lang);\n  }\n  return null;\n};\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto, instance } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const {\n    maxCharacters,\n    performSearch = () => {},\n    onTrigger = () => {},\n    ...textareaProps\n  } = props;\n  // const snapStates = useSnapshot(states);\n  // const charCount = snapStates.composerCharacterCount;\n\n  // const customEmojis = useRef();\n  const searcherRef = useRef();\n  useEffect(() => {\n    getCustomEmojis(instance, masto)\n      .then((r) => {\n        const [emojis, searcher] = r;\n        searcherRef.current = searcher;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          // const emojis = filterShortcodes(customEmojis.current, text);\n          const results = searcherRef.current?.search(text, {\n            limit: 5,\n          });\n          let html = '';\n          results.forEach(({ item: emoji }) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                ${encodeHTML(shortcode)}\n              </li>`;\n          });\n          html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">More…</li>`;\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: results.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type] || value;\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                  history,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  const total = history?.reduce?.(\n                    (acc, cur) => acc + +cur.uses,\n                    0,\n                  );\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\n                      ${\n                        total\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\n                          : ''\n                      }\n                    </li>\n                  `;\n                }\n              });\n              if (type === 'accounts') {\n                html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">More…</li>`;\n              }\n              menu.innerHTML = html;\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        const { value, more } = item.dataset;\n        if (key === ':') {\n          e.detail.value = value ? `:${value}:` : '​'; // zero-width space\n          if (more) {\n            // Prevent adding space after the above value\n            e.detail.continue = true;\n\n            setTimeout(() => {\n              onTrigger?.({\n                name: 'custom-emojis',\n                defaultSearchTerm: more,\n              });\n            }, 300);\n          }\n        } else if (key === '@') {\n          e.detail.value = value ? `@${value} ` : '​'; // zero-width space\n          if (more) {\n            e.detail.continue = true;\n            setTimeout(() => {\n              onTrigger?.({\n                name: 'mention',\n                defaultSearchTerm: more,\n              });\n            }, 300);\n          }\n        } else {\n          e.detail.value = `${key}${value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n        // fire input event\n        if (ref.current) {\n          const event = new Event('input', { bubbles: true });\n          ref.current.dispatchEvent(event);\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Resize observer for textarea\n    const textarea = ref.current;\n    if (!textarea) return;\n    const resizeObserver = new ResizeObserver(() => {\n      // Get height of textarea, set height to textExpander\n      if (textExpanderRef.current) {\n        const { height } = textarea.getBoundingClientRect();\n        textExpanderRef.current.style.height = height + 'px';\n      }\n    });\n    resizeObserver.observe(textarea);\n  }, []);\n\n  const slowHighlightPerf = useRef(0); // increment if slow\n  const composeHighlightRef = useRef();\n  const throttleHighlightText = useThrottledCallback((text) => {\n    if (!composeHighlightRef.current) return;\n    if (slowHighlightPerf.current > 3) {\n      // After 3 times of lag, disable highlighting\n      composeHighlightRef.current.innerHTML = '';\n      composeHighlightRef.current = null; // Destroy the whole thing\n      throttleHighlightText?.cancel?.();\n      return;\n    }\n    let start;\n    let end;\n    if (slowHighlightPerf.current <= 3) start = Date.now();\n    composeHighlightRef.current.innerHTML =\n      highlightText(text, {\n        maxCharacters,\n      }) + '\\n';\n    if (slowHighlightPerf.current <= 3) end = Date.now();\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\n    if (start && end && end - start > 50) {\n      // if slow, increment\n      slowHighlightPerf.current++;\n    }\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\n  }, 500);\n\n  const debouncedAutoDetectLanguage = useDebouncedCallback(() => {\n    // Make use of the highlightRef to get the DOM\n    // Clone the dom\n    const dom = composeHighlightRef.current?.cloneNode(true);\n    if (!dom) return;\n    // Remove mark\n    dom.querySelectorAll('mark').forEach((mark) => {\n      mark.remove();\n    });\n    const text = dom.innerText?.trim();\n    if (!text) return;\n    const langs = detectLangs(text);\n    if (langs?.length) {\n      onTrigger?.({\n        name: 'auto-detect-language',\n        languages: langs,\n      });\n    }\n  }, 2000);\n\n  return (\n    <text-expander\n      ref={textExpanderRef}\n      keys=\"@ # :\"\n      class=\"compose-field-container\"\n    >\n      <textarea\n        class=\"compose-field\"\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onKeyDown={(e) => {\n          // Get line before cursor position after pressing 'Enter'\n          const { key, target } = e;\n          if (key === 'Enter' && !(e.ctrlKey || e.metaKey)) {\n            try {\n              const { value, selectionStart } = target;\n              const textBeforeCursor = value.slice(0, selectionStart);\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\n              if (lastLine) {\n                // If line starts with \"- \" or \"12. \"\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\n                  // insert \"- \" at cursor position\n                  const [_, preSpaces, bullet, postSpaces, anything] =\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\n                  if (anything) {\n                    e.preventDefault();\n                    const [number] = bullet.match(/\\d+/) || [];\n                    const newBullet = number ? `${+number + 1}.` : '-';\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\n                    target.setRangeText(text, selectionStart, selectionStart);\n                    const pos = selectionStart + text.length;\n                    target.setSelectionRange(pos, pos);\n                  } else {\n                    // trim the line before the cursor, then insert new line\n                    const pos = selectionStart - lastLine.length;\n                    target.setRangeText('', pos, selectionStart);\n                  }\n                  autoResizeTextarea(target);\n                  target.dispatchEvent(new Event('input'));\n                }\n              }\n            } catch (e) {\n              // silent fail\n              console.error(e);\n            }\n          }\n          if (composeHighlightRef.current) {\n            composeHighlightRef.current.scrollTop = target.scrollTop;\n          }\n        }}\n        onInput={(e) => {\n          const { target } = e;\n          // Replace zero-width space\n          const text = target.value.replace(/\\u200b/g, '');\n          setText(text);\n          autoResizeTextarea(target);\n          props.onInput?.(e);\n          throttleHighlightText(text);\n          debouncedAutoDetectLanguage();\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n        onScroll={(e) => {\n          if (composeHighlightRef.current) {\n            const { scrollTop } = e.target;\n            composeHighlightRef.current.scrollTop = scrollTop;\n          }\n        }}\n      />\n      <div\n        ref={composeHighlightRef}\n        class=\"compose-highlight\"\n        aria-hidden=\"true\"\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <span class=\"char-counter\" hidden />;\n  }\n  return (\n    <span\n      class=\"char-counter\"\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    >\n      <meter\n        class={`${\n          leftChars <= -10\n            ? 'explode'\n            : leftChars <= 0\n            ? 'danger'\n            : leftChars <= 20\n            ? 'warning'\n            : ''\n        }`}\n        value={charCount}\n        max={maxCharacters}\n      />\n      <span class=\"counter\">{leftChars}</span>\n    </span>\n  );\n}\n\nfunction prettyBytes(bytes) {\n  const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  let unitIndex = 0;\n  while (bytes >= 1024) {\n    bytes /= 1024;\n    unitIndex++;\n  }\n  return `${bytes.toFixed(0).toLocaleString()} ${units[unitIndex]}`;\n}\n\nfunction scaleDimension(matrix, matrixLimit, width, height) {\n  // matrix = number of pixels\n  // matrixLimit = max number of pixels\n  // Calculate new width and height, downsize to within the limit, preserve aspect ratio, no decimals\n  const scalingFactor = Math.sqrt(matrixLimit / matrix);\n  const newWidth = Math.floor(width * scalingFactor);\n  const newHeight = Math.floor(height * scalingFactor);\n  return { newWidth, newHeight };\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { type, id, file } = attachment;\n  const url = useMemo(\n    () => (file ? URL.createObjectURL(file) : attachment.url),\n    [file, attachment.url],\n  );\n  console.log({ attachment });\n\n  const checkMaxError = !!file?.size;\n  const configuration = checkMaxError ? getCurrentInstanceConfiguration() : {};\n  const {\n    mediaAttachments: {\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n  } = configuration || {};\n\n  const [maxError, setMaxError] = useState(() => {\n    if (!checkMaxError) return null;\n    if (\n      type.startsWith('image') &&\n      imageSizeLimit &&\n      file.size > imageSizeLimit\n    ) {\n      return {\n        type: 'imageSizeLimit',\n        details: {\n          imageSize: file.size,\n          imageSizeLimit,\n        },\n      };\n    } else if (\n      type.startsWith('video') &&\n      videoSizeLimit &&\n      file.size > videoSizeLimit\n    ) {\n      return {\n        type: 'videoSizeLimit',\n        details: {\n          videoSize: file.size,\n          videoSizeLimit,\n        },\n      };\n    }\n    return null;\n  });\n\n  const [imageMatrix, setImageMatrix] = useState({});\n  useEffect(() => {\n    if (!checkMaxError || !imageMatrixLimit) return;\n    if (imageMatrix?.matrix > imageMatrixLimit) {\n      setMaxError({\n        type: 'imageMatrixLimit',\n        details: {\n          imageMatrix: imageMatrix?.matrix,\n          imageMatrixLimit,\n          width: imageMatrix?.width,\n          height: imageMatrix?.height,\n        },\n      });\n    }\n  }, [imageMatrix, imageMatrixLimit, checkMaxError]);\n\n  const [videoMatrix, setVideoMatrix] = useState({});\n  useEffect(() => {\n    if (!checkMaxError || !videoMatrixLimit) return;\n    if (videoMatrix?.matrix > videoMatrixLimit) {\n      setMaxError({\n        type: 'videoMatrixLimit',\n        details: {\n          videoMatrix: videoMatrix?.matrix,\n          videoMatrixLimit,\n          width: videoMatrix?.width,\n          height: videoMatrix?.height,\n        },\n      });\n    }\n  }, [videoMatrix, videoMatrixLimit, checkMaxError]);\n\n  const [description, setDescription] = useState(attachment.description);\n  const [suffixType, subtype] = type.split('/');\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n  useEffect(() => {\n    debouncedOnDescriptionChange(description);\n  }, [description, debouncedOnDescriptionChange]);\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled || uiState === 'loading'}\n          class={uiState === 'loading' ? 'loading' : ''}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            // debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  const toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  const maxErrorToast = useRef(null);\n\n  const maxErrorText = (err) => {\n    const { type, details } = err;\n    switch (type) {\n      case 'imageSizeLimit': {\n        const { imageSize, imageSizeLimit } = details;\n        return `File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\n          imageSize,\n        )} to ${prettyBytes(imageSizeLimit)} or lower.`;\n      }\n      case 'imageMatrixLimit': {\n        const { imageMatrix, imageMatrixLimit, width, height } = details;\n        const { newWidth, newHeight } = scaleDimension(\n          imageMatrix,\n          imageMatrixLimit,\n          width,\n          height,\n        );\n        return `Dimension too large. Uploading might encounter issues. Try reduce dimension from ${width.toLocaleString()}×${height.toLocaleString()}px to ${newWidth.toLocaleString()}×${newHeight.toLocaleString()}px.`;\n      }\n      case 'videoSizeLimit': {\n        const { videoSize, videoSizeLimit } = details;\n        return `File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\n          videoSize,\n        )} to ${prettyBytes(videoSizeLimit)} or lower.`;\n      }\n      case 'videoMatrixLimit': {\n        const { videoMatrix, videoMatrixLimit, width, height } = details;\n        const { newWidth, newHeight } = scaleDimension(\n          videoMatrix,\n          videoMatrixLimit,\n          width,\n          height,\n        );\n        return `Dimension too large. Uploading might encounter issues. Try reduce dimension from ${width.toLocaleString()}×${height.toLocaleString()}px to ${newWidth.toLocaleString()}×${newHeight.toLocaleString()}px.`;\n      }\n      case 'videoFrameRateLimit': {\n        // Not possible to detect this on client-side for now\n        return 'Frame rate too high. Uploading might encounter issues.';\n      }\n    }\n  };\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img\n              src={url}\n              alt=\"\"\n              onLoad={(e) => {\n                if (!checkMaxError) return;\n                const { naturalWidth, naturalHeight } = e.target;\n                setImageMatrix({\n                  matrix: naturalWidth * naturalHeight,\n                  width: naturalWidth,\n                  height: naturalHeight,\n                });\n              }}\n            />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video\n              src={url + '#t=0.1'} // Make Safari show 1st-frame preview\n              playsinline\n              muted\n              disablePictureInPicture\n              preload=\"metadata\"\n              onLoadedMetadata={(e) => {\n                if (!checkMaxError) return;\n                const { videoWidth, videoHeight } = e.target;\n                if (videoWidth && videoHeight) {\n                  setVideoMatrix({\n                    matrix: videoWidth * videoHeight,\n                    width: videoWidth,\n                    height: videoHeight,\n                  });\n                }\n              }}\n            />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n          {!!maxError && (\n            <button\n              type=\"button\"\n              class=\"media-error\"\n              title={maxErrorText(maxError)}\n              onClick={() => {\n                if (maxErrorToast.current) {\n                  maxErrorToast.current.hideToast();\n                }\n                maxErrorToast.current = showToast({\n                  text: maxErrorText(maxError),\n                  duration: 10_000,\n                });\n              }}\n            >\n              <Icon icon=\"alert\" />\n            </button>\n          )}\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          onClose={() => {\n            setShowModal(false);\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              <div class=\"media-form\">\n                {descTextarea}\n                <footer>\n                  {suffixType === 'image' &&\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\n                    !!states.settings.mediaAltGenerator &&\n                    !!IMG_ALT_API_URL && (\n                      <Menu2\n                        portal={{\n                          target: document.body,\n                        }}\n                        containerProps={{\n                          style: {\n                            zIndex: 1001,\n                          },\n                        }}\n                        align=\"center\"\n                        position=\"anchor\"\n                        overflow=\"auto\"\n                        menuButton={\n                          <button type=\"button\" title=\"More\" class=\"plain\">\n                            <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                          </button>\n                        }\n                      >\n                        <MenuItem\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            setUIState('loading');\n                            toastRef.current = showToast({\n                              text: 'Generating description. Please wait...',\n                              duration: -1,\n                            });\n                            // POST with multipart\n                            (async function () {\n                              try {\n                                const body = new FormData();\n                                body.append('image', file);\n                                const response = await fetch(IMG_ALT_API_URL, {\n                                  method: 'POST',\n                                  body,\n                                }).then((r) => r.json());\n                                if (response.error) {\n                                  throw new Error(response.error);\n                                }\n                                setDescription(response.description);\n                              } catch (e) {\n                                console.error(e);\n                                showToast(\n                                  `Failed to generate description${\n                                    e?.message ? `: ${e.message}` : ''\n                                  }`,\n                                );\n                              } finally {\n                                setUIState('default');\n                                toastRef.current?.hideToast?.();\n                              }\n                            })();\n                          }}\n                        >\n                          <Icon icon=\"sparkles2\" />\n                          {lang && lang !== 'en' ? (\n                            <small>\n                              Generate description…\n                              <br />\n                              (English)\n                            </small>\n                          ) : (\n                            <span>Generate description…</span>\n                          )}\n                        </MenuItem>\n                        {!!lang && lang !== 'en' && (\n                          <MenuItem\n                            disabled={uiState === 'loading'}\n                            onClick={() => {\n                              setUIState('loading');\n                              toastRef.current = showToast({\n                                text: 'Generating description. Please wait...',\n                                duration: -1,\n                              });\n                              // POST with multipart\n                              (async function () {\n                                try {\n                                  const body = new FormData();\n                                  body.append('image', file);\n                                  const params = `?lang=${lang}`;\n                                  const response = await fetch(\n                                    IMG_ALT_API_URL + params,\n                                    {\n                                      method: 'POST',\n                                      body,\n                                    },\n                                  ).then((r) => r.json());\n                                  if (response.error) {\n                                    throw new Error(response.error);\n                                  }\n                                  setDescription(response.description);\n                                } catch (e) {\n                                  console.error(e);\n                                  showToast(\n                                    `Failed to generate description${\n                                      e?.message ? `: ${e.message}` : ''\n                                    }`,\n                                  );\n                                } finally {\n                                  setUIState('default');\n                                  toastRef.current?.hideToast?.();\n                                }\n                              })();\n                            }}\n                          >\n                            <Icon icon=\"sparkles2\" />\n                            <small>\n                              Generate description…\n                              <br />({localeCode2Text(lang)}){' '}\n                              <span class=\"more-insignificant\">\n                                — experimental\n                              </span>\n                            </small>\n                          </MenuItem>\n                        )}\n                      </Menu2>\n                    )}\n                  <button\n                    type=\"button\"\n                    class=\"light block\"\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                    disabled={uiState === 'loading'}\n                  >\n                    Done\n                  </button>\n                </footer>\n              </div>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction MentionModal({\n  onClose = () => {},\n  onSelect = () => {},\n  defaultSearchTerm,\n}) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (term) => {\n    if (!term) return;\n    setUIState('loading');\n    (async () => {\n      try {\n        const accounts = await masto.v1.accounts.search.list({\n          q: term,\n          limit: 40,\n          resolve: false,\n        });\n        setAccounts(accounts);\n        loadRelationships(accounts);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  };\n\n  const debouncedLoadAccounts = useDebouncedCallback(loadAccounts, 1000);\n\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts]);\n\n  const inputRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      // Put cursor at the end\n      if (inputRef.current.value) {\n        inputRef.current.selectionStart = inputRef.current.value.length;\n        inputRef.current.selectionEnd = inputRef.current.value.length;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (defaultSearchTerm) {\n      loadAccounts(defaultSearchTerm);\n    }\n  }, [defaultSearchTerm]);\n\n  const selectAccount = (account) => {\n    const socialAddress = account.acct;\n    onSelect(socialAddress);\n    onClose();\n  };\n\n  useHotkeys(\n    'enter',\n    () => {\n      const selectedAccount = accounts[selectedIndex];\n      if (selectedAccount) {\n        selectAccount(selectedAccount);\n      }\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const listRef = useRef();\n  useHotkeys(\n    'down',\n    () => {\n      if (selectedIndex < accounts.length - 1) {\n        setSelectedIndex(selectedIndex + 1);\n      } else {\n        setSelectedIndex(0);\n      }\n      setTimeout(() => {\n        const selectedItem = listRef.current.querySelector('.selected');\n        if (selectedItem) {\n          selectedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n        }\n      }, 1);\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  useHotkeys(\n    'up',\n    () => {\n      if (selectedIndex > 0) {\n        setSelectedIndex(selectedIndex - 1);\n      } else {\n        setSelectedIndex(accounts.length - 1);\n      }\n      setTimeout(() => {\n        const selectedItem = listRef.current.querySelector('.selected');\n        if (selectedItem) {\n          selectedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n        }\n      }, 1);\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  return (\n    <div id=\"mention-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            debouncedLoadAccounts.flush?.();\n            // const searchTerm = inputRef.current.value;\n            // debouncedLoadAccounts(searchTerm);\n          }}\n        >\n          <input\n            ref={inputRef}\n            required\n            type=\"search\"\n            class=\"block\"\n            placeholder=\"Search accounts\"\n            onInput={(e) => {\n              const { value } = e.target;\n              debouncedLoadAccounts(value);\n            }}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            defaultValue={defaultSearchTerm || ''}\n          />\n        </form>\n      </header>\n      <main>\n        {accounts?.length > 0 ? (\n          <ul\n            ref={listRef}\n            class={`accounts-list ${uiState === 'loading' ? 'loading' : ''}`}\n          >\n            {accounts.map((account, i) => {\n              const relationship = relationshipsMap[account.id];\n              return (\n                <li\n                  key={account.id}\n                  class={i === selectedIndex ? 'selected' : ''}\n                >\n                  <AccountBlock\n                    avatarSize=\"xxl\"\n                    account={account}\n                    relationship={relationship}\n                    showStats\n                    showActivity\n                  />\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    onClick={() => {\n                      selectAccount(account);\n                    }}\n                  >\n                    <Icon icon=\"plus\" size=\"xl\" />\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : uiState === 'error' ? (\n          <div class=\"ui-state\">\n            <p>Error loading accounts</p>\n          </div>\n        ) : null}\n      </main>\n    </div>\n  );\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n  defaultSearchTerm,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState([]);\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  const searcherRef = useRef();\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const [emojis, searcher] = await getCustomEmojis(instance, masto);\n        console.log('emojis', emojis);\n        searcherRef.current = searcher;\n        setCustomEmojis(emojis);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const customEmojisCatList = useMemo(() => {\n    // Group emojis by category\n    const emojisCat = {\n      '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n        customEmojis.find((e) => e.shortcode === emoji.shortcode),\n      ),\n    };\n    const othersCat = [];\n    customEmojis.forEach((emoji) => {\n      customEmojisList.current?.push?.(emoji);\n      if (!emoji.category) {\n        othersCat.push(emoji);\n        return;\n      }\n      if (!emojisCat[emoji.category]) {\n        emojisCat[emoji.category] = [];\n      }\n      emojisCat[emoji.category].push(emoji);\n    });\n    if (othersCat.length) {\n      emojisCat['--others--'] = othersCat;\n    }\n    return emojisCat;\n  }, [customEmojis]);\n\n  const scrollableRef = useRef();\n  const [matches, setMatches] = useState(null);\n  const onFind = useCallback(\n    (e) => {\n      const { value } = e.target;\n      if (value) {\n        const results = searcherRef.current?.search(value, {\n          limit: CUSTOM_EMOJIS_COUNT,\n        });\n        setMatches(results.map((r) => r.item));\n        scrollableRef.current?.scrollTo?.(0, 0);\n      } else {\n        setMatches(null);\n      }\n    },\n    [customEmojis],\n  );\n  useEffect(() => {\n    if (defaultSearchTerm && customEmojis?.length) {\n      onFind({ target: { value: defaultSearchTerm } });\n    }\n  }, [defaultSearchTerm, onFind, customEmojis]);\n\n  const onSelectEmoji = useCallback(\n    (emoji) => {\n      onSelect?.(emoji);\n      onClose?.();\n\n      queueMicrotask(() => {\n        let recentlyUsedCustomEmojis =\n          store.account.get('recentlyUsedCustomEmojis') || [];\n        const recentlyUsedEmojiIndex = recentlyUsedCustomEmojis.findIndex(\n          (e) => e.shortcode === emoji.shortcode,\n        );\n        if (recentlyUsedEmojiIndex !== -1) {\n          // Move emoji to index 0\n          recentlyUsedCustomEmojis.splice(recentlyUsedEmojiIndex, 1);\n          recentlyUsedCustomEmojis.unshift(emoji);\n        } else {\n          recentlyUsedCustomEmojis.unshift(emoji);\n          // Remove unavailable ones\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.filter((e) =>\n            customEmojisList.current?.find?.(\n              (emoji) => emoji.shortcode === e.shortcode,\n            ),\n          );\n          // Limit to 10\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.slice(0, 10);\n        }\n\n        // Store back\n        store.account.set('recentlyUsedCustomEmojis', recentlyUsedCustomEmojis);\n      });\n    },\n    [onSelect],\n  );\n\n  const inputRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      // Put cursor at the end\n      if (inputRef.current.value) {\n        inputRef.current.selectionStart = inputRef.current.value.length;\n        inputRef.current.selectionEnd = inputRef.current.value.length;\n      }\n    }\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <div>\n          <b>Custom emojis</b>{' '}\n          {uiState === 'loading' ? (\n            <Loader />\n          ) : (\n            <small class=\"insignificant\"> • {instance}</small>\n          )}\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const emoji = matches[0];\n            if (emoji) {\n              onSelectEmoji(`:${emoji.shortcode}:`);\n            }\n          }}\n        >\n          <input\n            ref={inputRef}\n            type=\"search\"\n            placeholder=\"Search emoji\"\n            onInput={onFind}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            defaultValue={defaultSearchTerm || ''}\n          />\n        </form>\n      </header>\n      <main ref={scrollableRef}>\n        {matches !== null ? (\n          <ul class=\"custom-emojis-matches custom-emojis-list\">\n            {matches.map((emoji) => (\n              <li key={emoji.shortcode} class=\"custom-emojis-match\">\n                <CustomEmojiButton\n                  emoji={emoji}\n                  onClick={() => {\n                    onSelectEmoji(`:${emoji.shortcode}:`);\n                  }}\n                  showCode\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div class=\"custom-emojis-list\">\n            {uiState === 'error' && (\n              <div class=\"ui-state\">\n                <p>Error loading custom emojis</p>\n              </div>\n            )}\n            {uiState === 'default' &&\n              Object.entries(customEmojisCatList).map(\n                ([category, emojis]) =>\n                  !!emojis?.length && (\n                    <>\n                      <div class=\"section-header\">\n                        {{\n                          '--recent--': 'Recently used',\n                          '--others--': 'Others',\n                        }[category] || category}\n                      </div>\n                      <CustomEmojisList\n                        emojis={emojis}\n                        onSelect={onSelectEmoji}\n                      />\n                    </>\n                  ),\n              )}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nconst CustomEmojisList = memo(({ emojis, onSelect }) => {\n  const [max, setMax] = useState(CUSTOM_EMOJIS_COUNT);\n  const showMore = emojis.length > max;\n  return (\n    <section>\n      {emojis.slice(0, max).map((emoji) => (\n        <CustomEmojiButton\n          key={emoji.shortcode}\n          emoji={emoji}\n          onClick={() => {\n            onSelect(`:${emoji.shortcode}:`);\n          }}\n        />\n      ))}\n      {showMore && (\n        <button\n          type=\"button\"\n          class=\"plain small\"\n          onClick={() => setMax(max + CUSTOM_EMOJIS_COUNT)}\n        >\n          {(emojis.length - max).toLocaleString()} more…\n        </button>\n      )}\n    </section>\n  );\n});\n\nconst CustomEmojiButton = memo(({ emoji, onClick, showCode }) => {\n  const addEdges = (e) => {\n    // Add edge-left or edge-right class based on self position relative to scrollable parent\n    // If near left edge, add edge-left, if near right edge, add edge-right\n    const buffer = 88;\n    const parent = e.currentTarget.closest('main');\n    if (parent) {\n      const rect = parent.getBoundingClientRect();\n      const selfRect = e.currentTarget.getBoundingClientRect();\n      const targetClassList = e.currentTarget.classList;\n      if (selfRect.left < rect.left + buffer) {\n        targetClassList.add('edge-left');\n        targetClassList.remove('edge-right');\n      } else if (selfRect.right > rect.right - buffer) {\n        targetClassList.add('edge-right');\n        targetClassList.remove('edge-left');\n      } else {\n        targetClassList.remove('edge-left', 'edge-right');\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"plain4\"\n      onClick={onClick}\n      data-title={showCode ? undefined : emoji.shortcode}\n      onPointerEnter={addEdges}\n      onFocus={addEdges}\n    >\n      <picture>\n        {!!emoji.staticUrl && (\n          <source\n            srcSet={emoji.staticUrl}\n            media=\"(prefers-reduced-motion: reduce)\"\n          />\n        )}\n        <img\n          className=\"shortcode-emoji\"\n          src={emoji.url || emoji.staticUrl}\n          alt={emoji.shortcode}\n          width=\"24\"\n          height=\"24\"\n          loading=\"lazy\"\n          decoding=\"async\"\n        />\n      </picture>\n      {showCode && (\n        <>\n          {' '}\n          <code>{emoji.shortcode}</code>\n        </>\n      )}\n    </button>\n  );\n});\n\nconst GIFS_PER_PAGE = 20;\nfunction GIFPickerModal({ onClose = () => {}, onSelect = () => {} }) {\n  const [uiState, setUIState] = useState('default');\n  const [results, setResults] = useState([]);\n  const formRef = useRef(null);\n  const qRef = useRef(null);\n  const currentOffset = useRef(0);\n  const scrollableRef = useRef(null);\n\n  function fetchGIFs({ offset }) {\n    console.log('fetchGIFs', { offset });\n    if (!qRef.current?.value) return;\n    setUIState('loading');\n    scrollableRef.current?.scrollTo?.({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n    (async () => {\n      try {\n        const query = {\n          api_key: GIPHY_API_KEY,\n          q: qRef.current.value,\n          rating: 'g',\n          limit: GIFS_PER_PAGE,\n          bundle: 'messaging_non_clips',\n          offset,\n        };\n        const response = await fetch(\n          'https://api.giphy.com/v1/gifs/search?' + new URLSearchParams(query),\n          {\n            referrerPolicy: 'no-referrer',\n          },\n        ).then((r) => r.json());\n        currentOffset.current = response.pagination?.offset || 0;\n        setResults(response);\n        setUIState('results');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }\n\n  useEffect(() => {\n    qRef.current?.focus();\n  }, []);\n\n  const debouncedOnInput = useDebouncedCallback(() => {\n    fetchGIFs({ offset: 0 });\n  }, 1000);\n\n  return (\n    <div id=\"gif-picker-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            e.preventDefault();\n            fetchGIFs({ offset: 0 });\n          }}\n        >\n          <input\n            ref={qRef}\n            type=\"search\"\n            name=\"q\"\n            placeholder=\"Search GIFs\"\n            required\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            onInput={debouncedOnInput}\n          />\n          <input\n            type=\"image\"\n            class=\"powered-button\"\n            src={poweredByGiphyURL}\n            width=\"86\"\n            height=\"30\"\n          />\n        </form>\n      </header>\n      <main ref={scrollableRef} class={uiState === 'loading' ? 'loading' : ''}>\n        {uiState === 'default' && (\n          <div class=\"ui-state\">\n            <p class=\"insignificant\">Type to search GIFs</p>\n          </div>\n        )}\n        {uiState === 'loading' && !results?.data?.length && (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        )}\n        {results?.data?.length > 0 ? (\n          <>\n            <ul>\n              {results.data.map((gif) => {\n                const { id, images, title, alt_text } = gif;\n                const {\n                  fixed_height_small,\n                  fixed_height_downsampled,\n                  fixed_height,\n                  original,\n                } = images;\n                const theImage = fixed_height_small?.url\n                  ? fixed_height_small\n                  : fixed_height_downsampled?.url\n                  ? fixed_height_downsampled\n                  : fixed_height;\n                let { url, webp, width, height } = theImage;\n                if (+height > 100) {\n                  width = (width / height) * 100;\n                  height = 100;\n                }\n                const urlObj = URL.parse(url);\n                const strippedURL = urlObj.origin + urlObj.pathname;\n                let strippedWebP;\n                if (webp) {\n                  const webpObj = URL.parse(webp);\n                  strippedWebP = webpObj.origin + webpObj.pathname;\n                }\n                return (\n                  <li key={id}>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const { mp4, url } = original;\n                        const theURL = mp4 || url;\n                        const urlObj = URL.parse(theURL);\n                        const strippedURL = urlObj.origin + urlObj.pathname;\n                        onClose();\n                        onSelect({\n                          url: strippedURL,\n                          type: mp4 ? 'video/mp4' : 'image/gif',\n                          alt_text: alt_text || title,\n                        });\n                      }}\n                    >\n                      <figure\n                        style={{\n                          '--figure-width': width + 'px',\n                          // width: width + 'px'\n                        }}\n                      >\n                        <picture>\n                          {strippedWebP && (\n                            <source srcset={strippedWebP} type=\"image/webp\" />\n                          )}\n                          <img\n                            src={strippedURL}\n                            width={width}\n                            height={height}\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            alt={alt_text}\n                            referrerpolicy=\"no-referrer\"\n                            onLoad={(e) => {\n                              e.target.style.backgroundColor = 'transparent';\n                            }}\n                          />\n                        </picture>\n                        <figcaption>{alt_text || title}</figcaption>\n                      </figure>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            <p class=\"pagination\">\n              {results.pagination?.offset > 0 && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset - GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <Icon icon=\"chevron-left\" />\n                  <span>Previous</span>\n                </button>\n              )}\n              <span />\n              {results.pagination?.offset + results.pagination?.count <\n                results.pagination?.total_count && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset + GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <span>Next</span> <Icon icon=\"chevron-right\" />\n                </button>\n              )}\n            </p>\n          </>\n        ) : (\n          uiState === 'results' && (\n            <div class=\"ui-state\">\n              <p>No results</p>\n            </div>\n          )\n        )}\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>Error loading GIFs</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n"],"names":["Combobox","input","list","tabInsertsSuggestions","defaultFirstOption","event","keyboardBindings","trackComposition","commitWithElement","_a","visible","indexDiff","focusEl","els","focusIndex","indexOfItem","newIndex","target","el","scrollTo","combobox","commit","fireCommitEvent","container","inViewport","element","scrollTop","containerBottom","top","bottom","boundary","query","text","key","cursor","multiWord","lookBackIndex","lastMatchPosition","keyIndex","pre","CustomHTMLElement","InputStyleCloneUpdateEvent","CloneRegistry","_InputStyleCloneElement","__privateAdd","_InputStyleCloneElement_instances","_styleObserver","__privateMethod","updateStyles_fn","_resizeObserver","requestUpdateLayout_fn","_inputRef","_container","_xOffset","_yOffset","_isLayoutUpdating","_onInput","updateText_fn","_onDocumentScrollOrResize","usingInput_fn","__privateSet","__privateGet","clone","fn","updateLayout_fn","inputStyle","inputRect","cloneRect","prop","propertiesToCopy","InputStyleCloneElement","e","_InputRange","startOffset","endOffset","_InputRange_instances","_inputElement","_startOffset","_endOffset","selectionStart","selectionEnd","offset","clampOffset_fn","toStart","createCloneRange_fn","styleClone_get","cloneElement_get","range","textNode","InputRange","states","TextExpander","expander","match","menu","_b","position","caretRect","targetPosition","currentPosition","delta","currentStyle","item","beginning","remaining","detail","suffix","value","found","providers","provide","result","x","TextExpanderElement","keysAttr","keys","multiWordAttr","globalMultiWord","state","ansiRegex","onlyFirst","pattern","regex","stripAnsi","string","segmenter","stringLength","countAnsiEscapeCodes","length","_","poweredByGiphyURL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","import","supportedLanguagesMap","supportedLanguages","reduce","acc","l","code","common","native","expiryOptions","expirySeconds","Object","values","oneDay","expiresInFromExpiresAt","expiresAt","Date","getTime","now","find","s","document","createElement","role","className","windowMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","left","width","boundingClientRect","innerWidth","window","style","observe","DEFAULT_LANG","localeMatch","Intl","DateTimeFormat","resolvedOptions","locale","navigator","languages","map","urlRegexObj","RegExp","urlRegex","source","flags","usernameRegex","urlPlaceholder","countableText","inputText","replace","USERNAME_RE","MENTION_RE","HASHTAG_RE","SHORTCODE_RE_FRAGMENT","SCAN_RE","Segmenter","escapeHTML","highlightText","maxCharacters","Infinity","composerCharacterCount","withinLimitHTML","exceedLimitHTML","htmlSegments","segment","index","rtf","RelativeTimeFormat","CUSTOM_EMOJIS_COUNT","Compose","onClose","replyToStatus","editStatus","draftStatus","standalone","hasOpener","console","masto","instance","uiState","setUIState","useState","UID","uid","log","currentAccount","currentAccountInfo","maxMediaAttachments","charactersReservedPerUrl","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","maxCharactersPerOption","minExpiration","spoilerTextRef","useRef","textareaRef","store","prevLanguage","language","sensitive","setMediaAttachments","setLanguage","oninputTextarea","poll","account","focusTextarea","dispatchEvent","setTimeout","spoilerText","useEffect","visibility2","language2","sensitive2","visibility","current","m","allMentions","prefs","setSensitive","poll2","mediaAttachments","options","expiresIn","statusSource","dataset","mediaAttachments2","setVisibility","composablePoll","status","o","formRef","hasValue","hasMediaAttachments","isSelf","hasOnlyAcct","confirmClose","hasIDMediaAttachments","beforeUnloadCopy","id","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","supportsCloseWatcher","useHotkeys","yes","addEventListener","capture","modals","hasModal","hasOnlyComposer","prevBackgroundDraft","count","escDownRef","ignoreEventWhen","useCloseWatcher","canClose","draftKey","getCurrentAccountNS","backgroundDraft","useInterval","db","handleItems","username","acct","items","i2","file","files","drafts","allowedFiles","updatedAt","then","debug","error","mediaFiles","handleDragover","includes","showMentionPicker","setShowMentionPicker","showEmoji2Picker","setShowEmoji2Picker","showGIFPicker","autoDetectedLanguages","setAutoDetectedLanguages","topSupportedLanguages","restSupportedLanguages","useMemo","topLanguages","contentTranslationHideLanguages","max","restLanguages","commonB","type","size","url","codeA","commonA","codeB","onMinimize","saveUnsavedDraft","_jsxs","dataTransfer","_jsx","children","passData","Icon","alert","settings","sort","class","avatarStatic","instanceURL","onClick","opener","composerState","Status","replyToStatusMonthsAgo","_Fragment","formData","previewMode","option","media","pointerEvents","opacity","mediaPromises","attachment","description","params2","removeNullUndefined","res","results","some","hasNoDescriptions","params","saveStatus","newStatus","allSettled","e2","media_attributes","in_reply_to_id","Textarea","onChange","limit","action","title","icon","name","MediaAttachment","attachments","newAttachments","required","fileID","performSearch","q","v1","search","resolve","v2","fetch","onTrigger","defaultSearchTerm","newPoll","setPoll","onDescriptionChange","i","accept","multiple","setShowGIFPicker","Array","Loader","CharCountMeter","disabled","MentionModal","socialAddress","textarea","textBeforeMention","spaceAfterMention","spaceBeforeMention","textAfterMention","newText","Modal","emojiShortcode","textBeforeEmoji","spaceBeforeEmoji","spaceAfterEmoji","textAfterEmoji","GIFPickerModal","alt_text","showToast","blob","onSelect","theToast","offsetHeight","scrollHeight","clientHeight","height","visibleEmojis","searcher","getCustomEmojis","pmem","_getCustomEmojis","cacheKeyArg","keyArg","detectLangs","langs","lang","newMediaAttachments","setText","ref","props","searcherRef","r","emojis","textExpanderRef","textExpanderTextRef","text2","emoji","shortcode","encodeHTML","forwardRef","html","textareaProps","handleChange","total","history","cur","matched","handleValue","more","searchResults","v","displayName","handleCommited","shortenNumber","slowHighlightPerf","composeHighlightRef","start","end","debouncedAutoDetectLanguage","useDebouncedCallback","dom","mark","Event","resizeObserver","throttleHighlightText","bullet","postSpaces","anything","lastLine","innerHTML","number","preSpaces","newBullet","pos","innerText","autoResizeTextarea","dir","rows","cols","onKeyDown","hidden","charCount","leftChars","ctrlKey","setRangeText","setSelectionRange","prettyBytes","bytes","unitIndex","units","scaleDimension","newWidth","scalingFactor","newHeight","onInput","onRemove","supportsEdit","supports","onScroll","checkMaxError","configuration","getCurrentInstanceConfiguration","snapStates","setImageMatrix","imageMatrix","setMaxError","matrix","Math","videoMatrix","setDescription","suffixType","subtype","debouncedOnDescriptionChange","timer","maxError","details","toastRef","maxErrorText","err","type2","imageSizeLimit2","imageSize","imageMatrixLimit2","showModal","videoSize","clearTimeout","videoSizeLimit2","descTextarea","videoMatrix2","videoMatrixLimit2","autoCapitalize","autoComplete","naturalWidth","naturalHeight","maxErrorToast","setVideoMatrix","videoWidth","videoHeight","setShowModal","tabIndex","src","onLoad","playsinline","onLoadedMetadata","Menu2","body","response","MenuItem","menuButton","localeCode2Text","append","Poll","checked","label","maxlength","placeholder","str","char","obj","accounts2","relationships","fetchRelationships","relationshipsMap","setRelationshipsMap","filter","setAccounts","loadRelationships","loadAccounts","inputRef","filterShortcodes","searchTerm","bLower","aStartsWith","bStartsWith","aContains","bothContain","bContains","selectedAccount","accounts","selectedIndex","selectAccount","listRef","setSelectedIndex","selectedItem","term","debouncedLoadAccounts","enableOnFormTags","AccountBlock","relationship","inline","customEmojis","setCustomEmojis","onSubmit","recentlyUsedCustomEmojis","autocorrect","customEmojisList","othersCat","emojisCat","useCallback","_c","scrollableRef","setMatches","onFind","abrupt","onSelectEmoji","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","emoji2","customEmojisCatList","category","matches","CustomEmojiButton","queueMicrotask","splice","CustomEmojisList","setMax","showMore","memo","showCode","parent","rect","selfRect","targetClassList","addEdges","GIFS_PER_PAGE","setResults","qRef","closest","getBoundingClientRect","remove","staticUrl","loading","debouncedOnInput","currentOffset","gif","fixed_height_downsampled","original","pagination","fixed_height_small","fixed_height","theImage","urlObj","strippedWebP","webp","webpObj","url2","theURL","mp4","urlObj2","strippedURL2","strippedURL","images","fetchGIFs","parse"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}