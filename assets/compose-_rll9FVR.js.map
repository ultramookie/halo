{"version":3,"file":"compose-_rll9FVR.js","sources":["../../node_modules/@github/combobox-nav/dist/index.js","../../node_modules/@github/text-expander-element/dist/index.js","../../node_modules/ansi-regex/index.js","../../node_modules/strip-ansi/index.js","../../node_modules/string-length/index.js","../../src/assets/powered-by-giphy.svg","../../src/components/compose.jsx"],"sourcesContent":["export default class Combobox {\n    constructor(input, list, { tabInsertsSuggestions, defaultFirstOption } = {}) {\n        this.input = input;\n        this.list = list;\n        this.tabInsertsSuggestions = tabInsertsSuggestions !== null && tabInsertsSuggestions !== void 0 ? tabInsertsSuggestions : true;\n        this.defaultFirstOption = defaultFirstOption !== null && defaultFirstOption !== void 0 ? defaultFirstOption : false;\n        this.isComposing = false;\n        if (!list.id) {\n            list.id = `combobox-${Math.random().toString().slice(2, 6)}`;\n        }\n        this.ctrlBindings = !!navigator.userAgent.match(/Macintosh/);\n        this.keyboardEventHandler = event => keyboardBindings(event, this);\n        this.compositionEventHandler = event => trackComposition(event, this);\n        this.inputHandler = this.clearSelection.bind(this);\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-controls', list.id);\n        input.setAttribute('aria-expanded', 'false');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-haspopup', 'listbox');\n    }\n    destroy() {\n        this.clearSelection();\n        this.stop();\n        this.input.removeAttribute('role');\n        this.input.removeAttribute('aria-controls');\n        this.input.removeAttribute('aria-expanded');\n        this.input.removeAttribute('aria-autocomplete');\n        this.input.removeAttribute('aria-haspopup');\n    }\n    start() {\n        this.input.setAttribute('aria-expanded', 'true');\n        this.input.addEventListener('compositionstart', this.compositionEventHandler);\n        this.input.addEventListener('compositionend', this.compositionEventHandler);\n        this.input.addEventListener('input', this.inputHandler);\n        this.input.addEventListener('keydown', this.keyboardEventHandler);\n        this.list.addEventListener('click', commitWithElement);\n        this.indicateDefaultOption();\n    }\n    stop() {\n        this.clearSelection();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.input.removeEventListener('compositionstart', this.compositionEventHandler);\n        this.input.removeEventListener('compositionend', this.compositionEventHandler);\n        this.input.removeEventListener('input', this.inputHandler);\n        this.input.removeEventListener('keydown', this.keyboardEventHandler);\n        this.list.removeEventListener('click', commitWithElement);\n    }\n    indicateDefaultOption() {\n        var _a;\n        if (this.defaultFirstOption) {\n            (_a = Array.from(this.list.querySelectorAll('[role=\"option\"]:not([aria-disabled=\"true\"])'))\n                .filter(visible)[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('data-combobox-option-default', 'true');\n        }\n    }\n    navigate(indexDiff = 1) {\n        const focusEl = Array.from(this.list.querySelectorAll('[aria-selected=\"true\"]')).filter(visible)[0];\n        const els = Array.from(this.list.querySelectorAll('[role=\"option\"]')).filter(visible);\n        const focusIndex = els.indexOf(focusEl);\n        if ((focusIndex === els.length - 1 && indexDiff === 1) || (focusIndex === 0 && indexDiff === -1)) {\n            this.clearSelection();\n            this.input.focus();\n            return;\n        }\n        let indexOfItem = indexDiff === 1 ? 0 : els.length - 1;\n        if (focusEl && focusIndex >= 0) {\n            const newIndex = focusIndex + indexDiff;\n            if (newIndex >= 0 && newIndex < els.length)\n                indexOfItem = newIndex;\n        }\n        const target = els[indexOfItem];\n        if (!target)\n            return;\n        for (const el of els) {\n            el.removeAttribute('data-combobox-option-default');\n            if (target === el) {\n                this.input.setAttribute('aria-activedescendant', target.id);\n                target.setAttribute('aria-selected', 'true');\n                scrollTo(this.list, target);\n            }\n            else {\n                el.removeAttribute('aria-selected');\n            }\n        }\n    }\n    clearSelection() {\n        this.input.removeAttribute('aria-activedescendant');\n        for (const el of this.list.querySelectorAll('[aria-selected=\"true\"]')) {\n            el.removeAttribute('aria-selected');\n        }\n        this.indicateDefaultOption();\n    }\n}\nfunction keyboardBindings(event, combobox) {\n    if (event.shiftKey || event.metaKey || event.altKey)\n        return;\n    if (!combobox.ctrlBindings && event.ctrlKey)\n        return;\n    if (combobox.isComposing)\n        return;\n    switch (event.key) {\n        case 'Enter':\n            if (commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Tab':\n            if (combobox.tabInsertsSuggestions && commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Escape':\n            combobox.clearSelection();\n            break;\n        case 'ArrowDown':\n            combobox.navigate(1);\n            event.preventDefault();\n            break;\n        case 'ArrowUp':\n            combobox.navigate(-1);\n            event.preventDefault();\n            break;\n        case 'n':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(1);\n                event.preventDefault();\n            }\n            break;\n        case 'p':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(-1);\n                event.preventDefault();\n            }\n            break;\n        default:\n            if (event.ctrlKey)\n                break;\n            combobox.clearSelection();\n    }\n}\nfunction commitWithElement(event) {\n    if (!(event.target instanceof Element))\n        return;\n    const target = event.target.closest('[role=\"option\"]');\n    if (!target)\n        return;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return;\n    fireCommitEvent(target);\n}\nfunction commit(input, list) {\n    const target = list.querySelector('[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]');\n    if (!target)\n        return false;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return true;\n    target.click();\n    return true;\n}\nfunction fireCommitEvent(target) {\n    target.dispatchEvent(new CustomEvent('combobox-commit', { bubbles: true }));\n}\nfunction visible(el) {\n    return (!el.hidden &&\n        !(el instanceof HTMLInputElement && el.type === 'hidden') &&\n        (el.offsetWidth > 0 || el.offsetHeight > 0));\n}\nfunction trackComposition(event, combobox) {\n    combobox.isComposing = event.type === 'compositionstart';\n    const list = document.getElementById(combobox.input.getAttribute('aria-controls') || '');\n    if (!list)\n        return;\n    combobox.clearSelection();\n}\nfunction scrollTo(container, target) {\n    if (!inViewport(container, target)) {\n        container.scrollTop = target.offsetTop;\n    }\n}\nfunction inViewport(container, element) {\n    const scrollTop = container.scrollTop;\n    const containerBottom = scrollTop + container.clientHeight;\n    const top = element.offsetTop;\n    const bottom = top + element.clientHeight;\n    return top >= scrollTop && bottom <= containerBottom;\n}\n","import Combobox from '@github/combobox-nav';\n\nconst boundary = /\\s|\\(|\\[/;\nfunction query(text, key, cursor, { multiWord, lookBackIndex, lastMatchPosition } = {\n    multiWord: false,\n    lookBackIndex: 0,\n    lastMatchPosition: null\n}) {\n    let keyIndex = text.lastIndexOf(key, cursor - 1);\n    if (keyIndex === -1)\n        return;\n    if (keyIndex < lookBackIndex)\n        return;\n    if (multiWord) {\n        if (lastMatchPosition != null) {\n            if (lastMatchPosition === keyIndex)\n                return;\n            keyIndex = lastMatchPosition - key.length;\n        }\n        const charAfterKey = text[keyIndex + 1];\n        if (charAfterKey === ' ' && cursor >= keyIndex + key.length + 1)\n            return;\n        const newLineIndex = text.lastIndexOf('\\n', cursor - 1);\n        if (newLineIndex > keyIndex)\n            return;\n        const dotIndex = text.lastIndexOf('.', cursor - 1);\n        if (dotIndex > keyIndex)\n            return;\n    }\n    else {\n        const spaceIndex = text.lastIndexOf(' ', cursor - 1);\n        if (spaceIndex > keyIndex)\n            return;\n    }\n    const pre = text[keyIndex - 1];\n    if (pre && !boundary.test(pre))\n        return;\n    const queryString = text.substring(keyIndex + key.length, cursor);\n    return {\n        text: queryString,\n        position: keyIndex + key.length\n    };\n}\n\nconst properties = ['position:absolute;', 'overflow:auto;', 'word-wrap:break-word;', 'top:0px;', 'left:-9999px;'];\nconst propertyNamesToCopy = [\n    'box-sizing',\n    'font-family',\n    'font-size',\n    'font-style',\n    'font-variant',\n    'font-weight',\n    'height',\n    'letter-spacing',\n    'line-height',\n    'max-height',\n    'min-height',\n    'padding-bottom',\n    'padding-left',\n    'padding-right',\n    'padding-top',\n    'border-bottom',\n    'border-left',\n    'border-right',\n    'border-top',\n    'text-decoration',\n    'text-indent',\n    'text-transform',\n    'width',\n    'word-spacing'\n];\nconst mirrorMap = new WeakMap();\nfunction textFieldMirror(textField, markerPosition) {\n    const nodeName = textField.nodeName.toLowerCase();\n    if (nodeName !== 'textarea' && nodeName !== 'input') {\n        throw new Error('expected textField to a textarea or input');\n    }\n    let mirror = mirrorMap.get(textField);\n    if (mirror && mirror.parentElement === textField.parentElement) {\n        mirror.innerHTML = '';\n    }\n    else {\n        mirror = document.createElement('div');\n        mirrorMap.set(textField, mirror);\n        const style = window.getComputedStyle(textField);\n        const props = properties.slice(0);\n        if (nodeName === 'textarea') {\n            props.push('white-space:pre-wrap;');\n        }\n        else {\n            props.push('white-space:nowrap;');\n        }\n        for (let i = 0, len = propertyNamesToCopy.length; i < len; i++) {\n            const name = propertyNamesToCopy[i];\n            props.push(`${name}:${style.getPropertyValue(name)};`);\n        }\n        mirror.style.cssText = props.join(' ');\n    }\n    const marker = document.createElement('span');\n    marker.style.cssText = 'position: absolute;';\n    marker.innerHTML = '&nbsp;';\n    let before;\n    let after;\n    if (typeof markerPosition === 'number') {\n        let text = textField.value.substring(0, markerPosition);\n        if (text) {\n            before = document.createTextNode(text);\n        }\n        text = textField.value.substring(markerPosition);\n        if (text) {\n            after = document.createTextNode(text);\n        }\n    }\n    else {\n        const text = textField.value;\n        if (text) {\n            before = document.createTextNode(text);\n        }\n    }\n    if (before) {\n        mirror.appendChild(before);\n    }\n    mirror.appendChild(marker);\n    if (after) {\n        mirror.appendChild(after);\n    }\n    if (!mirror.parentElement) {\n        if (!textField.parentElement) {\n            throw new Error('textField must have a parentElement to mirror');\n        }\n        textField.parentElement.insertBefore(mirror, textField);\n    }\n    mirror.scrollTop = textField.scrollTop;\n    mirror.scrollLeft = textField.scrollLeft;\n    return { mirror, marker };\n}\n\nfunction textFieldSelectionPosition(field, index = field.selectionEnd) {\n    const { mirror, marker } = textFieldMirror(field, index);\n    const mirrorRect = mirror.getBoundingClientRect();\n    const markerRect = marker.getBoundingClientRect();\n    setTimeout(() => {\n        mirror.remove();\n    }, 5000);\n    return {\n        top: markerRect.top - mirrorRect.top,\n        left: markerRect.left - mirrorRect.left\n    };\n}\n\nconst states = new WeakMap();\nfunction isTopLayer(el) {\n    try {\n        if (el.matches(':popover-open'))\n            return true;\n    }\n    catch (_a) {\n    }\n    try {\n        if (el.matches('dialog:modal'))\n            return true;\n    }\n    catch (_b) {\n    }\n    try {\n        if (el.matches(':fullscreen'))\n            return true;\n    }\n    catch (_c) {\n    }\n    return false;\n}\nclass TextExpander {\n    constructor(expander, input) {\n        this.expander = expander;\n        this.input = input;\n        this.combobox = null;\n        this.menu = null;\n        this.match = null;\n        this.justPasted = false;\n        this.lookBackIndex = 0;\n        this.oninput = this.onInput.bind(this);\n        this.onpaste = this.onPaste.bind(this);\n        this.onkeydown = this.onKeydown.bind(this);\n        this.oncommit = this.onCommit.bind(this);\n        this.onmousedown = this.onMousedown.bind(this);\n        this.onblur = this.onBlur.bind(this);\n        this.interactingWithList = false;\n        input.addEventListener('paste', this.onpaste);\n        input.addEventListener('input', this.oninput);\n        input.addEventListener('keydown', this.onkeydown);\n        input.addEventListener('blur', this.onblur);\n    }\n    destroy() {\n        this.input.removeEventListener('paste', this.onpaste);\n        this.input.removeEventListener('input', this.oninput);\n        this.input.removeEventListener('keydown', this.onkeydown);\n        this.input.removeEventListener('blur', this.onblur);\n    }\n    dismissMenu() {\n        if (this.deactivate()) {\n            this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n        }\n    }\n    activate(match, menu) {\n        var _a, _b;\n        if (this.input !== document.activeElement && this.input !== ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement)) {\n            return;\n        }\n        this.deactivate();\n        this.menu = menu;\n        if (!menu.id)\n            menu.id = `text-expander-${Math.floor(Math.random() * 100000).toString()}`;\n        this.expander.append(menu);\n        this.combobox = new Combobox(this.input, menu);\n        this.expander.dispatchEvent(new Event('text-expander-activate'));\n        let { top, left } = textFieldSelectionPosition(this.input, match.position);\n        if (isTopLayer(menu)) {\n            const rect = this.input.getBoundingClientRect();\n            top += rect.top;\n            left += rect.left;\n            if (getComputedStyle(menu).position === 'absolute') {\n                top += window.scrollY;\n                left += window.scrollX;\n            }\n        }\n        menu.style.top = `${top}px`;\n        menu.style.left = `${left}px`;\n        this.combobox.start();\n        menu.addEventListener('combobox-commit', this.oncommit);\n        menu.addEventListener('mousedown', this.onmousedown);\n        this.combobox.navigate(1);\n    }\n    deactivate() {\n        const menu = this.menu;\n        if (!menu || !this.combobox)\n            return false;\n        this.expander.dispatchEvent(new Event('text-expander-deactivate'));\n        this.menu = null;\n        menu.removeEventListener('combobox-commit', this.oncommit);\n        menu.removeEventListener('mousedown', this.onmousedown);\n        this.combobox.destroy();\n        this.combobox = null;\n        menu.remove();\n        return true;\n    }\n    onCommit({ target }) {\n        var _a;\n        const item = target;\n        if (!(item instanceof HTMLElement))\n            return;\n        if (!this.combobox)\n            return;\n        const match = this.match;\n        if (!match)\n            return;\n        const beginning = this.input.value.substring(0, match.position - match.key.length);\n        const remaining = this.input.value.substring(match.position + match.text.length);\n        const detail = { item, key: match.key, value: null, continue: false };\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-value', { cancelable: true, detail }));\n        if (canceled)\n            return;\n        if (!detail.value)\n            return;\n        let suffix = (_a = this.expander.getAttribute('suffix')) !== null && _a !== void 0 ? _a : ' ';\n        if (detail.continue) {\n            suffix = '';\n        }\n        const value = `${detail.value}${suffix}`;\n        this.input.value = beginning + value + remaining;\n        const cursor = beginning.length + value.length;\n        this.deactivate();\n        this.input.focus({\n            preventScroll: true\n        });\n        this.input.selectionStart = cursor;\n        this.input.selectionEnd = cursor;\n        if (!detail.continue) {\n            this.lookBackIndex = cursor;\n            this.match = null;\n        }\n        this.expander.dispatchEvent(new CustomEvent('text-expander-committed', { cancelable: false, detail: { input: this.input } }));\n    }\n    onBlur() {\n        if (this.interactingWithList) {\n            this.interactingWithList = false;\n            return;\n        }\n        this.deactivate();\n    }\n    onPaste() {\n        this.justPasted = true;\n    }\n    async onInput() {\n        if (this.justPasted) {\n            this.justPasted = false;\n            return;\n        }\n        const match = this.findMatch();\n        if (match) {\n            this.match = match;\n            const menu = await this.notifyProviders(match);\n            if (!this.match)\n                return;\n            if (menu) {\n                this.activate(match, menu);\n            }\n            else {\n                this.deactivate();\n            }\n        }\n        else {\n            this.match = null;\n            this.deactivate();\n        }\n    }\n    findMatch() {\n        const cursor = this.input.selectionEnd || 0;\n        const text = this.input.value;\n        if (cursor <= this.lookBackIndex) {\n            this.lookBackIndex = cursor - 1;\n        }\n        for (const { key, multiWord } of this.expander.keys) {\n            const found = query(text, key, cursor, {\n                multiWord,\n                lookBackIndex: this.lookBackIndex,\n                lastMatchPosition: this.match ? this.match.position : null\n            });\n            if (found) {\n                return { text: found.text, key, position: found.position };\n            }\n        }\n    }\n    async notifyProviders(match) {\n        const providers = [];\n        const provide = (result) => providers.push(result);\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-change', { cancelable: true, detail: { provide, text: match.text, key: match.key } }));\n        if (canceled)\n            return;\n        const all = await Promise.all(providers);\n        const fragments = all.filter(x => x.matched).map(x => x.fragment);\n        return fragments[0];\n    }\n    onMousedown() {\n        this.interactingWithList = true;\n    }\n    onKeydown(event) {\n        if (event.key === 'Escape') {\n            this.match = null;\n            if (this.deactivate()) {\n                this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        }\n    }\n}\nclass TextExpanderElement extends HTMLElement {\n    get keys() {\n        const keysAttr = this.getAttribute('keys');\n        const keys = keysAttr ? keysAttr.split(' ') : [];\n        const multiWordAttr = this.getAttribute('multiword');\n        const multiWord = multiWordAttr ? multiWordAttr.split(' ') : [];\n        const globalMultiWord = multiWord.length === 0 && this.hasAttribute('multiword');\n        return keys.map(key => ({ key, multiWord: globalMultiWord || multiWord.includes(key) }));\n    }\n    connectedCallback() {\n        const input = this.querySelector('input[type=\"text\"], textarea');\n        if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement))\n            return;\n        const state = new TextExpander(this, input);\n        states.set(this, state);\n    }\n    disconnectedCallback() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.destroy();\n        states.delete(this);\n    }\n    dismiss() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.dismissMenu();\n    }\n}\n\nif (!window.customElements.get('text-expander')) {\n    window.TextExpanderElement = TextExpanderElement;\n    window.customElements.define('text-expander', TextExpanderElement);\n}\n\nexport default TextExpanderElement;\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n","import stripAnsi from 'strip-ansi';\n\nconst segmenter = new Intl.Segmenter();\n\nexport default function stringLength(string, {countAnsiEscapeCodes = false} = {}) {\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tlet length = 0;\n\n\tfor (const _ of segmenter.segment(string)) { // eslint-disable-line no-unused-vars\n\t\tlength++;\n\t}\n\n\treturn length;\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20version='1.0'%20viewBox='0%200%20641%20223'%3e%3cpath%20fill='%23aaa'%20d='M86%20214c-9-1-17-4-24-8l-6-3-5-5-5-4-4-6-4-6-3-8-2-8v-27l2-9%203-9%204-6%204-6%205-5%205-5%207-3%206-4%207-2%207-2%2012-1h12l7%201%208%202%207%204%207%203%205%205%205%204-10%2010-10%209-4-3-10-5-5-1H88l-5%202-6%203-3%204-4%204-2%205-2%206v6l-1%207%201%207%202%207%203%205%202%204%204%203%204%203%205%202%206%202h9l10-1%205-2%206-3v-16H91v-27h59v54l-1%203-2%203-5%204-4%204-5%203-5%202-8%202-8%202-10%201H92l-6-1zm266-62V91h34v46h44V91h34v121h-34v-46h-44v46h-34v-61zm-182-1V90h34v121h-34v-60zm59-1V90h35l36%201%205%202c3%200%208%202%2010%204l5%202%204%205%205%204%203%207%203%207%201%2013v13l-4%206-3%207-4%204-5%205-5%202-5%203-6%202-5%201-18%201h-18v32h-34v-61zm67-2%203-2%202-4%202-5v-5l-2-4-2-4-3-2-3-3h-30v31h30l3-2zm226%2039v-24l-8-12-18-28a1751%201751%200%200%200-20-31v-2h39l7%2012%2012%2021%206%209%2013-21%2013-21h38v2l-41%2061-7%2010v48h-34v-24zM109%2066l-4-1-5-5-5-4-1-5-3-9v-5l1-5c2-7%203-10%208-15l4-4%207-2%207-2h7l6%201%205%202%205%202%203%204%204%203%202%206%202%205v13l-2%205-2%206-4%204-3%203-5%202-4%202-9%201h-9l-5-2zm22-11%204-2%203-4%202-5V34l-2-4-2-4-3-2-4-3-5-1h-6l-4%202-5%202-2%204-3%205-1%203v4l1%205%202%205%202%202%205%203%204%202h10l4-2zM37%2039V11h33l3%201%203%202%204%203%203%203%201%205%201%204v5l-1%204-3%204-3%205-4%201-3%202-11%201H49v16H37V39zm31%200%203-2%201-2%201-2v-4l-1-3-3-2-2-2H49v18h15l4-1zm107%2025a512%20512%200%200%200-19-53h14l4%2014%206%2019%201%204%201-1%207-19%205-17h9l6%2019%207%2018v-1l2-6%205-17%204-13h14v1l-4%2012-16%2041v2h-5l-5-1-6-15-6-15-1%201-3%207-6%2015-2%208h-11l-1-3zm74-25V11h42v11h-29v2l-1%205v4h29v11h-28v11h2l15%201h13v11h-43V39zm55%200V11h33l5%203%205%202%202%204%202%205v10l-2%203-1%204-5%203-5%203%205%205%208%2010%203%204h-14l-7-9-8-10h-9v19h-12V39zm33-3%202-3v-6l-3-3-2-3h-18v16h1v1h17l2-2zm26%203V11h42v11h-29l-1%206v5h29v11h-28v5l-1%205%201%201v1h30v11h-43V39zm54%200V11h17l18%201%204%202%205%203%202%204%203%204%202%206%201%206v5c-1%206-3%2012-6%2015l-3%204-5%203-5%202-17%201h-16V39zm33%2014%205-5%202-3v-6l-1-6-1-3-1-3-4-3-3-2h-5l-6-1-3%201h-3v34h9l8-1%203-2zm50-14V11h34l5%202%204%202%202%203%202%203v9l-2%202-3%204-1%201%203%203%203%204%201%203%201%204-1%204-1%204-3%203-3%203-5%201-5%201h-31V39zm34%2015%202-1v-6l-2-2-2-2h-20v13h20l2-2zm-3-22%204-2v-6l-2-1-2-2h-19v12h16l4-1zm42%2024V45l-6-9-11-17-5-8h15l4%208%207%2011%202%203%207-11%207-11h14l-11%2016-11%2017v23h-12V56z'/%3e%3c/svg%3e\"","import './compose.css';\n\nimport '@github/text-expander-element';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { deepEqual } from 'fast-equals';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport poweredByGiphyURL from '../assets/powered-by-giphy.svg';\n\nimport Menu2 from '../components/menu2';\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport localeMatch from '../utils/locale-match';\nimport openCompose from '../utils/open-compose';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n  getCurrentInstanceConfiguration,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useCloseWatcher from '../utils/useCloseWatcher';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst {\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\nconst MENTION_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\n  'uig',\n);\n\n// AI-generated, all other regexes are too complicated\nconst HASHTAG_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\n  'ig',\n);\n\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\nconst SCAN_RE = new RegExp(\n  `([^A-Za-z0-9_:\\\\n]|^)(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\n  'g',\n);\n\nconst segmenter = new Intl.Segmenter();\nfunction highlightText(text, { maxCharacters = Infinity }) {\n  // Accept text string, return formatted HTML string\n  // Escape all HTML special characters\n  let html = text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;');\n\n  // Exceeded characters limit\n  const { composerCharacterCount } = states;\n  if (composerCharacterCount > maxCharacters) {\n    // Highlight exceeded characters\n    let withinLimitHTML = '',\n      exceedLimitHTML = '';\n    const htmlSegments = segmenter.segment(html);\n    for (const { segment, index } of htmlSegments) {\n      if (index < maxCharacters) {\n        withinLimitHTML += segment;\n      } else {\n        exceedLimitHTML += segment;\n      }\n    }\n    if (exceedLimitHTML) {\n      exceedLimitHTML =\n        '<mark class=\"compose-highlight-exceeded\">' +\n        exceedLimitHTML +\n        '</mark>';\n    }\n    return withinLimitHTML + exceedLimitHTML;\n  }\n\n  return html\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\n    .replace(\n      SCAN_RE,\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\n    ); // Emoji shortcodes\n}\n\nconst rtf = new Intl.RelativeTimeFormat();\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const configuration = getCurrentInstanceConfiguration();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: {\n      maxCharacters,\n      maxMediaAttachments,\n      charactersReservedPerUrl,\n    } = {},\n    mediaAttachments: {\n      supportedMimeTypes = [],\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n    polls: {\n      maxOptions,\n      maxCharactersPerOption,\n      maxExpiration,\n      minExpiration,\n    } = {},\n  } = configuration || {};\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      if (!textareaRef.current) return;\n      // status starts with newline, focus on first position\n      if (draftStatus?.status?.startsWith?.('\\n')) {\n        textareaRef.current.selectionStart = 0;\n        textareaRef.current.selectionEnd = 0;\n      }\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility']\n          : visibility,\n      );\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive && !!spoilerText);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses\n            .$select(editStatus.id)\n            .source.fetch();\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          if (composablePoll) setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility']);\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language']);\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!value && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n      ignoreEventWhen: (e) => {\n        const modals = document.querySelectorAll('#modal-container > *');\n        const hasModal = !!modals;\n        const hasOnlyComposer =\n          modals.length === 1 && modals[0].querySelector('#compose-container');\n        return hasModal && !hasOnlyComposer;\n      },\n    },\n  );\n  useCloseWatcher(() => {\n    if (!standalone && confirmClose()) {\n      onClose();\n    }\n  }, [standalone, confirmClose, onClose]);\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\n      !canClose()\n    ) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n  const [showGIFPicker, setShowGIFPicker] = useState(false);\n\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\n    const topLanguages = [];\n    const restLanguages = [];\n    const { contentTranslationHideLanguages = [] } = states.settings;\n    supportedLanguages.forEach((l) => {\n      const [code] = l;\n      if (\n        code === language ||\n        code === prevLanguage.current ||\n        code === DEFAULT_LANG ||\n        contentTranslationHideLanguages.includes(code)\n      ) {\n        topLanguages.push(l);\n      } else {\n        restLanguages.push(l);\n      }\n    });\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\n      if (codeA === language) return -1;\n      if (codeB === language) return 1;\n      return commonA.localeCompare(commonB);\n    });\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\n      commonA.localeCompare(commonB),\n    );\n    return [topLanguages, restLanguages];\n  }, [language]);\n\n  const replyToStatusMonthsAgo = useMemo(\n    () =>\n      !!replyToStatus?.createdAt &&\n      Math.floor(\n        (Date.now() - new Date(replyToStatus.createdAt)) /\n          (1000 * 60 * 60 * 24 * 30),\n      ),\n    [replyToStatus],\n  );\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n              useAvatarStatic\n            />\n          )}\n          {!standalone ? (\n            <span>\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                    },\n                  });\n\n                  if (!newWin) {\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt=\"Pop out\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert('Looks like you closed the parent window.');\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    const yes = confirm(\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\n                    );\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      window.opener.__STATES__.showCompose = true;\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt=\"Pop in\" />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              Replying to @\n              {replyToStatus.account.acct || replyToStatus.account.username}\n              &rsquo;s post\n              {replyToStatusMonthsAgo >= 3 && (\n                <>\n                  {' '}\n                  (\n                  <strong>\n                    {rtf.format(-replyToStatusMonthsAgo, 'month')}\n                  </strong>\n                  )\n                </>\n              )}\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">Editing source post</div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText } = entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert('Poll must have at least 2 options');\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert('Some poll choices are empty');\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  'Some media have no descriptions. Continue?',\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.media.create(params).then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || `Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses\n                    .$select(editStatus.id)\n                    .update(params);\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      requestInit: {\n                        headers: {\n                          'Idempotency-Key': UID.current,\n                        },\n                      },\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                setUIState('default');\n\n                // Close\n                onClose({\n                  // type: post, reply, edit\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\n                  newStatus,\n                  instance,\n                });\n              } catch (e) {\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder=\"Content warning\"\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title=\"Content warning or sensitive media\"\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={`Visibility: ${visibility}`}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n              >\n                <option value=\"public\">\n                  Public <Icon icon=\"earth\" />\n                </option>\n                <option value=\"unlisted\">Unlisted</option>\n                <option value=\"private\">Followers only</option>\n                <option value=\"direct\">Private mention</option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? 'Post your reply'\n                : editStatus\n                ? 'Edit your post'\n                : 'What are you doing?'\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              const { type, q, limit } = params;\n              if (type === 'accounts') {\n                return masto.v1.accounts.search.list({\n                  q,\n                  limit,\n                  resolve: false,\n                });\n              }\n              return masto.v2.search.fetch(params);\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i].description = value;\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>Mark media as sensitive</span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          <div\n            class=\"toolbar wrap\"\n            style={{\n              justifyContent: 'flex-end',\n            }}\n          >\n            <span>\n              <label class=\"toolbar-button\">\n                <input\n                  type=\"file\"\n                  accept={supportedMimeTypes.join(',')}\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onChange={(e) => {\n                    const files = e.target.files;\n                    if (!files) return;\n\n                    const mediaFiles = Array.from(files).map((file) => ({\n                      file,\n                      type: file.type,\n                      size: file.size,\n                      url: URL.createObjectURL(file),\n                      id: null, // indicate uploaded state\n                      description: null,\n                    }));\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                    // Validate max media attachments\n                    if (\n                      mediaAttachments.length + mediaFiles.length >\n                      maxMediaAttachments\n                    ) {\n                      alert(\n                        `You can only attach up to ${maxMediaAttachments} files.`,\n                      );\n                    } else {\n                      setMediaAttachments((attachments) => {\n                        return attachments.concat(mediaFiles);\n                      });\n                    }\n                    // Reset\n                    e.target.value = '';\n                  }}\n                />\n                <Icon icon=\"attachment\" />\n              </label>{' '}\n              {/* If maxOptions is not defined or defined and is greater than 1, show poll button */}\n              {maxOptions == null ||\n                (maxOptions > 1 && (\n                  <>\n                    <button\n                      type=\"button\"\n                      class=\"toolbar-button\"\n                      disabled={\n                        uiState === 'loading' ||\n                        !!poll ||\n                        !!mediaAttachments.length\n                      }\n                      onClick={() => {\n                        setPoll({\n                          options: ['', ''],\n                          expiresIn: 24 * 60 * 60, // 1 day\n                          multiple: false,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"poll\" alt=\"Add poll\" />\n                    </button>{' '}\n                  </>\n                ))}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowEmoji2Picker(true);\n                }}\n              >\n                <Icon icon=\"emoji2\" />\n              </button>\n              {!!states.settings.composerGIFPicker && (\n                <button\n                  type=\"button\"\n                  class=\"toolbar-button gif-picker-button\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    setShowGIFPicker(true);\n                  }}\n                >\n                  <span>GIF</span>\n                </button>\n              )}\n            </span>\n            <div class=\"spacer\" />\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ? 'highlight' : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                {topSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n                <hr />\n                {restSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n              </select>\n            </label>{' '}\n            <button\n              type=\"submit\"\n              class=\"large\"\n              disabled={uiState === 'loading'}\n            >\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showEmoji2Picker && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEmoji2Picker(false);\n            }\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            onSelect={(emoji) => {\n              const emojiWithSpace = ` ${emoji} `;\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const newText =\n                text.slice(0, selectionStart) +\n                emojiWithSpace +\n                text.slice(selectionEnd);\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiWithSpace.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n      {showGIFPicker && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowGIFPicker(false);\n            }\n          }}\n        >\n          <GIFPickerModal\n            onClose={() => setShowGIFPicker(false)}\n            onSelect={({ url, type, alt_text }) => {\n              console.log('GIF URL', url);\n              if (mediaAttachments.length >= maxMediaAttachments) {\n                alert(\n                  `You can only attach up to ${maxMediaAttachments} files.`,\n                );\n                return;\n              }\n              // Download the GIF and insert it as media attachment\n              (async () => {\n                let theToast;\n                try {\n                  theToast = showToast({\n                    text: 'Downloading GIF…',\n                    duration: -1,\n                  });\n                  const blob = await fetch(url, {\n                    referrerPolicy: 'no-referrer',\n                  }).then((res) => res.blob());\n                  const file = new File(\n                    [blob],\n                    type === 'video/mp4' ? 'video.mp4' : 'image.gif',\n                    {\n                      type,\n                    },\n                  );\n                  const newMediaAttachments = [\n                    ...mediaAttachments,\n                    {\n                      file,\n                      type,\n                      size: file.size,\n                      id: null,\n                      description: alt_text || '',\n                    },\n                  ];\n                  setMediaAttachments(newMediaAttachments);\n                  theToast?.hideToast?.();\n                } catch (err) {\n                  console.error(err);\n                  theToast?.hideToast?.();\n                  showToast('Failed to download GIF');\n                }\n              })();\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction autoResizeTextarea(textarea) {\n  if (!textarea) return;\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\n  if (offsetHeight < window.innerHeight) {\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\n    // No idea why it does that, will re-investigate in far future\n    const offset = offsetHeight - clientHeight;\n    const height = value ? scrollHeight + offset + 'px' : null;\n    textarea.style.height = height;\n  }\n}\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\n  // const snapStates = useSnapshot(states);\n  // const charCount = snapStates.composerCharacterCount;\n\n  const customEmojis = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        console.log({ emojis });\n        customEmojis.current = emojis;\n      } catch (e) {\n        // silent fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          const emojis = filterShortcodes(customEmojis.current, text);\n          let html = '';\n          emojis.forEach((emoji) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                :${encodeHTML(shortcode)}:\n              </li>`;\n          });\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: emojis.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type] || value;\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                  history,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  const total = history?.reduce?.(\n                    (acc, cur) => acc + +cur.uses,\n                    0,\n                  );\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\n                      ${\n                        total\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\n                          : ''\n                      }\n                    </li>\n                  `;\n                }\n                menu.innerHTML = html;\n              });\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        if (key === ':') {\n          e.detail.value = `:${item.dataset.value}:`;\n        } else {\n          e.detail.value = `${key}${item.dataset.value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n        // fire input event\n        if (ref.current) {\n          const event = new Event('input', { bubbles: true });\n          ref.current.dispatchEvent(event);\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Resize observer for textarea\n    const textarea = ref.current;\n    if (!textarea) return;\n    const resizeObserver = new ResizeObserver(() => {\n      // Get height of textarea, set height to textExpander\n      if (textExpanderRef.current) {\n        const { height } = textarea.getBoundingClientRect();\n        textExpanderRef.current.style.height = height + 'px';\n      }\n    });\n    resizeObserver.observe(textarea);\n  }, []);\n\n  const slowHighlightPerf = useRef(0); // increment if slow\n  const composeHighlightRef = useRef();\n  const throttleHighlightText = useThrottledCallback((text) => {\n    if (!composeHighlightRef.current) return;\n    if (slowHighlightPerf.current > 3) {\n      // After 3 times of lag, disable highlighting\n      composeHighlightRef.current.innerHTML = '';\n      composeHighlightRef.current = null; // Destroy the whole thing\n      throttleHighlightText?.cancel?.();\n      return;\n    }\n    let start;\n    let end;\n    if (slowHighlightPerf.current <= 3) start = Date.now();\n    composeHighlightRef.current.innerHTML =\n      highlightText(text, {\n        maxCharacters,\n      }) + '\\n';\n    if (slowHighlightPerf.current <= 3) end = Date.now();\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\n    if (start && end && end - start > 50) {\n      // if slow, increment\n      slowHighlightPerf.current++;\n    }\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\n  }, 500);\n\n  return (\n    <text-expander\n      ref={textExpanderRef}\n      keys=\"@ # :\"\n      class=\"compose-field-container\"\n    >\n      <textarea\n        class=\"compose-field\"\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onKeyDown={(e) => {\n          // Get line before cursor position after pressing 'Enter'\n          const { key, target } = e;\n          if (key === 'Enter' && !(e.ctrlKey || e.metaKey)) {\n            try {\n              const { value, selectionStart } = target;\n              const textBeforeCursor = value.slice(0, selectionStart);\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\n              if (lastLine) {\n                // If line starts with \"- \" or \"12. \"\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\n                  // insert \"- \" at cursor position\n                  const [_, preSpaces, bullet, postSpaces, anything] =\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\n                  if (anything) {\n                    e.preventDefault();\n                    const [number] = bullet.match(/\\d+/) || [];\n                    const newBullet = number ? `${+number + 1}.` : '-';\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\n                    target.setRangeText(text, selectionStart, selectionStart);\n                    const pos = selectionStart + text.length;\n                    target.setSelectionRange(pos, pos);\n                  } else {\n                    // trim the line before the cursor, then insert new line\n                    const pos = selectionStart - lastLine.length;\n                    target.setRangeText('', pos, selectionStart);\n                  }\n                  autoResizeTextarea(target);\n                  target.dispatchEvent(new Event('input'));\n                }\n              }\n            } catch (e) {\n              // silent fail\n              console.error(e);\n            }\n          }\n          if (composeHighlightRef.current) {\n            composeHighlightRef.current.scrollTop = target.scrollTop;\n          }\n        }}\n        onInput={(e) => {\n          const { target } = e;\n          const text = target.value;\n          setText(text);\n          autoResizeTextarea(target);\n          props.onInput?.(e);\n          throttleHighlightText(text);\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n        onScroll={(e) => {\n          if (composeHighlightRef.current) {\n            const { scrollTop } = e.target;\n            composeHighlightRef.current.scrollTop = scrollTop;\n          }\n        }}\n      />\n      <div\n        ref={composeHighlightRef}\n        class=\"compose-highlight\"\n        aria-hidden=\"true\"\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <span class=\"char-counter\" hidden />;\n  }\n  return (\n    <span\n      class=\"char-counter\"\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    >\n      <meter\n        class={`${\n          leftChars <= -10\n            ? 'explode'\n            : leftChars <= 0\n            ? 'danger'\n            : leftChars <= 20\n            ? 'warning'\n            : ''\n        }`}\n        value={charCount}\n        max={maxCharacters}\n      />\n      <span class=\"counter\">{leftChars}</span>\n    </span>\n  );\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { type, id, file } = attachment;\n  const url = useMemo(\n    () => (file ? URL.createObjectURL(file) : attachment.url),\n    [file, attachment.url],\n  );\n  console.log({ attachment });\n  const [description, setDescription] = useState(attachment.description);\n  const [suffixType, subtype] = type.split('/');\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n  useEffect(() => {\n    debouncedOnDescriptionChange(description);\n  }, [description, debouncedOnDescriptionChange]);\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled || uiState === 'loading'}\n          class={uiState === 'loading' ? 'loading' : ''}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            // debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  const toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img src={url} alt=\"\" />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video src={url} playsinline muted />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowModal(false);\n            }\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              <div class=\"media-form\">\n                {descTextarea}\n                <footer>\n                  {suffixType === 'image' &&\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\n                    !!states.settings.mediaAltGenerator &&\n                    !!IMG_ALT_API_URL && (\n                      <Menu2\n                        portal={{\n                          target: document.body,\n                        }}\n                        containerProps={{\n                          style: {\n                            zIndex: 1001,\n                          },\n                        }}\n                        align=\"center\"\n                        position=\"anchor\"\n                        overflow=\"auto\"\n                        menuButton={\n                          <button type=\"button\" title=\"More\" class=\"plain\">\n                            <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                          </button>\n                        }\n                      >\n                        <MenuItem\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            setUIState('loading');\n                            toastRef.current = showToast({\n                              text: 'Generating description. Please wait...',\n                              duration: -1,\n                            });\n                            // POST with multipart\n                            (async function () {\n                              try {\n                                const body = new FormData();\n                                body.append('image', file);\n                                const response = await fetch(IMG_ALT_API_URL, {\n                                  method: 'POST',\n                                  body,\n                                }).then((r) => r.json());\n                                if (response.error) {\n                                  throw new Error(response.error);\n                                }\n                                setDescription(response.description);\n                              } catch (e) {\n                                console.error(e);\n                                showToast(\n                                  `Failed to generate description${\n                                    e?.message ? `: ${e.message}` : ''\n                                  }`,\n                                );\n                              } finally {\n                                setUIState('default');\n                                toastRef.current?.hideToast?.();\n                              }\n                            })();\n                          }}\n                        >\n                          <Icon icon=\"sparkles2\" />\n                          <span>Generate description…</span>\n                        </MenuItem>\n                      </Menu2>\n                    )}\n                  <button\n                    type=\"button\"\n                    class=\"light block\"\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                    disabled={uiState === 'loading'}\n                  >\n                    Done\n                  </button>\n                </footer>\n              </div>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState({});\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        // Group emojis by category\n        const emojisCat = {\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n            emojis.find((e) => e.shortcode === emoji.shortcode),\n          ),\n        };\n        const othersCat = [];\n        emojis.forEach((emoji) => {\n          if (!emoji.visibleInPicker) return;\n          customEmojisList.current?.push?.(emoji);\n          if (!emoji.category) {\n            othersCat.push(emoji);\n            return;\n          }\n          if (!emojisCat[emoji.category]) {\n            emojisCat[emoji.category] = [];\n          }\n          emojisCat[emoji.category].push(emoji);\n        });\n        if (othersCat.length) {\n          emojisCat['--others--'] = othersCat;\n        }\n        setCustomEmojis(emojisCat);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <b>Custom emojis</b>{' '}\n        {uiState === 'loading' ? (\n          <Loader />\n        ) : (\n          <small class=\"insignificant\"> • {instance}</small>\n        )}\n      </header>\n      <main>\n        <div class=\"custom-emojis-list\">\n          {uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>Error loading custom emojis</p>\n            </div>\n          )}\n          {uiState === 'default' &&\n            Object.entries(customEmojis).map(\n              ([category, emojis]) =>\n                !!emojis?.length && (\n                  <>\n                    <div class=\"section-header\">\n                      {{\n                        '--recent--': 'Recently used',\n                        '--others--': 'Others',\n                      }[category] || category}\n                    </div>\n                    <section>\n                      {emojis.map((emoji) => (\n                        <button\n                          key={emoji}\n                          type=\"button\"\n                          class=\"plain4\"\n                          onClick={() => {\n                            onClose();\n                            requestAnimationFrame(() => {\n                              onSelect(`:${emoji.shortcode}:`);\n                            });\n                            let recentlyUsedCustomEmojis =\n                              store.account.get('recentlyUsedCustomEmojis') ||\n                              [];\n                            const recentlyUsedEmojiIndex =\n                              recentlyUsedCustomEmojis.findIndex(\n                                (e) => e.shortcode === emoji.shortcode,\n                              );\n                            if (recentlyUsedEmojiIndex !== -1) {\n                              // Move emoji to index 0\n                              recentlyUsedCustomEmojis.splice(\n                                recentlyUsedEmojiIndex,\n                                1,\n                              );\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                            } else {\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                              // Remove unavailable ones\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.filter((e) =>\n                                  customEmojisList.current?.find?.(\n                                    (emoji) => emoji.shortcode === e.shortcode,\n                                  ),\n                                );\n                              // Limit to 10\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.slice(0, 10);\n                            }\n\n                            // Store back\n                            store.account.set(\n                              'recentlyUsedCustomEmojis',\n                              recentlyUsedCustomEmojis,\n                            );\n                          }}\n                          title={`:${emoji.shortcode}:`}\n                        >\n                          <picture>\n                            {!!emoji.staticUrl && (\n                              <source\n                                srcset={emoji.staticUrl}\n                                media=\"(prefers-reduced-motion: reduce)\"\n                              />\n                            )}\n                            <img\n                              class=\"shortcode-emoji\"\n                              src={emoji.url || emoji.staticUrl}\n                              alt={emoji.shortcode}\n                              width=\"16\"\n                              height=\"16\"\n                              loading=\"lazy\"\n                              decoding=\"async\"\n                            />\n                          </picture>\n                        </button>\n                      ))}\n                    </section>\n                  </>\n                ),\n            )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst GIFS_PER_PAGE = 20;\nfunction GIFPickerModal({ onClose = () => {}, onSelect = () => {} }) {\n  const [uiState, setUIState] = useState('default');\n  const [results, setResults] = useState([]);\n  const formRef = useRef(null);\n  const qRef = useRef(null);\n  const currentOffset = useRef(0);\n  const scrollableRef = useRef(null);\n\n  function fetchGIFs({ offset }) {\n    console.log('fetchGIFs', { offset });\n    if (!qRef.current?.value) return;\n    setUIState('loading');\n    scrollableRef.current?.scrollTo?.({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n    (async () => {\n      try {\n        const query = {\n          api_key: GIPHY_API_KEY,\n          q: qRef.current.value,\n          rating: 'g',\n          limit: GIFS_PER_PAGE,\n          bundle: 'messaging_non_clips',\n          offset,\n        };\n        const response = await fetch(\n          'https://api.giphy.com/v1/gifs/search?' + new URLSearchParams(query),\n          {\n            referrerPolicy: 'no-referrer',\n          },\n        ).then((r) => r.json());\n        currentOffset.current = response.pagination?.offset || 0;\n        setResults(response);\n        setUIState('results');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }\n\n  useEffect(() => {\n    qRef.current?.focus();\n  }, []);\n\n  const debouncedOnInput = useDebouncedCallback(() => {\n    fetchGIFs({ offset: 0 });\n  }, 1000);\n\n  return (\n    <div id=\"gif-picker-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            e.preventDefault();\n            fetchGIFs({ offset: 0 });\n          }}\n        >\n          <input\n            ref={qRef}\n            type=\"search\"\n            name=\"q\"\n            placeholder=\"Search GIFs\"\n            required\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            onInput={debouncedOnInput}\n          />\n          <input\n            type=\"image\"\n            class=\"powered-button\"\n            src={poweredByGiphyURL}\n            width=\"86\"\n            height=\"30\"\n          />\n        </form>\n      </header>\n      <main ref={scrollableRef} class={uiState === 'loading' ? 'loading' : ''}>\n        {uiState === 'default' && (\n          <div class=\"ui-state\">\n            <p class=\"insignificant\">Type to search GIFs</p>\n          </div>\n        )}\n        {uiState === 'loading' && !results?.data?.length && (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        )}\n        {results?.data?.length > 0 ? (\n          <>\n            <ul>\n              {results.data.map((gif) => {\n                const { id, images, title, alt_text } = gif;\n                const {\n                  fixed_height_small,\n                  fixed_height_downsampled,\n                  fixed_height,\n                  original,\n                } = images;\n                const theImage = fixed_height_small?.url\n                  ? fixed_height_small\n                  : fixed_height_downsampled?.url\n                  ? fixed_height_downsampled\n                  : fixed_height;\n                let { url, webp, width, height } = theImage;\n                if (+height > 100) {\n                  width = (width / height) * 100;\n                  height = 100;\n                }\n                const urlObj = new URL(url);\n                const strippedURL = urlObj.origin + urlObj.pathname;\n                let strippedWebP;\n                if (webp) {\n                  const webpObj = new URL(webp);\n                  strippedWebP = webpObj.origin + webpObj.pathname;\n                }\n                return (\n                  <li key={id}>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const { mp4, url } = original;\n                        const theURL = mp4 || url;\n                        const urlObj = new URL(theURL);\n                        const strippedURL = urlObj.origin + urlObj.pathname;\n                        onClose();\n                        onSelect({\n                          url: strippedURL,\n                          type: mp4 ? 'video/mp4' : 'image/gif',\n                          alt_text: alt_text || title,\n                        });\n                      }}\n                    >\n                      <figure\n                        style={{\n                          '--figure-width': width + 'px',\n                          // width: width + 'px'\n                        }}\n                      >\n                        <picture>\n                          {strippedWebP && (\n                            <source srcset={strippedWebP} type=\"image/webp\" />\n                          )}\n                          <img\n                            src={strippedURL}\n                            width={width}\n                            height={height}\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            alt={alt_text}\n                            referrerpolicy=\"no-referrer\"\n                            onLoad={(e) => {\n                              e.target.style.backgroundColor = 'transparent';\n                            }}\n                          />\n                        </picture>\n                        <figcaption>{alt_text || title}</figcaption>\n                      </figure>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            <p class=\"pagination\">\n              {results.pagination?.offset > 0 && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset - GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <Icon icon=\"chevron-left\" />\n                  <span>Previous</span>\n                </button>\n              )}\n              <span />\n              {results.pagination?.offset + results.pagination?.count <\n                results.pagination?.total_count && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset + GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <span>Next</span> <Icon icon=\"chevron-right\" />\n                </button>\n              )}\n            </p>\n          </>\n        ) : (\n          uiState === 'results' && (\n            <div class=\"ui-state\">\n              <p>No results</p>\n            </div>\n          )\n        )}\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>Error loading GIFs</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n"],"names":["Combobox","input","list","tabInsertsSuggestions","defaultFirstOption","event","keyboardBindings","trackComposition","commitWithElement","_a","visible","indexDiff","focusEl","els","focusIndex","indexOfItem","newIndex","target","el","scrollTo","combobox","commit","fireCommitEvent","container","inViewport","element","scrollTop","containerBottom","top","bottom","boundary","query","text","key","cursor","multiWord","lookBackIndex","lastMatchPosition","keyIndex","pre","properties","propertyNamesToCopy","mirrorMap","textFieldMirror","textField","markerPosition","nodeName","mirror","style","props","i","len","name","marker","before","after","textFieldSelectionPosition","field","index","mirrorRect","markerRect","states","isTopLayer","TextExpander","expander","match","menu","_b","left","rect","item","beginning","remaining","detail","suffix","value","found","providers","provide","result","x","TextExpanderElement","keysAttr","keys","multiWordAttr","globalMultiWord","state","ansiRegex","onlyFirst","pattern","regex","stripAnsi","string","segmenter","stringLength","countAnsiEscapeCodes","length","_","poweredByGiphyURL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","import","supportedLanguagesMap","supportedLanguages","reduce","acc","l","code","common","native","expiryOptions","expirySeconds","Object","values","oneDay","expiresInFromExpiresAt","expiresAt","delta","Date","getTime","now","find","s","document","createElement","role","className","windowMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","width","boundingClientRect","innerWidth","window","observe","DEFAULT_LANG","localeMatch","Intl","DateTimeFormat","resolvedOptions","locale","navigator","languages","map","urlRegexObj","RegExp","urlRegex","source","flags","usernameRegex","urlPlaceholder","countableText","inputText","replace","USERNAME_RE","MENTION_RE","HASHTAG_RE","SHORTCODE_RE_FRAGMENT","SCAN_RE","Segmenter","highlightText","maxCharacters","Infinity","html","composerCharacterCount","withinLimitHTML","exceedLimitHTML","htmlSegments","segment","rtf","RelativeTimeFormat","Compose","onClose","replyToStatus","editStatus","draftStatus","standalone","hasOpener","console","masto","instance","uiState","setUIState","useState","UID","uid","log","currentAccount","currentAccountInfo","maxMediaAttachments","charactersReservedPerUrl","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","maxCharactersPerOption","minExpiration","spoilerTextRef","useRef","textareaRef","store","prevLanguage","language","sensitive","setMediaAttachments","setLanguage","oninputTextarea","poll","focusTextarea","dispatchEvent","setTimeout","current","spoilerText","useEffect","visibility2","language2","sensitive2","visibility","m","allMentions","prefs","setSensitive","poll2","mediaAttachments","options","expiresIn","statusSource","setPoll","composablePoll","mediaAttachments2","setVisibility","status","beforeUnloadCopy","hasMediaAttachments","canClose","dataset","hasOnlyAcct","isSelf","confirmClose","hasIDMediaAttachments","id","e","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","supportsCloseWatcher","useHotkeys","yes","addEventListener","capture","modals","hasModal","hasOnlyComposer","prevBackgroundDraft","count","escDownRef","ignoreEventWhen","useCloseWatcher","draftKey","getCurrentAccountNS","backgroundDraft","useInterval","db","handleItems","account","username","acct","items","i2","file","files","drafts","allowedFiles","updatedAt","then","debug","error","mediaFiles","handleDragover","includes","showEmoji2Picker","setShowEmoji2Picker","showGIFPicker","setShowGIFPicker","topSupportedLanguages","useMemo","topLanguages","restLanguages","preventDefault","contentTranslationHideLanguages","codeA","commonA","codeB","commonB","size","url","_jsxs","dataTransfer","removeEventListener","_jsx","useAvatarStatic","children","class","passData","Icon","settings","sort","replyToStatusMonthsAgo","avatarStatic","instanceURL","Status","type","disabled","onClick","_Fragment","alert","confirm","formRef","opener","formData","previewMode","option","media","pointerEvents","opacity","mediaPromises","attachment","description","params2","removeNullUndefined","res","results","some","hasNoDescriptions","create","params","saveStatus","newStatus","e2","media_attributes","in_reply_to_id","requestInit","statuses","Textarea","onChange","limit","title","icon","alt","attachments","newAttachments","j","fileID","required","performSearch","q","v2","fetch","newPoll","onDescriptionChange","checked","onInput","accept","multiple","Array","Loader","CharCountMeter","restSupportedLanguages","CustomEmojisModal","emoji","textarea","selectionStart","abrupt","emojiWithSpace","selectionEnd","newText","Modal","set","alt_text","theToast","showToast","blob","newMediaAttachments","onSelect","offsetHeight","scrollHeight","offset","clientHeight","height","ref","textareaProps","customEmojis","emojis","textExpanderTextRef","text2","filterShortcodes","forwardRef","setText","displayName","handleCommited","handleChange","encodeHTML","total","history","cur","shortenNumber","matched","handleValue","resolve","v","textExpanderRef","displayNameWithEmoji","slowHighlightPerf","composeHighlightRef","throttleHighlightText","end","lastLine","resizeObserver","ResizeObserver","number","pos","start","autoResizeTextarea","autoCapitalize","autoComplete","autoCorrect","spellCheck","onKeyDown","leftChars","charCount","preSpaces","postSpaces","setRangeText","setSelectionRange","setDescription","suffixType","subtype","debouncedOnDescriptionChange","timer","showModal","onScroll","hidden","snapStates","toastRef","lang","supportsEdit","supports","clearTimeout","setShowModal","descTextarea","hideToast","Menu2","MenuItem","onRemove","body","response","currentTarget","r","Poll","menuButton","append","label","placeholder","searchTerm","aLower","bStartsWith","bLower","aContains","bContains","aStartsWith","b","splice","str","char","obj","customEmojisList","emojisCat","recentlyUsedCustomEmojis","othersCat","setCustomEmojis","a","shortcode","startsWith","bothContain","category","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","emoji2","visibleInPicker","push","GIFS_PER_PAGE","setResults","qRef","currentOffset","_c","scrollableRef","requestAnimationFrame","fetchGIFs","staticUrl","src","debouncedOnInput","gif","fixed_height_downsampled","original","pagination","fixed_height_small","fixed_height","theImage","urlObj","strippedWebP","webp","webpObj","url2","theURL","mp4","urlObj2","strippedURL2","strippedURL","images"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}