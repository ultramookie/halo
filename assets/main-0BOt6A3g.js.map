{"version":3,"mappings":"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","names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","visible","setVisible","useState","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","pollNotifications","streaming","api","hasStreaming","setTimeout","user","notification","subscribe","log","entry","_a","checkForUpdates","clearTimeout","clearInterval","r","info","visible2","lastCheckDate","useHotkeys","currentCloakMode","Date","diff","ComposeButton","handleButton","shiftKey","openCompose","showCompose","ignoreEventWhen","querySelector","_jsx","type","onClick","children","Icon","icon","size","alt","KeyboardShortcutsHelp","snapStates","useSnapshot","onClose","showKeyboardShortcutsHelp","hasModal","Modal","class","tabindex","action","keys","_jsxs","_Fragment","className","map","FollowRequestButtons","accountID","onChange","uiState","setUIState","requestState","setRequestState","relationship","setRelationship","hasRelationship","disabled","rel","followRequests","$select","authorize","followedBy","Error","Loader","NOTIFICATION_ICONS","mention","status","reblog","follow","follow_request","favourite","poll","update","contentText","count","reblog_reply","favourite_reply","targetAccount","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","account","report","_accounts","_statuses","actualStatus","actualStatusID","currentAccount","store","session","get","isSelf","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","_types","includes","text","NameText","showAvatar","formattedCreatedAt","createdAt","toLocaleString","genericAccountsHeading","handleOpenGenericAccounts","showGenericAccounts","heading","accounts","showReactions","excludeRelationshipAttrs","debug","tabIndex","title","RelativeTime","datetime","format","account2","Fragment","href","Avatar","url","avatarStatic","bot","type2","status2","to","Status","previewMode","TruncatedLink","onContextMenu","post","dispatchEvent","clientX","clientY","undefined","readOnly","statusID","props","ref","useTruncated","oldProps","newProps","navigator","serviceWorker","accessToken","data","NotificationService","routeNotification","useLayoutEffect","sameInstance","currentInstance","notificationAccount","hasAccount","accountInstance","location","hash","warn","id2","setShowNotificationSheet","showNotificationSheet","target","Link","tagName","instanceURL","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","query","setQuery","formRef","searchFieldRef","useImperativeHandle","setValue","focus","select","blur","onSubmit","preventDefault","test","q","encodeURIComponent","name","placeholder","dir","autocomplete","autocorrect","autocapitalize","spellCheck","onSearch","onInput","onFocus","classList","add","onBlur","remove","onKeyDown","key","focusItem","nextItem","nextElementSibling","Array","from","parentElement","filter","forEach","firstItem","prevItem","previousElementSibling","lastItem","click","label","top","queryType","replace","sort","a","b","i","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enabled","enableOnFormTags","parents","coords","siblings","animations","intersections","intervals","options","debounces","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","lowPriority","callback","resize","nodes","mutation","node","child","isMounted","preExisting","remain","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","style","prev","finalX","finalY","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","res","index","compressed","uncompressed","buf","TotalLen","current_value","result","c","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","LIMIT","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","done","push","localeCompare","updatedAt","MAX_AGE","getFollowedTags","fauxDiv","extractTagsFromStatus","content","hashtagLinks","AsyncText","setText","Promise","resolve","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","following","public","search","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","pattern","fetchListTitle","pmem","lists","fetchAccountTitle","username","acct","displayName","SHORTCUTS_META","_","path","local","subtitle","excludeViewMode","media","split","join","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","fontSize","opacity","textTransform","imgURL","multiColumnUrl","checked","settings","shortcutsViewMode","src","Boolean","shortcut","Object","values","excludedViewMode","shortcutsArr","temp","shortcutIndex","display","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FETCH_MAX_AGE","fetchLists","FORM_NOTES","editMode","setLists","setFollowedHashtags","currentType","lists2","form","setCurrentType","required","switch","followedHashtags","tag","compressToEncodedURIComponent","shortcutsStr","importUIState","setImportUIState","parsedImportShortcutStr","importShortcutStr","parsed","isArray","parse","hasCurrentSettings","shortcutsImportFieldRef","shortcutSettingsCloudImportExport","showToast","note","relationships","dt","v","s","some","MenuConfirm","nonUniqueShortcuts","menuFooter","every","exceededLimit","newShortcuts","confirmLabel","menuItemClassName","clipboard","share","alert","newNote","settingsJSON2","settingsJSON","Shortcuts","shortcutsColumnsMode","menuRef","formattedShortcuts","useMemo","pin","navigate","useNavigate","handler","parseInt","closeMenu","showShortcutsSettings","contains","page","getElementById","updatesButton","Menu2","instanceRef","overflow","viewScroll","menuClassName","gap","position","menuButton","_b","MenuLink","ListAddEdit","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","supports","formData","FormData","listResult","replies_policy","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","currentID","familiarFollowers","memFetchFamiliarFollowers","maxAge","fetchPostingStats","fetchStatuses","statuses","total","originals","replies","stats","boosts","memFetchPostingStats","fetchAccount","standalone","authenticated","currentMasto","isString","setInfo","sameCurrentInstance","info2","avatar","emojis","fields","group","lastStatusAt","locked","statusesCount","memorial","moved","roles","header","headerStatic","headerIsAvatar","infoHasEssentials","getJSON","updated","headerCornerColors","setHeaderCornerColors","followersIterator","domain","fetchFollowers","firstLoad","familiarFollowersCache","results","familiarFollowers2","newValue","familiar","followingIterator","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","hasPostingStats","followers","renderPostingStats","onRelationshipChange","AccountBlock","canvas","onLoad","ctx","OffscreenCanvas","getContext","pixelDimension","willReadFrequently","g","drawImage","colors","getImageData","dataLength","color","lightenRGB","rgbColors","avatarSize","external","role","handleContentLinks","enhanceContent","verifiedAt","__html","EmojiText","follower","fetchAccounts","shortenNumber","followersCount","fetchFollowing","followingCount","niceDateTime","FAMILIAR_FOLLOWERS_LIMIT","currentAuthenticated","privateNote","showingReblogs","notifying","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","currentInfo","setIsSelf","fetchRelationships","setRelationshipUIState","relationship2","updateAccount","loading","relationshipUIState","showTranslatedBio","setShowPrivateNoteModal","showAddRemoveLists","showPrivateNoteModal","MenuItem","setShowTranslatedBio","setShowAddRemoveLists","handle","MenuDivider","newRelationship","SubMenu","duration","counter","reloadGenericAccounts","TranslatedBioSheet","AddRemoveListsSheet","luminence","alpha","host","urlObj","fieldsText","getHTMLText","Math","min","niceAccountURL","pathname","listsContainingAccount","setListsContainingAccount","listsContainingAccount2","reloadCount","reload","inList","l","showListAddEditModal","accountIds","setShowListAddEditModal","PrivateNoteSheet","timer","textareaRef","initialNote","e2","trim","__defProp","__defNormalProp","obj","__publicField","observerMap","RootIds","rootId","unsupportedValue","getRootId","optionsToId","createObserver","thresholds","inView","threshold","observe","fallbackInView","bounds","isPlainChildren","InView","React.Component","prevProps","trackVisibility","as","triggerOnce","skip","initialInView","React.createElement","relationshipsMap","uniqueAccountIds","reduce","acc","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","slice","dedupeBoosts","boostedStatusIDs","filteredItems","statusKey","boosterID","statusKey2","groupContext","contextIndex","contexts","t","repliedItem","j","self","splice","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","contextItems","aDate","bDate","i2","sKey","queueMicrotask","replyToStatus","fetchStatus","saveStatus","skipThreading","statusReply","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","itemFollowedTags","extractedTags","clearFollowedTagsState","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","direction","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","scrollLeft","onScroll","scrollHeight","scrollWidth","clientHeight","clientWidth","scrollStart","scrollDimension","clientDimension","scrollDistance","abs","addEventListener","passive","removeEventListener","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountId","accountURL","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","sensitive","spoilerText","visibility","language","editedAt","filtered","card","mediaAttachments","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","isFiltered","filterInfo","hasSpoiler","readingExpandMedia","prefs","filterTitleStr","titlesStr","showSpoilerMedia","Media","NavMenu","setCurrentAccount","moreThanOneAccount","setMoreThanOneAccount","find","showFollowing","bindLongPress","useLongPress","showAccounts","detect","cancelOnMovement","buttonRef","menuState","setMenuState","boundingBoxPadding","safeBoundingBoxPadding","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","open","now","state","squircle","ControlledMenu","anchorRef","containerProps","zIndex","portal","body","align","unmountOnClose","appVersion","commitHash","__COMMIT_HASH__","confirm","showSettings","scrollIntoViewOptions","block","inline","behavior","Timeline","titleComponent","emptyText","errorText","useItemID","boostsCarousel","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","setItems","showMore","setShowMore","showNew","setShowNew","allowGrouping","loadItems","useDebouncedCallback","otherPosts","pinnedPosts","items2","itemsSelector","jRef","activeItem","activeItemRect","closest","getBoundingClientRect","allItems","querySelectorAll","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","handleLoadNewPosts","useCallback","dotRef","showNewPostsIndicator","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","hasUpdate","useInterval","lastHiddenTime","TimelineItem","fItems","bFiltered","isCarousel","aFiltered","reblog2","_pinned2","actualStatusID2","statusID2","url2","StatusCarousel","manyItems","isMiddle","isSpoiler","showCompact","_differentAuthor","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","endButtonRef","render","setRender","newID","oldID","carouselRef","startButtonRef","statusPeekText","statusPeek","statusThreadNumber","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","createElement","setAttribute","_isSearchEnabled","v2","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","setAccount","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","exclude_replies","fetchPromise","fetchAccountPromiseRef","setFeaturedTags","useTitle","AccountInfo","featuredTags","cachedAccount","filterBarRef","TimelineStart","month2","date","year","validity","valid","max","active","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","monthFieldRef","checkValidity","minYear","maxYear","maxMonth","minMonth","yearFieldRef","Bookmarks","bookmarksIterator","fetchBookmarks","Favourites","favouritesIterator","fetchFavourites","FollowedHashtags","Following","homeIterator","latestItem","latestItemChanged","payload","fetchHome","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","columnMode","hashtags","linkParams","hashtagTitle","hashtagPostTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","followUIState","setFollowUIState","reachLimit","setDownOverflow","subMenu","catch","finally","MenuHeader","set","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","fetchList","setList","showManageMembersModal","setShowManageMembersModal","ListManageMembers","MEMBERS_LIMIT","listID","members","setMembers","membersIterator","fetchMembers","member","RemoveAddButton","removed","setRemoved","emptySearchParams","URLSearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","notificationTypeKeys","fixNotifications","groupNotifications","notificationsMap","cleanNotifications","virtualType","mappedNotification","mappedAccount","n","cleanNotifications2","notificationsMap2","createBackendPushSubscription","subscription","create","fetchBackendPushSubscription","updateBackendPushSubscription","removeBackendPushSubscription","isPushSupported","getRegistration","getSubscription","registration","pushManager","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","vapidKey","sameKey","getCurrentAccount","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","policy","removeSubscription","userVisibleOnly","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","loadNotifications","fetchNotificationsPromise","fetchNotifications","announcements2","loadUpdates","autoRefresh","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","statusLink","announcement","AnnouncementBlock","notificationDay","differentDay","contact","contactAccount","startsAt","allDay","publishedAt","endsAt","published","read","reactions","publishedAtDate","publishedDateText","updatedAtDate","updatedAtText","dangerouslySetInnerHTML","staticUrl","me","reaction","Public","isLocal","publicIterator","fetchPublic","prompt","toLowerCase","SHORT_LIMIT","Search","offsetRef","scrollTo","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","setTypeResultsFunc","setRelationshipsMap","loadRelationships","loadResults","filterBarParent","link","history","clamp","gammaToLinear","pow","linearToGamma","rgb2oklab","m","cbrt","oklab2rgb","L","round","fetchLinks","trends","links","Trending","setHashtags","setLinks","trendIterator","fetchTrend","links2","cur","description","image","authorName","authorUrl","blurhash","imageDescription","providerName","providerUrl","accentColor","averageColor","labAverageColor","title2","Columns","components","Hashtag","Component","error","Home","db","drafts","ns","getCurrentAccountNS","startsWith","showDrafts","NotificationsLink","notificationLinkRef","stopPropagation","matchMedia","matches","NotificationsMenu","NOTIFICATIONS_LIMIT","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","abrupt","statusPostRegexes","getInstanceStatusObject","hostname","URL","regex","match","getInstanceStatusURL","HttpRoute","useLocation","statusObject","statusURL","Lists","useReducer","logo","instancesListURL","define_import_meta_env_default","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaIndex","showMedia","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","prevLocation","matchStatusPath","matchPath","handleMediaClose","delete","$carousel","MediaModal","lang","StatusParent","linkable","restProps","StatusThread","propInstance","navigation","translate","setStatuses","heroStatusRef","totalDescendants","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","cachedStatuses","reallyCachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","_r","expandReplies","weight","descendants","missingStatuses","ancestors2","ancestors","ancestorsIsThread","nestedDescendants","__replies","ancestor","isThread","allStatuses","offsetTop","setLimit","showRefresh","setShowRefresh","interval","scrollPosition","newScrollOffsets","setInterval","newScrollTop","contextURL","initContext","statusWeightCache","div","apiCache","heroDisplayName","heroContentText","postInstance","reloadStatusPage","hasDescendants","innerHTML","postSameInstance","activeStatus","activeStatusRect","activeStatusIndex","nextStatus","heroInView","heroPointer","statusLinkRect","topmostStatusLink","allStatusLinks","prevStatus","details","reachTopPost","initialPageState","handleMediaClick","renderStatus","descendant","thread","isHero","requestAnimationFrame","setHeroInView","setReachTopPost","isLinkable","SubComments","handleStatusLinkClick","enableTranslate","showActionsBar","prevEntry","level","openAll","parentLink","getIDs","viewMode","prevLocationIsStatusPage","moreStatusesKeys","arr","setViewMode","button","buttons","statusesList","diveDeep","replies2","reply","replies3","totalComments","totalWeight","accWeight","hasParentThread","calcStatusWeight","openBefore","detailsRef","handleScroll","sameCount","open2","shortReply","dataset","MEDIA_VIRTUAL_LENGTH","cachedWeight","mediaLength","pollLength","POLL_VIRTUAL_LENGTH","cardLength","WEIGHT_SEGMENT","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","focusDeck","columns","modals","modal","modalFocusElement","backDrop","pages","nativeAlert","__nativeAlert","toast","Toastify","gravity","Catchup","lazy","Modals","__STATES__","__STATES_STATS__","counts","unmountedPosts","unfurledLinks","$post","postInNotifications","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","documentElement","isIOS","theme","$meta","tempColor","colorScheme","$manualMeta","themeDarkColor","$autoMetas","textSize","changes","setProperty","$app","prevValue","$body","setIsLoggedIn","code","decodeURIComponent","clientID","clientSecret","initPreferences","client","initInstance","initStates","PrimaryRoutes","Routes","Route","Suspense","nonRootLocation","Welcome","backgroundLocation","getPrevLocation","isModalPage","AbortSignal","AbortController","abort","signal","HashRouter","App","localStorage","removeItem","sessionStorage","__CLOAK__","toggle"],"ignoreList":[0,1,11,12,13,23],"sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/shortcuts.jsx","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../node_modules/react-intersection-observer/index.mjs","../../src/utils/relationships.js","../../src/utils/timeline-utils.jsx","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/bookmarks.jsx","../../src/pages/favourites.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/pages/mentions.jsx","../../src/utils/group-notifications.jsx","../../src/utils/push-notifications.js","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/utils/color-utils.js","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/assets/logo.svg","../../src/data/instances.json?url","../../src/utils/auth.js","../../src/pages/login.jsx","../../src/components/media-modal.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/focus-deck.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 15_000; // 15 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  usePageVisibility(setVisible);\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications.list({\n        limit: 1,\n        sinceId: states.notificationsLast.id,\n      });\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          pollNotifications = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(pollNotifications);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys('shift+alt+k', () => {\n    const currentCloakMode = states.settings.cloakMode;\n    states.settings.cloakMode = !currentCloakMode;\n    showToast({\n      text: `Cloak mode ${currentCloakMode ? 'disabled' : 'enabled'}`,\n    });\n  });\n\n  return null;\n});\n","import { useHotkeys } from 'react-hotkeys-hook';\n\nimport openCompose from '../utils/open-compose';\nimport states from '../utils/states';\n\nimport Icon from './icon';\n\nexport default function ComposeButton() {\n  function handleButton(e) {\n    if (e.shiftKey) {\n      const newWin = openCompose();\n\n      if (!newWin) {\n        states.showCompose = true;\n      }\n    } else {\n      states.showCompose = true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal;\n    },\n  });\n\n  return (\n    <button type=\"button\" id=\"compose-button\" onClick={handleButton}>\n      <Icon icon=\"quill\" size=\"xl\" alt=\"Compose\" />\n    </button>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?, shift+?, shift+slash',\n    (e) => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" />\n          </button>\n          <header>\n            <h2>Keyboard shortcuts</h2>\n          </header>\n          <main>\n            <table>\n              {[\n                {\n                  action: 'Keyboard shortcuts help',\n                  keys: <kbd>?</kbd>,\n                },\n                {\n                  action: 'Next post',\n                  keys: <kbd>j</kbd>,\n                },\n                {\n                  action: 'Previous post',\n                  keys: <kbd>k</kbd>,\n                },\n                {\n                  action: 'Skip carousel to next post',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>j</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Skip carousel to previous post',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>k</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Load new posts',\n                  keys: <kbd>.</kbd>,\n                },\n                {\n                  action: 'Open post details',\n                  keys: (\n                    <>\n                      <kbd>Enter</kbd> or <kbd>o</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: (\n                    <>\n                      Expand content warning or\n                      <br />\n                      toggle expanded/collapsed thread\n                    </>\n                  ),\n                  keys: <kbd>x</kbd>,\n                },\n                {\n                  action: 'Close post or dialogs',\n                  keys: (\n                    <>\n                      <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Focus column in multi-column mode',\n                  keys: (\n                    <>\n                      <kbd>1</kbd> to <kbd>9</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Compose new post',\n                  keys: <kbd>c</kbd>,\n                },\n                {\n                  action: 'Compose new post (new window)',\n                  className: 'insignificant',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>c</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Send post',\n                  keys: (\n                    <>\n                      <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                      <kbd>Enter</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Search',\n                  keys: <kbd>/</kbd>,\n                },\n                {\n                  action: 'Reply',\n                  keys: <kbd>r</kbd>,\n                },\n                {\n                  action: 'Reply (new window)',\n                  className: 'insignificant',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>r</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Like (favourite)',\n                  keys: (\n                    <>\n                      <kbd>l</kbd> or <kbd>f</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Boost',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>b</kbd>\n                    </>\n                  ),\n                },\n                {\n                  action: 'Bookmark',\n                  keys: <kbd>d</kbd>,\n                },\n                {\n                  action: 'Toggle Cloak mode',\n                  keys: (\n                    <>\n                      <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                    </>\n                  ),\n                },\n              ].map(({ action, className, keys }) => (\n                <tr key={action}>\n                  <th class={className}>{action}</th>\n                  <td>{keys}</td>\n                </tr>\n              ))}\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","import { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        Accept\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        Reject\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon icon=\"check-circle\" alt=\"Accepted\" class=\"follow-accepted\" />\n          ) : (\n            <Icon icon=\"x-circle\" alt=\"Rejected\" class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport RelativeTime from './relative-time';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\n*/\n\nconst contentText = {\n  mention: 'mentioned you in their post.',\n  status: 'published a post.',\n  reblog: 'boosted your post.',\n  'reblog+account': (count) => `boosted ${count} of your posts.`,\n  reblog_reply: 'boosted your reply.',\n  follow: 'followed you.',\n  follow_request: 'requested to follow you.',\n  favourite: 'liked your post.',\n  'favourite+account': (count) => `liked ${count} of your posts.`,\n  favourite_reply: 'liked your reply.',\n  poll: 'A poll you have voted in or created has ended.',\n  'poll-self': 'A poll you have created has ended.',\n  'poll-voted': 'A poll you have voted in has ended.',\n  update: 'A post you interacted with has been edited.',\n  'favourite+reblog': 'boosted & liked your post.',\n  'favourite+reblog+account': (count) =>\n    `boosted & liked ${count} of your posts.`,\n  'favourite+reblog_reply': 'boosted & liked your reply.',\n  'admin.sign_up': 'signed up.',\n  'admin.report': (targetAccount) => <>reported {targetAccount}</>,\n};\n\nconst AVATARS_LIMIT = 50;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { id, status, account, report, _accounts, _statuses } = notification;\n  let { type } = notification;\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = store.session.get('currentAccount');\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    for (const account of _accounts) {\n      if (account._types?.includes('favourite')) {\n        favsCount++;\n      }\n      if (account._types?.includes('reblog')) {\n        reblogsCount++;\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (\n    type === 'reblog' ||\n    type === 'favourite' ||\n    type === 'favourite+reblog'\n  ) {\n    if (_statuses?.length > 1) {\n      text = contentText[`${type}+account`];\n    } else if (isReplyToOthers) {\n      text = contentText[`${type}_reply`];\n    } else {\n      text = contentText[type];\n    }\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = `[Unknown notification type: ${type}]`;\n  }\n\n  if (typeof text === 'function') {\n    const count = _statuses?.length || _accounts?.length;\n    if (count) {\n      text = text(count);\n    } else if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text(<NameText account={targetAccount} showAvatar />);\n      }\n    }\n  }\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': 'Boosted/Liked by…',\n      favourite: 'Liked by…',\n      reblog: 'Boosted by…',\n      follow: 'Followed by…',\n    }[type] || 'Accounts';\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={id}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {type !== 'mention' && (\n          <>\n            <p>\n              {!/poll|update/i.test(type) && (\n                <>\n                  {_accounts?.length > 1 ? (\n                    <>\n                      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts}>\n                        <span title={_accounts.length}>\n                          {shortenNumber(_accounts.length)}\n                        </span>{' '}\n                        people\n                      </b>{' '}\n                    </>\n                  ) : (\n                    <>\n                      <NameText account={account} showAvatar />{' '}\n                    </>\n                  )}\n                </>\n              )}\n              {text}\n              {type === 'mention' && (\n                <span class=\"insignificant\">\n                  {' '}\n                  •{' '}\n                  <RelativeTime\n                    datetime={notification.createdAt}\n                    format=\"micro\"\n                  />\n                </span>\n              )}\n            </p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener noreferrer\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                        ? 'xl'\n                        : _accounts.length < 30\n                        ? 'l'\n                        : _accounts.length < 40\n                        ? 'm'\n                        : 's' // My god, this person is popular!\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            <button\n              type=\"button\"\n              class=\"small plain\"\n              onClick={handleOpenGenericAccounts}\n            >\n              {_accounts.length > AVATARS_LIMIT &&\n                `+${_accounts.length - AVATARS_LIMIT}`}\n              <Icon icon=\"chevron-down\" />\n            </button>\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more=\"Read more →\" ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" />\n          </button>\n          <header>\n            <b>Notification</b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>This notification is from your other account.</p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>View all notifications</span> <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder=\"Search\"\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <>\n                  Posts with <q>{query}</q>\n                </>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <>\n                  Look up <mark>{query}</mark>\n                </>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <>\n                  Accounts with <q>{query}</q>\n                </>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return isSearchPage || hasModal;\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (typeof window !== \"undefined\") {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags.list({\n    limit: LIMIT,\n  });\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: 'Home / Following',\n  notifications: 'Notifications',\n  list: 'List',\n  public: 'Public (Local / Federated)',\n  search: 'Search',\n  'account-statuses': 'Account',\n  bookmarks: 'Bookmarks',\n  favourites: 'Likes',\n  hashtag: 'Hashtag',\n  trending: 'Trending',\n  mentions: 'Mentions',\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: 'List ID',\n      name: 'id',\n    },\n  ],\n  public: [\n    {\n      text: 'Local only',\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: 'Instance',\n      name: 'instance',\n      type: 'text',\n      placeholder: 'Optional, e.g. mastodon.social',\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: 'Instance',\n      name: 'instance',\n      type: 'text',\n      placeholder: 'Optional, e.g. mastodon.social',\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: 'Search term',\n      name: 'query',\n      type: 'text',\n      placeholder: 'Optional, unless for multi-column mode',\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: 'e.g. PixelArt (Max 5, space-separated)',\n      pattern: '[^#]+',\n    },\n    {\n      text: 'Media only',\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: 'Instance',\n      name: 'instance',\n      type: 'text',\n      placeholder: 'Optional, e.g. mastodon.social',\n      notRequired: true,\n    },\n  ],\n};\nconst fetchListTitle = pmem(async ({ id }) => {\n  const list = await api().masto.v1.lists.$select(id).fetch();\n  return list.title;\n});\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) => (index === 0 ? 'Home' : 'Following'),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: 'Mentions',\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: 'Notifications',\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: 'list',\n    title: fetchListTitle,\n    path: ({ id }) => `/l/${id}`,\n    icon: 'list',\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? 'Local' : 'Federated'),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: 'Trending',\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : 'Search'),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: 'Bookmarks',\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: 'Likes',\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> Shortcuts{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            beta\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>Specify a list of shortcuts that'll appear&nbsp;as:</p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: 'Floating button',\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: 'Tab/Menu bar',\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: 'Multi-column',\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          Not available in current view mode\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt=\"Move up\" />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt=\"Move down\" />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt=\"Edit\" />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    Add more than one shortcut/column to make this work.\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? 'No columns yet. Tap on the Add column button.'\n                : 'No shortcuts yet. Tap on the Add shortcut button.'}\n            </p>\n            <p>\n              Not sure what to add?\n              <br />\n              Try adding{' '}\n              <a\n                href=\"#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.shortcuts = [\n                    {\n                      type: 'following',\n                    },\n                    {\n                      type: 'notifications',\n                    },\n                  ];\n                }}\n              >\n                Home / Following and Notifications\n              </a>{' '}\n              first.\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? `Max ${SHORTCUTS_LIMIT} columns`\n              : `Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            Import/export\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? 'Add column…'\n                : 'Add shortcut…'}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst fetchLists = pmem(\n  () => {\n    const { masto } = api();\n    return masto.v1.lists.list();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nconst FORM_NOTES = {\n  search: `For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: 'Multiple hashtags are supported. Space-separated.',\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n  const { masto } = api();\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await fetchLists();\n        lists.sort((a, b) => a.title.localeCompare(b.title));\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? 'Edit' : 'Add'} shortcut</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>Timeline</span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{TYPE_TEXT[type]}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>List</span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                      >\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{text}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={placeholder}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {FORM_NOTES[currentType]}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? 'Save' : 'Add'}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                Remove\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>\n          Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>Import</span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder=\"Paste shortcuts here\"\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = store.session.get('currentAccount');\n                  showToast(\n                    'Downloading saved shortcuts from instance server…',\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast('Unable to download shortcuts');\n                  }\n                }}\n                title=\"Download shortcuts from instance server\"\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {TYPE_TEXT[shortcut.type]}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>* Exists in current shortcuts</small>\n                  <br />\n                  <small>\n                    ⚠️ List may not work if it's from a different account.\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>⚠️ Invalid settings format</small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel=\"Append to current shortcuts?\"\n                  menuFooter={\n                    <div class=\"footer\">\n                      Only shortcuts that don’t exist in current shortcuts will\n                      be appended.\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast('No new shortcuts to import');\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? `Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : 'Shortcuts imported',\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    Import & append…\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? 'Override current shortcuts?'\n                  : 'Import shortcuts?'\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast('Shortcuts imported');\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? 'or override…' : 'Import…'}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>Export</span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast('Shortcuts copied');\n                } catch (e) {\n                  console.error(e);\n                  showToast('Unable to copy shortcuts');\n                }\n              }}\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast('Shortcut settings copied');\n                } catch (e) {\n                  console.error(e);\n                  showToast('Unable to copy shortcut settings');\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" /> <span>Copy</span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(\"Sharing doesn't seem to work.\");\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" /> <span>Share</span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = store.session.get('currentAccount');\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settingsJSON = JSON.stringify({\n                          v: '1', // version\n                          dt: Date.now(), // datetime stamp\n                          data: shortcutsStr, // shortcuts settings string\n                        });\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast('Saving shortcuts to instance server…');\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast('Shortcuts saved');\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast('Unable to save shortcuts');\n                  }\n                }}\n                title=\"Sync to instance server\"\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                {shortcutsStr.length} characters\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>Raw Shortcuts JSON</small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" /> Import/export settings from/to instance\n              server (Very experimental)\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import './shortcuts.css';\n\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useMemo, useRef } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport Menu2 from './menu2';\nimport MenuLink from './menu-link';\n\nfunction Shortcuts() {\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  if (\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode)\n  ) {\n    return null;\n  }\n\n  const menuRef = useRef();\n\n  const formattedShortcuts = useMemo(\n    () =>\n      shortcuts\n        .map((pin, i) => {\n          const { type, ...data } = pin;\n          if (!SHORTCUTS_META[type]) return null;\n          let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n          if (typeof id === 'function') {\n            id = id(data, i);\n          }\n          if (typeof path === 'function') {\n            path = path(\n              {\n                ...data,\n                instance: data.instance || instance,\n              },\n              i,\n            );\n          }\n          if (typeof title === 'function') {\n            title = title(data, i);\n          }\n          if (typeof subtitle === 'function') {\n            subtitle = subtitle(data, i);\n          }\n          if (typeof icon === 'function') {\n            icon = icon(data, i);\n          }\n\n          return {\n            id,\n            path,\n            title,\n            subtitle,\n            icon,\n          };\n        })\n        .filter(Boolean),\n    [shortcuts],\n  );\n\n  const navigate = useNavigate();\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    const index = parseInt(handler.keys[0], 10) - 1;\n    if (index < formattedShortcuts.length) {\n      const { path } = formattedShortcuts[index];\n      if (path) {\n        navigate(path);\n        menuRef.current?.closeMenu?.();\n      }\n    }\n  });\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt=\"Shortcuts\" />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive = supports('@mastodon/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? 'Edit list' : 'New list'}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode ? 'Unable to edit list.' : 'Unable to create list.',\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              Name{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">Show replies to list members</option>\n              <option value=\"followed\">Show replies to people I follow</option>\n              <option value=\"none\">Don't show replies</option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                Hide posts on this list from Home/Following\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? 'Save' : 'Create'}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel=\"Delete this list?\"\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert('Unable to delete list.');\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  Delete…\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { Menu, MenuDivider, MenuItem, SubMenu } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { hideAllModals } from '../utils/states';\nimport store from '../utils/store';\nimport { updateAccount } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport Menu2 from './menu2';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: 'Forever',\n  300: '5 minutes',\n  1_800: '30 minutes',\n  3_600: '1 hour',\n  21_600: '6 hours',\n  86_400: '1 day',\n  259_200: '3 days',\n  604_800: '1 week',\n};\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n}) {\n  const { masto } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(\n    () => id === store.session.get('currentAccount'),\n    [id],\n  );\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = store.local.getJSON('accounts');\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        store.local.setJSON('accounts', accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const domain = new URL(url).hostname;\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts.$select(id).followers.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      const familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch(\n        {\n          id: [id],\n        },\n      );\n      familiarFollowersCache.current = familiarFollowers[0].accounts;\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts.$select(id).following.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n      style={{\n        '--header-color-1': headerCornerColors[0],\n        '--header-color-2': headerCornerColors[1],\n        '--header-color-3': headerCornerColors[2],\n        '--header-color-4': headerCornerColors[3],\n      }}\n    >\n      {uiState === 'error' && (\n        <div class=\"ui-state\">\n          <p>Unable to load account.</p>\n          <p>\n            <a\n              href={isString ? account : url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Go to account page <Icon icon=\"external\" />\n            </a>\n          </p>\n        </div>\n      )}\n      {uiState === 'loading' ? (\n        <>\n          <header>\n            <AccountBlock avatarSize=\"xxxl\" skeleton />\n          </header>\n          <main>\n            <div class=\"note\">\n              <p>███████ ████ ████</p>\n              <p>████ ████████ ██████ █████████ ████ ██</p>\n            </div>\n            <div class=\"account-metadata-box\">\n              <div class=\"profile-metadata\">\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">███</b>\n                  <p>██████</p>\n                </div>\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">████</b>\n                  <p>███████████</p>\n                </div>\n              </div>\n              <div class=\"stats\">\n                <div>\n                  <span>██</span> Followers\n                </div>\n                <div>\n                  <span>██</span> Following\n                </div>\n                <div>\n                  <span>██</span> Posts\n                </div>\n              </div>\n            </div>\n            <div class=\"actions\">\n              <span />\n              <span class=\"buttons\">\n                <button type=\"button\" title=\"More\" class=\"plain\" disabled>\n                  <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                </button>\n              </span>\n            </div>\n          </main>\n        </>\n      ) : (\n        info && (\n          <>\n            {!!moved && (\n              <div class=\"account-moved\">\n                <p>\n                  <b>{displayName}</b> has indicated that their new account is\n                  now:\n                </p>\n                <AccountBlock\n                  account={moved}\n                  instance={instance}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    states.showAccount = moved;\n                  }}\n                />\n              </div>\n            )}\n            {!!header && !/missing\\.png$/.test(header) && (\n              <img\n                src={header}\n                alt=\"\"\n                class={`header-banner ${\n                  headerIsAvatar ? 'header-is-avatar' : ''\n                }`}\n                onError={(e) => {\n                  if (e.target.crossOrigin) {\n                    if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.removeAttribute('crossorigin');\n                      e.target.src = header;\n                    }\n                  } else if (e.target.src !== headerStatic) {\n                    e.target.src = headerStatic;\n                  } else {\n                    e.target.remove();\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onLoad={(e) => {\n                  e.target.classList.add('loaded');\n                  try {\n                    // Get color from four corners of image\n                    const canvas = window.OffscreenCanvas\n                      ? new OffscreenCanvas(1, 1)\n                      : document.createElement('canvas');\n                    const ctx = canvas.getContext('2d', {\n                      willReadFrequently: true,\n                    });\n                    canvas.width = e.target.width;\n                    canvas.height = e.target.height;\n                    ctx.imageSmoothingEnabled = false;\n                    ctx.drawImage(e.target, 0, 0);\n                    // const colors = [\n                    //   ctx.getImageData(0, 0, 1, 1).data,\n                    //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                    //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                    //   ctx.getImageData(\n                    //     e.target.width - 1,\n                    //     e.target.height - 1,\n                    //     1,\n                    //     1,\n                    //   ).data,\n                    // ];\n                    // Get 10x10 pixels from corners, get average color from each\n                    const pixelDimension = 10;\n                    const colors = [\n                      ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                        .data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        0,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        0,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                    ].map((data) => {\n                      let r = 0;\n                      let g = 0;\n                      let b = 0;\n                      let a = 0;\n                      for (let i = 0; i < data.length; i += 4) {\n                        r += data[i];\n                        g += data[i + 1];\n                        b += data[i + 2];\n                        a += data[i + 3];\n                      }\n                      const dataLength = data.length / 4;\n                      return [\n                        r / dataLength,\n                        g / dataLength,\n                        b / dataLength,\n                        a / dataLength,\n                      ];\n                    });\n                    const rgbColors = colors.map((color) => {\n                      const [r, g, b, a] = lightenRGB(color);\n                      return `rgba(${r}, ${g}, ${b}, ${a})`;\n                    });\n                    setHeaderCornerColors(rgbColors);\n                    console.log({ colors, rgbColors });\n                  } catch (e) {\n                    // Silently fail\n                  }\n                }}\n              />\n            )}\n            <header>\n              <AccountBlock\n                account={info}\n                instance={instance}\n                avatarSize=\"xxxl\"\n                external={standalone}\n                internal={!standalone}\n              />\n            </header>\n            <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n            <main>\n              {!!memorial && <span class=\"tag\">In Memoriam</span>}\n              {!!bot && (\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              )}\n              {!!group && (\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              )}\n              {roles?.map((role) => (\n                <span class=\"tag\">\n                  {role.name}\n                  {!!accountInstance && (\n                    <>\n                      {' '}\n                      <span class=\"more-insignificant\">{accountInstance}</span>\n                    </>\n                  )}\n                </span>\n              ))}\n              <div\n                class=\"note\"\n                dir=\"auto\"\n                onClick={handleContentLinks({\n                  instance: currentInstance,\n                })}\n                dangerouslySetInnerHTML={{\n                  __html: enhanceContent(note, { emojis }),\n                }}\n              />\n              <div class=\"account-metadata-box\">\n                {fields?.length > 0 && (\n                  <div class=\"profile-metadata\">\n                    {fields.map(({ name, value, verifiedAt }, i) => (\n                      <div\n                        class={`profile-field ${\n                          verifiedAt ? 'profile-verified' : ''\n                        }`}\n                        key={name + i}\n                        dir=\"auto\"\n                      >\n                        <b>\n                          <EmojiText text={name} emojis={emojis} />{' '}\n                          {!!verifiedAt && (\n                            <Icon icon=\"check-circle\" size=\"s\" />\n                          )}\n                        </b>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: enhanceContent(value, { emojis }),\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div class=\"stats\">\n                  <LinkOrDiv\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          heading: 'Followers',\n                          fetchAccounts: fetchFollowers,\n                          instance,\n                          excludeRelationshipAttrs: isSelf\n                            ? ['followedBy']\n                            : [],\n                        };\n                      }, 0);\n                    }}\n                  >\n                    {!!familiarFollowers.length && (\n                      <span class=\"shazam-container-horizontal\">\n                        <span class=\"shazam-container-inner stats-avatars-bunch\">\n                          {familiarFollowers.map((follower) => (\n                            <Avatar\n                              url={follower.avatarStatic}\n                              size=\"s\"\n                              alt={`${follower.displayName} @${follower.acct}`}\n                              squircle={follower?.bot}\n                            />\n                          ))}\n                        </span>\n                      </span>\n                    )}\n                    <span title={followersCount}>\n                      {shortenNumber(followersCount)}\n                    </span>{' '}\n                    Followers\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          heading: 'Following',\n                          fetchAccounts: fetchFollowing,\n                          instance,\n                          excludeRelationshipAttrs: isSelf ? ['following'] : [],\n                        };\n                      }, 0);\n                    }}\n                  >\n                    <span title={followingCount}>\n                      {shortenNumber(followingCount)}\n                    </span>{' '}\n                    Following\n                    <br />\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    to={accountLink}\n                    // onClick={\n                    //   standalone\n                    //     ? undefined\n                    //     : () => {\n                    //         hideAllModals();\n                    //       }\n                    // }\n                  >\n                    <span title={statusesCount}>\n                      {shortenNumber(statusesCount)}\n                    </span>{' '}\n                    Posts\n                  </LinkOrDiv>\n                  {!!createdAt && (\n                    <div class=\"insignificant\">\n                      Joined{' '}\n                      <time datetime={createdAt}>\n                        {niceDateTime(createdAt, {\n                          hideTime: true,\n                        })}\n                      </time>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {!!postingStats && (\n                <LinkOrDiv\n                  to={accountLink}\n                  class=\"account-metadata-box\"\n                  // onClick={() => {\n                  //   states.showAccount = false;\n                  // }}\n                >\n                  <div class=\"shazam-container\">\n                    <div class=\"shazam-container-inner\">\n                      {hasPostingStats ? (\n                        <div\n                          class=\"posting-stats\"\n                          title={`${Math.round(\n                            (postingStats.originals / postingStats.total) * 100,\n                          )}% original posts, ${Math.round(\n                            (postingStats.replies / postingStats.total) * 100,\n                          )}% replies, ${Math.round(\n                            (postingStats.boosts / postingStats.total) * 100,\n                          )}% boosts`}\n                        >\n                          <div>\n                            {postingStats.daysSinceLastPost < 365\n                              ? `Last ${postingStats.total} post${\n                                  postingStats.total > 1 ? 's' : ''\n                                } in the past \n                      ${postingStats.daysSinceLastPost} day${\n                                  postingStats.daysSinceLastPost > 1 ? 's' : ''\n                                }`\n                              : `\n                      Last ${postingStats.total} posts in the past year(s)\n                      `}\n                          </div>\n                          <div\n                            class=\"posting-stats-bar\"\n                            style={{\n                              // [originals | replies | boosts]\n                              '--originals-percentage': `${\n                                (postingStats.originals / postingStats.total) *\n                                100\n                              }%`,\n                              '--replies-percentage': `${\n                                ((postingStats.originals +\n                                  postingStats.replies) /\n                                  postingStats.total) *\n                                100\n                              }%`,\n                            }}\n                          />\n                          <div class=\"posting-stats-legends\">\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                              Original\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                              Replies\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                              Boosts\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div class=\"posting-stats\">Post stats unavailable.</div>\n                      )}\n                    </div>\n                  </div>\n                </LinkOrDiv>\n              )}\n              <div class=\"account-metadata-box\">\n                <div\n                  class=\"shazam-container no-animation\"\n                  hidden={!!postingStats}\n                >\n                  <div class=\"shazam-container-inner\">\n                    <button\n                      type=\"button\"\n                      class=\"posting-stats-button\"\n                      disabled={postingStatsUIState === 'loading'}\n                      onClick={() => {\n                        renderPostingStats();\n                      }}\n                    >\n                      <div\n                        class={`posting-stats-bar posting-stats-icon ${\n                          postingStatsUIState === 'loading' ? 'loading' : ''\n                        }`}\n                        style={{\n                          '--originals-percentage': '33%',\n                          '--replies-percentage': '66%',\n                        }}\n                      />\n                      View post stats{' '}\n                      {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </main>\n            <footer>\n              <RelatedActions\n                info={info}\n                instance={instance}\n                authenticated={authenticated}\n                onRelationshipChange={onRelationshipChange}\n              />\n            </footer>\n          </>\n        )\n      )}\n    </div>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  authenticated,\n  onRelationshipChange = () => {},\n}) {\n  if (!info) return null;\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = store.session.get('currentAccount');\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.fetch({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">Follows you</span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              Last post:{' '}\n              <span class=\"ib\">\n                {niceDateTime(lastStatusAt, {\n                  hideTime: true,\n                })}\n              </span>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && <span class=\"tag danger\">Muted</span>}\n          {blocking && <span class=\"tag danger\">Blocked</span>}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title=\"Private note\"\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button\n                type=\"button\"\n                title=\"More\"\n                class=\"plain\"\n                disabled={loading}\n              >\n                <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf && (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    states.showCompose = {\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    };\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>Mention @{username}</span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>Translate bio</span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowPrivateNoteModal(true);\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>\n                    {privateNote ? 'Edit private note' : 'Add private note'}\n                  </span>\n                </MenuItem>\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          Add/Remove from Lists\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>Add/Remove from Lists</span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acct}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast('Handle copied');\n                } catch (e) {\n                  console.error(e);\n                  showToast('Unable to copy handle');\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                Copy handle\n                <br />\n                <span class=\"more-insignificant\">\n                  @{currentInfo?.acct || acct}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast('Link copied');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to copy link');\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>Copy</span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(\"Sharing doesn't seem to work.\");\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>Share…</span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>Unmute @{username}</span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">Mute @{username}…</span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  `Muted @${username} for ${MUTE_DURATIONS_LABELS[duration]}`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {MUTE_DURATIONS_LABELS[duration]}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>Block @{username}?</span>\n                    </>\n                  }\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(`Unable to unblock @${username}`);\n                        } else {\n                          showToast(`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>Unblock @{username}</span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>Block @{username}…</span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>Report @{username}…</span>\n                </MenuItem>\n              </>\n            )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? 'Withdraw follow request?'\n                    : `Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) setRelationship(newRelationship);\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>Following</span>\n                    <span>Unfollow…</span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>Requested</span>\n                    <span>Withdraw…</span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" /> <span>Follow</span>\n                  </>\n                ) : (\n                  'Follow'\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{host}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Translated Bio</h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await masto.v1.lists.list();\n        lists.sort((a, b) => a.title.localeCompare(b.title));\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setLists(lists);\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Add/Remove from Lists</h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? 'Unable to remove from list.'\n                              : 'Unable to add to list.',\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">Unable to load lists.</p>\n        ) : (\n          <p class=\"ui-state\">No lists.</p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" /> <span>New list</span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <b>Private note about @{account?.username || account?.acct}</b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || 'Unable to update private note.');\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              Cancel\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                Save &amp; close\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root)\n    return \"0\";\n  if (RootIds.has(root))\n    return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip)\n      return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef();\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref)\n        return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current)\n            callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef();\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map","import { api } from './api';\nimport store from './store';\n\nexport async function fetchRelationships(accounts, relationshipsMap = {}) {\n  if (!accounts?.length) return;\n  const { masto } = api();\n\n  const currentAccount = store.session.get('currentAccount');\n  const uniqueAccountIds = accounts.reduce((acc, a) => {\n    // 1. Ignore duplicate accounts\n    // 2. Ignore accounts that are already inside relationshipsMap\n    // 3. Ignore currently logged in account\n    if (\n      !acc.includes(a.id) &&\n      !relationshipsMap[a.id] &&\n      a.id !== currentAccount\n    ) {\n      acc.push(a.id);\n    }\n    return acc;\n  }, []);\n  if (!uniqueAccountIds.length) return null;\n\n  try {\n    const relationships = await masto.v1.accounts.relationships.fetch({\n      id: uniqueAccountIds,\n    });\n    const newRelationshipsMap = relationships.reduce((acc, r) => {\n      acc[r.id] = r;\n      return acc;\n    }, {});\n    return newRelationshipsMap;\n  } catch (e) {\n    console.error(e);\n    // It's okay to fail\n    return null;\n  }\n}\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        queueMicrotask(async () => {\n          try {\n            const { masto } = api({ instance });\n            // const replyToStatus = await masto.v1.statuses\n            //   .$select(item.inReplyToId)\n            //   .fetch();\n            const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n              skipUnfurling: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media'] || 'default';\n  }, []);\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? 'Sensitive media' : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? `Filtered${filterTitleStr ? `: ${filterTitleStr}` : ''}`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport {\n  ControlledMenu,\n  MenuDivider,\n  MenuItem,\n  SubMenu,\n} from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport MenuLink from './menu-link';\n\nfunction NavMenu(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, setCurrentAccount] = useState();\n  const [moreThanOneAccount, setMoreThanOneAccount] = useState(false);\n\n  useEffect(() => {\n    const accounts = store.local.getJSON('accounts') || [];\n    const acc = accounts.find(\n      (account) => account.info.id === store.session.get('currentAccount'),\n    );\n    if (acc) setCurrentAccount(acc);\n    setMoreThanOneAccount(accounts.length > 1);\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes.list({\n        limit: 80,\n      });\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks.list({\n        limit: 80,\n      });\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${open ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm('Reload page now to update?');\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>New update available…</span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" /> <span>Home</span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" /> <span>Following</span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>Catch-up</span>\n              </MenuLink>\n              <MenuLink to=\"/mentions\">\n                <Icon icon=\"at\" size=\"l\" /> <span>Mentions</span>\n              </MenuLink>\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" /> <span>Notifications</span>\n                {snapStates.notificationsShowNew && (\n                  <sup title=\"New\" style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" /> <span>Profile</span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/l\">\n                <Icon icon=\"list\" size=\"l\" /> <span>Lists</span>\n              </MenuLink>\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" /> <span>Bookmarks</span>\n              </MenuLink>\n              <SubMenu\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">More…</span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" /> <span>Likes</span>\n                </MenuLink>\n                <MenuLink to=\"/ft\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>Followed Hashtags</span>\n                </MenuLink>\n                <MenuDivider />\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: 'Muted users',\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" /> Muted users&hellip;\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: 'Blocked users',\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />\n                  Blocked users&hellip;\n                </MenuItem>{' '}\n              </SubMenu>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" /> <span>Accounts&hellip;</span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" /> <span>Log in</span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" /> <span>Search</span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" /> <span>Trending</span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" /> <span>Local</span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" /> <span>Federated</span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>Keyboard shortcuts</span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>Shortcuts / Columns&hellip;</span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" /> <span>Settings&hellip;</span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" /> <span>Settings&hellip;</span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nexport default memo(NavMenu);\n","import { memo } from 'preact/compat';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n}) {\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n\n  const allowGrouping = view !== 'media';\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          let { done, value } = await fetchItems(firstLoad);\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1500,\n    {\n      leading: true,\n      trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys('j, shift+j', (_, handler) => {\n    // focus on next status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (handler.shift) {\n        // get next status that's not .timeline-item-alt\n        nextItem = allItems.find(\n          (item, index) =>\n            index > activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k, shift+k', (_, handler) => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (handler.shift) {\n        // get prev status that's not .timeline-item-alt\n        prevItem = allItems.findLast(\n          (item, index) =>\n            index < activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    // open active status\n    const activeItem = document.activeElement.closest(itemsSelector);\n    if (activeItem) {\n      activeItem.click();\n    }\n  });\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems]);\n  const dotRef = useHotkeys('.', () => {\n    if (showNewPostsIndicator) {\n      handleLoadNewPosts();\n    }\n  });\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  useEffect(() => {\n    loadItems(true);\n  }, [refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class=\"deck-container\"\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef.current = node;\n          kRef.current = node;\n          oRef.current = node;\n        }}\n        tabIndex=\"-1\"\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> New posts\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      Show more&hellip;\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">The end.</p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                Try again\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n  }) => {\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n    if (items) {\n      const fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = `${fItems.length} Boosts`;\n      } else if (type === 'pinned') {\n        title = 'Pinned posts';\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned } = item;\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact status={item} instance={instance} />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              carouselRef.current?.scrollBy({\n                left: -Math.min(320, carouselRef.current?.offsetWidth),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              carouselRef.current?.scrollBy({\n                left: Math.min(320, carouselRef.current?.offsetWidth),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance }) {\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {statusPeekText}\n        {status.sensitive && status.spoilerText && (\n          <>\n            {' '}\n            <span class=\"spoiler-badge\">\n              <Icon icon=\"eye-close\" size=\"s\" />\n            </span>\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.fetch({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.fetch({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    const results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media,\n          tagged,\n        });\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  useTitle(\n    account?.acct\n      ? `${account?.displayName ? account.displayName + ' ' : ''}@${\n          account.acct\n        }${\n          !excludeReplies\n            ? ' (+ Replies)'\n            : excludeBoosts\n            ? ' (- Boosts)'\n            : tagged\n            ? ` (#${tagged})`\n            : media\n            ? ' (Media)'\n            : month\n            ? ` (${new Date(month).toLocaleString('default', {\n                month: 'long',\n                year: 'numeric',\n              })})`\n            : ''\n        }`\n      : 'Account posts',\n    '/:instance?/a/:id',\n  );\n\n  const fetchAccountPromiseRef = useRef();\n  const fetchAccount = useCallback(() => {\n    const fetchPromise =\n      fetchAccountPromiseRef.current || masto.v1.accounts.$select(id).fetch();\n    fetchAccountPromiseRef.current = fetchPromise;\n    return fetchPromise;\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      try {\n        const featuredTags = await masto.v1.accounts\n          .$select(id)\n          .featuredTags.list();\n        console.log({ featuredTags });\n        setFeaturedTags(featuredTags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n        />\n        <div\n          class=\"filter-bar\"\n          ref={filterBarRef}\n          style={{\n            position: 'relative',\n          }}\n        >\n          {filtered ? (\n            <Link\n              to={`/${instance}/a/${id}`}\n              class=\"insignificant filter-clear\"\n              title=\"Clear filters\"\n              key=\"clear-filters\"\n            >\n              <Icon icon=\"x\" size=\"l\" />\n            </Link>\n          ) : (\n            <Icon icon=\"filter\" class=\"insignificant\" size=\"l\" />\n          )}\n          <Link\n            to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n            onClick={() => {\n              if (excludeReplies) {\n                showToast('Showing post with replies');\n              }\n            }}\n            class={excludeReplies ? '' : 'is-active'}\n          >\n            + Replies\n          </Link>\n          <Link\n            to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n            onClick={() => {\n              if (!excludeBoosts) {\n                showToast('Showing posts without boosts');\n              }\n            }}\n            class={!excludeBoosts ? '' : 'is-active'}\n          >\n            - Boosts\n          </Link>\n          <Link\n            to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n            onClick={() => {\n              if (!media) {\n                showToast('Showing posts with media');\n              }\n            }}\n            class={media ? 'is-active' : ''}\n          >\n            Media\n          </Link>\n          {featuredTags.map((tag) => (\n            <Link\n              key={tag.id}\n              to={`/${instance}/a/${id}${\n                tagged === tag.name\n                  ? ''\n                  : `?tagged=${encodeURIComponent(tag.name)}`\n              }`}\n              onClick={() => {\n                if (tagged !== tag.name) {\n                  showToast(`Showing posts tagged with #${tag.name}`);\n                }\n              }}\n              class={tagged === tag.name ? 'is-active' : ''}\n            >\n              <span>\n                <span class=\"more-insignificant\">#</span>\n                {tag.name}\n              </span>\n              {\n                // The count differs based on instance 😅\n              }\n              {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n            </Link>\n          ))}\n          {searchEnabled &&\n            (supportsInputMonth ? (\n              <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                <Icon icon=\"month\" size=\"l\" />\n                <input\n                  type=\"month\"\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e.currentTarget;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                    const [year, month] = value.split('-');\n                    const monthIndex = parseInt(month, 10) - 1;\n                    const date = new Date(year, monthIndex);\n                    showToast(\n                      `Showing posts in ${date.toLocaleString('default', {\n                        month: 'long',\n                        year: 'numeric',\n                      })}`,\n                    );\n                  }}\n                />\n              </label>\n            ) : (\n              // Fallback to <select> for month and <input type=\"number\"> for year\n              <MonthPicker\n                class={`filter-field ${month ? 'is-active' : ''}`}\n                disabled={!account?.acct}\n                value={month || ''}\n                min={MIN_YEAR_MONTH}\n                max={new Date().toISOString().slice(0, 7)}\n                onInput={(e) => {\n                  const { value, validity } = e;\n                  if (!validity.valid) return;\n                  setSearchParams(\n                    value\n                      ? {\n                          month: value,\n                        }\n                      : {},\n                  );\n                }}\n              />\n            ))}\n        </div>\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = new URL(account.url).hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <Timeline\n      key={id}\n      title={`${account?.acct ? '@' + account.acct : 'Posts'}`}\n      titleComponent={\n        <h1\n          class=\"header-double-lines header-account\"\n          // onClick={() => {\n          //   states.showAccount = {\n          //     account,\n          //     instance,\n          //   };\n          // }}\n        >\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          <div>\n            <span>@{acct}</span>\n          </div>\n        </h1>\n      }\n      id=\"account-statuses\"\n      instance={instance}\n      emptyText=\"Nothing to see here yet.\"\n      errorText=\"Unable to load posts\"\n      fetchItems={fetchAccountStatuses}\n      useItemID\n      view={media ? 'media' : undefined}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      timelineStart={TimelineStart}\n      refresh={[\n        excludeReplies,\n        excludeBoosts,\n        tagged,\n        media,\n        month + account?.acct,\n      ].toString()}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" />\n            </button>\n          }\n        >\n          <MenuItem\n            disabled={!allowSwitch}\n            onClick={() => {\n              (async () => {\n                try {\n                  const { masto } = api({\n                    instance: accountInstance,\n                  });\n                  const acc = await masto.v1.accounts.lookup({\n                    acct: account.acct,\n                  });\n                  const { id } = acc;\n                  location.hash = `/${accountInstance}/a/${id}`;\n                } catch (e) {\n                  console.error(e);\n                  alert('Unable to fetch account info');\n                }\n              })();\n            }}\n          >\n            <Icon icon=\"transfer\" />{' '}\n            <small class=\"menu-double-lines\">\n              Switch to account's instance (<b>{accountInstance}</b>)\n            </small>\n          </MenuItem>\n          {!sameCurrentInstance && (\n            <MenuItem\n              onClick={() => {\n                (async () => {\n                  try {\n                    const acc = await currentMasto.v1.accounts.lookup({\n                      acct: account.acct + '@' + instance,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${currentInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert('Unable to fetch account info');\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                Switch to my instance (<b>{currentInstance}</b>)\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nfunction MonthPicker(props) {\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">Month</option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1).toString().padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString('default', {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountStatuses;\n","import { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  useTitle('Bookmarks', '/b');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks.list({ limit: LIMIT });\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title=\"Bookmarks\"\n      id=\"bookmarks\"\n      emptyText=\"No bookmarks yet. Go bookmark something!\"\n      errorText=\"Unable to load bookmarks\"\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","import { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  useTitle('Likes', '/f');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites.list({ limit: LIMIT });\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title=\"Likes\"\n      id=\"favourites\"\n      emptyText=\"No likes yet. Go like something!\"\n      errorText=\"Unable to load likes\"\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { masto, instance } = api();\n  useTitle(`Followed Hashtags`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>Followed Hashtags</h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    {followedHashtags.length} hashtag\n                    {followedHashtags.length === 1 ? '' : 's'}\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">Unable to load followed hashtags.</p>\n          ) : (\n            <p class=\"ui-state\">No hashtags followed yet.</p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states from '../utils/states';\nimport { getStatus, saveStatus } from '../utils/states';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  useTitle(title || 'Following', path || '/following');\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterator = useRef();\n  const latestItem = useRef();\n\n  console.debug('RENDER Following', title, id);\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      homeIterator.current = masto.v1.timelines.home.list({ limit: LIMIT });\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.home\n        .list({\n          limit: 5,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      if (value?.length) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || 'Following'}\n      id={id || 'following'}\n      emptyText=\"Nothing to see here.\"\n      errorText=\"Unable to load posts.\"\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport MenuConfirm from '../components/menu-confirm';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const hashtagPostTitle = media ? ` (Media only)` : '';\n  const title = instance\n    ? `${hashtagTitle}${hashtagPostTitle} on ${instance}`\n    : `${hashtagTitle}${hashtagPostTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   });\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media,\n      })\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  return (\n    <Timeline\n      key={instance + hashtagTitle}\n      title={title}\n      titleComponent={\n        !!instance && (\n          <h1 class=\"header-double-lines\">\n            <b>{hashtagTitle}</b>\n            <div>{instance}</div>\n          </h1>\n        )\n      }\n      id=\"hashtag\"\n      instance={instance}\n      emptyText=\"No one has posted anything with this tag yet.\"\n      errorText=\"Unable to load posts with this tag\"\n      fetchItems={fetchHashtags}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      view={media ? 'media' : undefined}\n      refresh={media}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          setDownOverflow\n          overflow=\"auto\"\n          // viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" />\n            </button>\n          }\n        >\n          {!!info && hashtags.length === 1 && (\n            <>\n              <MenuConfirm\n                subMenu\n                confirm={info.following}\n                confirmLabel={`Unfollow #${hashtag}?`}\n                disabled={followUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFollowUIState('loading');\n                  if (info.following) {\n                    // const yes = confirm(`Unfollow #${hashtag}?`);\n                    // if (!yes) {\n                    //   setFollowUIState('default');\n                    //   return;\n                    // }\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .unfollow()\n                      .then(() => {\n                        setInfo({ ...info, following: false });\n                        showToast(`Unfollowed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  } else {\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .follow()\n                      .then(() => {\n                        setInfo({ ...info, following: true });\n                        showToast(`Followed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  }\n                }}\n              >\n                {info.following ? (\n                  <>\n                    <Icon icon=\"check-circle\" /> <span>Following…</span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"plus\" /> <span>Follow</span>\n                  </>\n                )}\n              </MenuConfirm>\n              <MenuDivider />\n            </>\n          )}\n          <MenuHeader className=\"plain\">Filters</MenuHeader>\n          <MenuItem\n            type=\"checkbox\"\n            checked={!!media}\n            onClick={() => {\n              if (media) {\n                searchParams.delete('media');\n              } else {\n                searchParams.set('media', '1');\n              }\n              setSearchParams(searchParams);\n            }}\n          >\n            <Icon icon=\"check-circle\" />{' '}\n            <span class=\"menu-grow\">Media only</span>\n          </MenuItem>\n          <MenuDivider />\n          <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n            {({ ref }) => (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const newHashtag = e.target[0].value?.trim?.();\n                  // Use includes but need to be case insensitive\n                  if (\n                    newHashtag &&\n                    !hashtags.some(\n                      (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                    )\n                  ) {\n                    hashtags.push(newHashtag);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }\n                }}\n              >\n                <Icon icon=\"hashtag\" />\n                <input\n                  ref={ref}\n                  type=\"text\"\n                  placeholder={\n                    reachLimit ? `Max ${TOTAL_TAGS_LIMIT} tags` : 'Add hashtag'\n                  }\n                  required\n                  autocorrect=\"off\"\n                  autocapitalize=\"off\"\n                  spellCheck={false}\n                  // no spaces, no hashtags\n                  pattern=\"[^#][^\\s#]+[^#]\"\n                  disabled={reachLimit}\n                />\n              </form>\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {hashtags.map((t, i) => (\n              <MenuItem\n                key={t}\n                disabled={hashtags.length === 1}\n                onClick={(e) => {\n                  hashtags.splice(i, 1);\n                  hashtags.sort();\n                  // navigate(\n                  //   instance\n                  //     ? `/${instance}/t/${hashtags.join('+')}`\n                  //     : `/t/${hashtags.join('+')}`,\n                  // );\n                  location.hash = instance\n                    ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                    : `/t/${hashtags.join('+')}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"x\" alt=\"Remove hashtag\" class=\"danger-icon\" />\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {t}\n                </span>\n              </MenuItem>\n            ))}\n          </MenuGroup>\n          <MenuDivider />\n          <MenuItem\n            disabled={!currentAuthenticated}\n            onClick={() => {\n              if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                alert(\n                  `Max ${SHORTCUTS_LIMIT} shortcuts reached. Unable to add shortcut.`,\n                );\n                return;\n              }\n              const shortcut = {\n                type: 'hashtag',\n                hashtag: hashtags.join(' '),\n                instance,\n                media: media ? 'on' : undefined,\n              };\n              // Check if already exists\n              const exists = states.shortcuts.some(\n                (s) =>\n                  s.type === shortcut.type &&\n                  s.hashtag\n                    .split(/[\\s+]+/)\n                    .sort()\n                    .join(' ') ===\n                    shortcut.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') &&\n                  (s.instance ? s.instance === shortcut.instance : true) &&\n                  (s.media ? !!s.media === !!shortcut.media : true),\n              );\n              if (exists) {\n                alert('This shortcut already exists');\n              } else {\n                states.shortcuts.push(shortcut);\n                showToast(`Hashtag shortcut added`);\n              }\n            }}\n          >\n            <Icon icon=\"shortcut\" /> <span>Add to Shorcuts</span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                'Enter a new instance e.g. \"mastodon.social\"',\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert('Invalid instance');\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                location.hash = `/${newInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" /> <span>Go to another instance…</span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                Go to my instance (<b>{currentInstance}</b>)\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Menu2 from '../components/menu2';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list.$select(id).list({\n        limit: LIMIT,\n      });\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      value = filteredItems(value, 'home');\n      if (value?.length) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await masto.v1.lists.$select(id).fetch();\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText=\"Nothing yet.\"\n        errorText=\"Unable to load posts.\"\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          <Link to=\"/l\" class=\"button plain\">\n            <Icon icon=\"list\" size=\"l\" />\n          </Link>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" />\n              </button>\n            }\n          >\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>Edit</span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>Manage members</span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\nfunction ListManageMembers({ listID, onClose }) {\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            });\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Manage members</h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                Show more&hellip;\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={<span>Remove @{account.username} from list?</span>}\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? 'Add' : 'Remove…'}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","import { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(`Mentions${type === 'private' ? ' (Private)' : ''}`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        types: ['mention'],\n      });\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        if (value?.length) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          All\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          Private\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title=\"Mentions\"\n      id=\"mentions\"\n      emptyText=\"No one mentioned you :(\"\n      errorText=\"Unable to load mentions.\"\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n    />\n  );\n}\n\nexport default Mentions;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\nfunction fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nfunction groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (virtualType === 'follow_request') {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification.id += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification.id += `-${id}`;\n      }\n    } else {\n      account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _accounts: [account],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification.id += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n\nexport default groupNotifications;\n","// Utils for push notifications\nimport { api } from './api';\nimport { getCurrentAccount } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const { vapidKey } = getCurrentAccount();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const { vapidKey } = getCurrentAccount();\n    const { applicationServerKey } = subscription.options;\n    const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n    const applicationServerKeyStr = new Uint8Array(\n      applicationServerKey,\n    ).toString();\n    const sameKey = vapidKeyStr === applicationServerKeyStr;\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        vapidKeyStr,\n        applicationServerKeyStr,\n        sameKey,\n      });\n      // Unsubscribe since backend doesn't have a subscription\n      await subscription.unsubscribe();\n      throw new Error('Subscription key and vapid key changed');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const { vapidKey } = getCurrentAccount();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './notifications.css';\n\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport groupNotifications from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentInstance } from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 30; // 30 is the maximum limit :(\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Notifications({ columnMode }) {\n  useTitle('Notifications', '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        excludeTypes: ['follow_request'],\n      });\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = allNotifications.value;\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = groupNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = notifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: notifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    let unsub;\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n        if (uiState === 'loading') {\n          return;\n        }\n        if (v) {\n          loadUpdates();\n        }\n        setShowNew(v);\n      });\n    }\n    return () => {\n      unsub?.();\n    };\n  });\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const statusLink = activeItem?.querySelector('.status-link');\n    if (statusLink) {\n      statusLink.click();\n    }\n  });\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        oRef.current = node;\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt=\"Home\" />\n              </Link>\n            </div>\n            <h1>Notifications</h1>\n            <div class=\"header-side\">\n              {/* <Loader hidden={uiState !== 'loading'} /> */}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> New notifications\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <b>Announcement{announcements.length > 1 ? 's' : ''}</b>{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">Follow requests</h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>{followRequests.length} follow requests</summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            Only mentions\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">Today</h2>\n        {showTodayEmpty && !!snapStates.notifications.length && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? \"You're all caught up.\" : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? 'Yesterday'\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                return (\n                  <Fragment key={notification.id}>\n                    {differentDay && <h2 class=\"timeline-header\">{heading}</h2>}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                Unable to load notifications\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  Try again\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <>Show more&hellip;</>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              Updated{' '}\n              <time datetime={updatedAtDate.toISOString()}>\n                {niceDateTime(updatedAtDate)}\n              </time>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Notifications);\n","import { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states from '../utils/states';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = `${isLocal ? 'Local' : 'Federated'} timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      publicIterator.current = masto.v1.timelines.public.list({\n        limit: LIMIT,\n        local: isLocal,\n      });\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? 'Local timeline' : 'Federated timeline'}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText=\"No one has posted anything yet.\"\n      errorText=\"Unable to load posts\"\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" /> <span>Switch to Federated</span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" /> <span>Switch to Local</span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                'Enter a new instance e.g. \"mastodon.social\"',\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert('Invalid instance');\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" /> <span>Go to another instance…</span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                Go to my instance (<b>{currentInstance}</b>)\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Search({ columnMode, ...props }) {\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  useTitle(\n    q\n      ? `Search: ${q}${\n          type\n            ? ` (${\n                {\n                  statuses: 'Posts',\n                  accounts: 'Accounts',\n                  hashtags: 'Hashtags',\n                }[type]\n              })`\n            : ''\n        }`\n      : 'Search',\n    `/search`,\n  );\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.fetch(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n            const length = results[type]?.length;\n            offsetRef.current = offsetRef.current + LIMIT;\n            setShowMore(!!length);\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      searchFormRef.current?.focus?.();\n    }\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['/', 'Slash'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n    },\n    {\n      preventDefault: true,\n    },\n  );\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div id=\"search-page\" class=\"deck-container\" ref={scrollableRef}>\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  ‹ All\n                </Link>\n              )}\n              {[\n                {\n                  label: 'Accounts',\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: 'Hashtags',\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: 'Posts',\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      Accounts{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            See more accounts <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">No accounts found.</p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      Hashtags{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            See more hashtags <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">No hashtags found.</p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      Posts{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            See more posts <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">No posts found.</p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        Show more&hellip;\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">The end.</p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              Enter your search term or paste a URL above to get started.\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","// https://gist.github.com/earthbound19/e7fe15fdf8ca3ef814750a61bc75b5ce\nfunction clamp(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst gammaToLinear = (c) =>\n  c >= 0.04045 ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92;\nconst linearToGamma = (c) =>\n  c >= 0.0031308 ? 1.055 * Math.pow(c, 1 / 2.4) - 0.055 : 12.92 * c;\n\nexport function rgb2oklab([r, g, b]) {\n  r = gammaToLinear(r / 255);\n  g = gammaToLinear(g / 255);\n  b = gammaToLinear(b / 255);\n  var l = 0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b;\n  var m = 0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b;\n  var s = 0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b;\n  l = Math.cbrt(l);\n  m = Math.cbrt(m);\n  s = Math.cbrt(s);\n  return [\n    l * +0.2104542553 + m * +0.793617785 + s * -0.0040720468,\n    l * +1.9779984951 + m * -2.428592205 + s * +0.4505937099,\n    l * +0.0259040371 + m * +0.7827717662 + s * -0.808675766,\n  ];\n}\n\nexport function oklab2rgb([L, a, b]) {\n  var l = L + a * +0.3963377774 + b * +0.2158037573;\n  var m = L + a * -0.1055613458 + b * -0.0638541728;\n  var s = L + a * -0.0894841775 + b * -1.291485548;\n  // The ** operator here cubes; same as l_*l_*l_ in the C++ example:\n  l = l ** 3;\n  m = m ** 3;\n  s = s ** 3;\n  var r = l * +4.0767416621 + m * -3.3077115913 + s * +0.2309699292;\n  var g = l * -1.2684380046 + m * +2.6097574011 + s * -0.3413193965;\n  var b = l * -0.0041960863 + m * -0.7034186147 + s * +1.707614701;\n  // Convert linear RGB values returned from oklab math to sRGB for our use before returning them:\n  r = 255 * linearToGamma(r);\n  g = 255 * linearToGamma(g);\n  b = 255 * linearToGamma(b);\n  // OPTION: clamp r g and b values to the range 0-255; but if you use the values immediately to draw, JavaScript clamps them on use:\n  r = clamp(r, 0, 255);\n  g = clamp(g, 0, 255);\n  b = clamp(b, 0, 255);\n  // OPTION: round the values. May not be necessary if you use them immediately for rendering in JavaScript, as JavaScript (also) discards decimals on render:\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  return [r, g, b];\n}\n","import '../components/links-bar.css';\n\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().next();\n  },\n  {\n    // News last much longer\n    maxAge: 10 * 60 * 1000, // 10 minutes\n  },\n);\n\nfunction Trending({ columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = `Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n  async function fetchTrend(firstLoad) {\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = masto.v1.trends.statuses.list({\n        limit: LIMIT,\n      });\n\n      // Get hashtags\n      try {\n        const iterator = masto.v1.trends.tags.list();\n        const { value: tags } = await iterator.next();\n        console.log('tags', tags);\n        if (tags?.length) {\n          setHashtags(tags);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n\n      // Get links\n      try {\n        const { value } = await fetchLinks(masto, instance);\n        // 4 types available: link, photo, video, rich\n        // Only want links for now\n        const links = value?.filter?.((link) => link.type === 'link');\n        console.log('links', links);\n        if (links?.length) {\n          setLinks(links);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span>\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>Trending News</h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const domain = new URL(url).hostname\n                .replace(/^www\\./, '')\n                .replace(/\\/$/, '');\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <a\n                  key={url}\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={\n                    accentColor\n                      ? {\n                          '--accent-color': `rgb(${accentColor.join(',')})`,\n                          '--accent-alpha-color': `rgba(${accentColor.join(\n                            ',',\n                          )}, 0.4)`,\n                        }\n                      : {}\n                  }\n                >\n                  <article>\n                    <figure>\n                      <img\n                        src={image}\n                        alt={imageDescription}\n                        width={width}\n                        height={height}\n                        loading=\"lazy\"\n                      />\n                    </figure>\n                    <div class=\"article-body\">\n                      <header>\n                        <div class=\"article-meta\">\n                          <span class=\"domain\">{domain}</span>{' '}\n                          {!!publishedAt && <>&middot; </>}\n                          {!!publishedAt && (\n                            <>\n                              <RelativeTime\n                                datetime={publishedAt}\n                                format=\"micro\"\n                              />\n                            </>\n                          )}\n                        </div>\n                        {!!title && (\n                          <h1 class=\"title\" lang={language} dir=\"auto\">\n                            {title}\n                          </h1>\n                        )}\n                      </header>\n                      {!!description && (\n                        <p class=\"description\" lang={language} dir=\"auto\">\n                          {description}\n                        </p>\n                      )}\n                    </div>\n                  </article>\n                </a>\n              );\n            })}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>Trending</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText=\"No trending posts.\"\n      errorText=\"Unable to load posts\"\n      fetchItems={fetchTrend}\n      checkForUpdates={checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                'Enter a new instance e.g. \"mastodon.social\"',\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert('Invalid instance');\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" /> <span>Go to another instance…</span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                Go to my instance (<b>{currentInstance}</b>)\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nfunction Columns() {\n  useTitle('Home', '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    try {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      document.querySelectorAll('#columns > *')[index].focus();\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport groupNotifications from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\n\nfunction Home() {\n  const snapStates = useSnapshot(states);\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title=\"Home\"\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt=\"Notifications\" />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_LIMIT = 30;\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = masto.v1.notifications.list({\n    limit: NOTIFICATIONS_LIMIT,\n  });\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = allNotifications.value;\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = groupNotifications(notifications);\n\n      states.notificationsLast = notifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: notifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications() {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        const followRequests = await fetchFollowRequests();\n        setHasFollowRequests(!!followRequests?.length);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    if (state === 'open') loadNotifications();\n  }, [state]);\n\n  return (\n    <ControlledMenu\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>Notifications</h2>\n      </header>\n      <main>\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n              .map((notification) => (\n                <Notification\n                  key={notification.id}\n                  instance={instance}\n                  notification={notification}\n                  disableContextMenu\n                />\n              ))}\n          </>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : (\n          uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>Unable to fetch notifications.</p>\n              <p>\n                <button type=\"button\" onClick={loadNotifications}>\n                  Try again\n                </button>\n              </p>\n            </div>\n          )\n        )}\n      </main>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" /> <span>Mentions</span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </>\n          ) : (\n            <b>See all</b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const { hostname, pathname } = new URL(url);\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        const { masto } = api({ instance });\n        const status = await masto.v1.statuses.$select(id).fetch();\n        if (status) {\n          window.location.hash = statusURL + '?view=full';\n          return;\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.fetch({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>Resolving…</h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>Unable to resolve URL</h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">Go home</Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  const { masto } = api();\n  useTitle(`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await masto.v1.lists.list();\n        lists.sort((a, b) => a.title.localeCompare(b.title));\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>Lists</h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt=\"New list\" />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <span>\n                        <Icon icon=\"list\" /> <span>{list.title}</span>\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    {lists.length} list\n                    {lists.length === 1 ? '' : 's'}\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">Unable to load lists.</p>\n          ) : (\n            <p class=\"ui-state\">No lists yet.</p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","export default \"__VITE_ASSET__Y_wpqkTO__\"","const { PHANPY_CLIENT_NAME: CLIENT_NAME, PHANPY_WEBSITE: WEBSITE } = import.meta\n  .env;\n\nconst SCOPES = 'read write follow push';\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: location.origin + location.pathname,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getAuthorizationURL({ instanceURL, client_id }) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: location.origin + location.pathname,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    client_secret,\n    redirect_uri: location.origin + location.pathname,\n    grant_type: 'authorization_code',\n    code,\n    scope: SCOPES,\n  });\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n","import './login.css';\n\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport { getAuthorizationURL, registerApplication } from '../utils/auth';\nimport store from '../utils/store';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  useTitle('Log in');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n    store.local.set('instanceURL', instanceURL);\n\n    (async () => {\n      setUIState('loading');\n      try {\n        const { client_id, client_secret, vapid_key } =\n          await registerApplication({\n            instanceURL,\n          });\n\n        if (client_id && client_secret) {\n          store.session.set('clientID', client_id);\n          store.session.set('clientSecret', client_secret);\n          store.session.set('vapidKey', vapid_key);\n\n          location.href = await getAuthorizationURL({\n            instanceURL,\n            client_id,\n          });\n        } else {\n          alert('Failed to register application');\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? instancesList\n        .filter((instance) => instance.includes(instanceText))\n        .sort((a, b) => {\n          // Move text that starts with instanceText to the start\n          const aStartsWith = a\n            .toLowerCase()\n            .startsWith(instanceText.toLowerCase());\n          const bStartsWith = b\n            .toLowerCase()\n            .startsWith(instanceText.toLowerCase());\n          if (aStartsWith && !bStartsWith) return -1;\n          if (!aStartsWith && bStartsWith) return 1;\n          return 0;\n        })\n        .slice(0, 10)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n    ? instancesSuggestions[0]\n    : instanceText\n    ? instancesList.find((instance) => instance.includes(instanceText))\n    : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          Log in\n        </h1>\n        <label>\n          <p>Instance</p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder=\"instance domain\"\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">e.g. &ldquo;mastodon.social&rdquo;</div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            Failed to log in. Please try again or another instance.\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? `Continue with ${selectedInstanceText}`\n              : 'Continue'}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              Don't have an account? Create one!\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">Go home</Link>\n        </p>\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport Menu2 from './menu2';\nimport MenuLink from './menu-link';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.scrollTo({\n      left: scrollLeft,\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n    carouselRef.current.focus();\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = () => {\n      onClose();\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, []);\n\n  useHotkeys(\n    'esc',\n    onClose,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(scrollLeft / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaAccentColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        const labAverageColor = rgb2oklab(averageColor);\n        return oklab2rgb([0.6, labAverageColor[1], labAverageColor[2]]);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentGradient = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    return (\n      mediaAccentColors\n        ?.map((color, i) => {\n          const start = i * range + gap;\n          const end = (i + 1) * range - gap;\n          if (color) {\n            return `\n            rgba(${color?.join(',')}, 0.4) ${start}%,\n            rgba(${color?.join(',')}, 0.4) ${end}%\n          `;\n          }\n\n          return `\n            transparent ${start}%,\n            transparent ${end}%\n          `;\n        })\n        ?.join(', ') || 'transparent'\n    );\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose();\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                backgroundImage: `linear-gradient(\n            to right, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor?.join(',')})`,\n                      '--accent-alpha-color': `rgba(${accentColor?.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={() => onClose()}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  carouselRef.current.scrollTo({\n                    left: carouselRef.current.clientWidth * i,\n                    behavior: 'smooth',\n                  });\n                  carouselRef.current.focus();\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt=\"More\" />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title=\"Open original media in new window\"\n            >\n              <Icon icon=\"popout\" />\n              <span>Open original media</span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: 'Attempting to describe image. Please wait...',\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast('Failed to describe image');\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>Describe image…</span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          <Link\n            to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n              window.matchMedia('(min-width: calc(40em + 350px))').matches\n                ? `?media=${currentIndex + 1}`\n                : ''\n            }`}\n            class=\"button carousel-button media-post-link\"\n            // onClick={() => {\n            //   // if small screen (not media query min-width 40em + 350px), run onClose\n            //   if (\n            //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n            //   ) {\n            //     onClose();\n            //   }\n            // }}\n          >\n            <span class=\"button-label\">View post </span>&raquo;\n          </Link>\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left: carouselRef.current.clientWidth * (currentIndex - 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left: carouselRef.current.clientWidth * (currentIndex + 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './status.css';\n\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? mediaStatus?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const handleMediaClose = useCallback(() => {\n    if (\n      !window.matchMedia('(min-width: calc(40em + 350px))').matches &&\n      snapStates.prevLocation\n    ) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find((s) => s.id === status.inReplyToId) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        function expandReplies(_replies) {\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            replies: expandReplies(_r.__replies),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            replies: expandReplies(s.__replies),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : 'Status',\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return new URL(url).hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys('backspace', () => {\n    location.hash = closeLink;\n  });\n\n  useHotkeys('j', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    console.log({ allStatusLinks });\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let nextStatus = allStatusLinks[activeStatusIndex + 1];\n      if (nextStatus) {\n        nextStatus.focus();\n        nextStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  useHotkeys('k', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let prevStatus = allStatusLinks[activeStatusIndex - 1];\n      if (prevStatus) {\n        prevStatus.focus();\n        prevStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys('x', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const details = activeStatus.nextElementSibling;\n      if (details && details.tagName.toLowerCase() === 'details') {\n        details.open = !details.open;\n      }\n    }\n  });\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    You're not logged in. Interactions (reply, boost, etc) are\n                    not possible.\n                  </p>\n                  <Link to=\"/login\" class=\"button\">\n                    Log in\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      This post is from another instance (<b>{instance}</b>).\n                      Interactions (reply, boost, etc) are not possible.\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.fetch({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert('Error: ' + e);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" /> Switch to my instance to enable\n                      interactions\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={1}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                Unable to load replies.\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  Try again\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title=\"Go to main post\"\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                Post{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={ancestor.account.avatar}\n                        alt={ancestor.account.displayName}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title=\"Switch to Side Peek view\"\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt=\"Actions\" size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>Refresh</span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  Switch to {viewMode === 'full' ? 'Side Peek' : 'Full'} view\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" /> <span>Show all sensitive content</span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">Experimental</MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert('Unable to switch');\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  Switch to post's instance\n                  {postInstance ? (\n                    <>\n                      {' '}\n                      (<b>{postInstance}</b>)\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li>\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  Show more&hellip;{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              Unable to load post\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                Try again\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <details\n      ref={detailsRef}\n      class=\"replies\"\n      open={openBefore || open}\n      onToggle={(e) => {\n        const { open } = e.target;\n        // use first reply as ID\n        cachedRepliesToggle[replies[0].id] = open;\n      }}\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      <summary class=\"replies-summary\" hidden={open}>\n        <span class=\"avatars\">\n          {accounts.map((a) => (\n            <Avatar\n              key={a.id}\n              url={a.avatarStatic}\n              title={`${a.displayName} @${a.username}`}\n              squircle={a?.bot}\n            />\n          ))}\n        </span>\n        <span class=\"replies-counts\">\n          <b>\n            <span title={replies.length}>{shortenNumber(replies.length)}</span>{' '}\n            repl\n            {replies.length === 1 ? 'y' : 'ies'}\n          </b>\n          {!sameCount && totalComments > 1 && (\n            <>\n              {' '}\n              &middot;{' '}\n              <span>\n                <span title={totalComments}>\n                  {shortenNumber(totalComments)}\n                </span>{' '}\n                comment\n                {totalComments === 1 ? '' : 's'}\n              </span>\n            </>\n          )}\n        </span>\n        <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n        {!!parentLink && (\n          <Link\n            class=\"replies-parent-link\"\n            to={parentLink.to}\n            onClick={parentLink.onClick}\n            title=\"View post with its replies\"\n          >\n            &raquo;\n          </Link>\n        )}\n      </summary>\n      <ul>\n        {replies.map((r) => (\n          <li key={r.id}>\n            {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n            <div class=\"status-focus\" tabIndex={0}>\n              <Status\n                statusID={r.id}\n                instance={instance}\n                withinContext\n                size=\"s\"\n                enableTranslate\n                onMediaClick={handleMediaClick}\n                showActionsBar\n              />\n              {!r.replies?.length && r.repliesCount > 0 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" />{' '}\n                  <span title={r.repliesCount}>\n                    {shortenNumber(r.repliesCount)}\n                  </span>\n                </div>\n              )}\n            </div>\n            {/* </Link> */}\n            {r.replies?.length && (\n              <SubComments\n                instance={instance}\n                replies={r.replies}\n                level={level + 1}\n                accWeight={!open ? r.weight : totalWeight}\n                openAll={openAll}\n                parentLink={{\n                  to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                  onClick: () => {\n                    resetScrollPosition(r.id);\n                  },\n                }}\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </details>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__W5CngKHO__\"","export default \"__VITE_ASSET__vmqRZ5q5__\"","export default \"__VITE_ASSET__DFAo1Udm__\"","export default \"__VITE_ASSET__D2_o1n6___\"","export default \"__VITE_ASSET__ySLnBMku__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logoText from '../assets/logo-text.svg';\nimport logo from '../assets/logo.svg';\n\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">A minimalistic opinionated Mastodon web client.</p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? 'Log in' : 'Log in with Mastodon'}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                Sign up\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                Connect your existing Mastodon/Fediverse account.\n                <br />\n                Your credentials are not stored on this server.\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n            Built\n          </a>{' '}\n          by{' '}\n          <a\n            href=\"https://mastodon.social/@cheeaun\"\n            target=\"_blank\"\n            onClick={(e) => {\n              e.preventDefault();\n              states.showAccount = 'cheeaun@mastodon.social';\n            }}\n          >\n            @cheeaun\n          </a>\n          .{' '}\n          <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n            Privacy Policy\n          </a>\n          .\n        </p>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt=\"Screenshot of Boosts Carousel\"\n              loading=\"lazy\"\n            />\n            <h4>Boosts Carousel</h4>\n            <p>\n              Visually separate original posts and re-shared posts (boosted\n              posts).\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt=\"Screenshot of nested comments thread\"\n              loading=\"lazy\"\n            />\n            <h4>Nested comments thread</h4>\n            <p>Effortlessly follow conversations. Semi-collapsible replies.</p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt=\"Screenshot of grouped notifications\"\n              loading=\"lazy\"\n            />\n            <h4>Grouped notifications</h4>\n            <p>\n              Similar notifications are grouped and collapsed to reduce clutter.\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt=\"Screenshot of multi-column UI\"\n              loading=\"lazy\"\n            />\n            <h4>Single or multi-column</h4>\n            <p>\n              By default, single column for zen-mode seekers. Configurable\n              multi-column for power users.\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt=\"Screenshot of multi-hashtag timeline with a form to add more hashtags\"\n              loading=\"lazy\"\n            />\n            <h4>Multi-hashtag timeline</h4>\n            <p>Up to 5 hashtags combined into a single timeline.</p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus first column\n      // columns.querySelector('.deck-container')?.focus?.();\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport debounce from 'just-debounce-it';\nimport { lazy, Suspense } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\nimport 'swiped-events';\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\n// import Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport Bookmarks from './pages/bookmarks';\n// import Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport { getCurrentAccount } from './utils/store-utils';\nimport './utils/toast-alert';\n\nconst Catchup = lazy(() => import('./pages/catchup'));\nconst Modals = lazy(() => import('./components/modals'));\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(() => {\n  if (!window.__IDLE__) return;\n  const { statuses, unfurledLinks, notifications } = states;\n  let keysCount = 0;\n  const { instance } = api();\n  for (const key in statuses) {\n    if (!window.__IDLE__) break;\n    try {\n      const $post = document.querySelector(\n        `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n      );\n      const postInNotifications = notifications.some(\n        (n) => key === statusKey(n.status?.id, instance),\n      );\n      if (!$post && !postInNotifications) {\n        delete states.statuses[key];\n        delete states.statusQuotes[key];\n        for (const link in unfurledLinks) {\n          const unfurled = unfurledLinks[link];\n          const sKey = statusKey(unfurled.id, unfurled.instance);\n          if (sKey === key) {\n            delete states.unfurledLinks[link];\n            break;\n          }\n        }\n        keysCount++;\n      }\n    } catch (e) {}\n  }\n  if (keysCount) {\n    console.info(`GC: Removed ${keysCount} keys`);\n  }\n}, 15 * 60 * 1000);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    queueMicrotask(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    });\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const clientID = store.session.get('clientID');\n      const clientSecret = store.session.get('clientSecret');\n      const vapidKey = store.session.get('vapidKey');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n        });\n\n        const client = initClient({ instance: instanceURL, accessToken });\n        await Promise.allSettled([\n          initInstance(client, instanceURL),\n          initAccount(client, instanceURL, accessToken, vapidKey),\n        ]);\n        initStates();\n        initPreferences(client);\n\n        setIsLoggedIn(true);\n        setUIState('default');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const account = getCurrentAccount();\n      if (account) {\n        store.session.set('currentAccount', account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        initPreferences(client);\n        setUIState('loading');\n        (async () => {\n          try {\n            await initInstance(client, instance);\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n          }\n        })();\n      } else {\n        setUIState('default');\n      }\n    }\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} loading={uiState === 'loading'} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      {uiState === 'default' && (\n        <Routes>\n          <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n        </Routes>\n      )}\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Suspense>\n        <Modals />\n      </Suspense>\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      {uiState !== 'loading' && <SearchCommand onClose={focusDeck} />}\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction PrimaryRoutes({ isLoggedIn, loading }) {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route\n        path=\"/\"\n        element={\n          isLoggedIn ? (\n            <Home />\n          ) : loading ? (\n            <Loader id=\"loader-root\" />\n          ) : (\n            <Welcome />\n          )\n        }\n      />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n    </Routes>\n  );\n}\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/ft\" element={<FollowedHashtags />} />\n          <Route\n            path=\"/catchup\"\n            element={\n              <Suspense>\n                <Catchup />\n              </Suspense>\n            }\n          />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\n\nimport './cloak-mode.css';\n\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\nimport '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\n// AbortSignal.timeout polyfill\n// Temporary fix from https://github.com/mo/abortcontroller-polyfill/issues/73#issuecomment-1541180943\n// Incorrect implementation, but should be good enough for now\nif ('AbortSignal' in window) {\n  AbortSignal.timeout =\n    AbortSignal.timeout ||\n    ((duration) => {\n      const controller = new AbortController();\n      setTimeout(() => controller.abort(), duration);\n      return controller.signal;\n    });\n}\n\nrender(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"file":"assets/main-0BOt6A3g.js"}